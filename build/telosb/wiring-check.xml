<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af08917b9a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af0891d1020"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af0891d1020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af089377590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="LinkCtrl" scoped="" ref="0x2af089176470"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af0891d2570"/></to>
    </wire>
    <wire loc="56:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2af0891d2570"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af0893aa480"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="LinkSnd" scoped="" ref="0x2af089199650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af0893b1710"/></to>
    </wire>
    <wire loc="53:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af0893b1710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af0893a9020"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="LinkRcv" scoped="" ref="0x2af0891a3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af0893b10c0"/></to>
    </wire>
    <wire loc="50:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af0893b10c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08aadd020"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2af0891a9e40"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08ab573f0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af08ab573f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08aa9fe30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af089184370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089bee020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a7f8dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a790b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a736750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a753080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a642130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a515620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a3e7820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089d297e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b28da40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a05b020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089ca9510"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089a19280"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af0899a5780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b077ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08944bc80"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af089377c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af088c8b3a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af088c8b3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af0890e1140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2af0893956c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af0891d03d0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af0891d03d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af0891ca5d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af089395dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2af0891cace0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2af0891cb910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2af0891cb910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af0891ec850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2af0891c9400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af0891cc6d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2af0891c9ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089860c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af0891ec850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af0891f57e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af089205de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af089216020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2af088e38080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2af089215360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2af0892595a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af0893016d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2af08926a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af08931fb30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2af089250700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af089306160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2af08927ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af08932ccb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2af089257aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089307480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2af08925e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af08932c020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2af089278a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af08933acb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2af0892655a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af089325220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2af08925ab10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af0892c39d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2af08927da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af0893152f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2af0892603e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089316610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2af0892695a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af089317220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2af08924f700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af0892ff7a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2af08927aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af0893492f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2af089268be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af0893356d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2af089256890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089300ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2af089249060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892aec80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2af08925eda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089324610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2af08923e0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af089308020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2af089264a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af0893446d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2af08924a690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af08930fa90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2af08927ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af0893337a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2af089253cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089310de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2af08925f1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089334ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2af089279a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af0893427a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2af0892660c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af08932eb30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2af08925db80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af089343ac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2af08927ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af08931dcb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2af08925ca20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af08933a020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2af089261570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af08931d020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2af089262020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af08933cb30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2af0892acc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892ac5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2af0892ab2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2af08935baa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2af0892ab940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2af089358260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af08930d930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892aec80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af08930b020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892ac5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af089305020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892aec80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af0893047a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892ac5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af0892fe610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892aec80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af089322c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892ac5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2af0892a5c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2af0892a42f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2af0893589f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2af0892a4940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2af089357240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af08931cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af08931a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af089314160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af0893127a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af089332610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af089331c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af08932bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af0893292f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af089348160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af0893477a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af089341610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af089340c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af089339b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af0893372f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af0890df040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2af0890dc5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2af088cfb2d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08aadd020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089b89210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af0893a83b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2af0893a7b60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089b8b020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af089b8b020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089bab680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af0893a5020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af08a851020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af08a851020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af08a84c080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2af0893b5a90"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af08a949c50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af08a949c50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af08a930b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2af0893bddf0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af08a94daa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2af0893bbc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a9525c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2af0893b8340"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08aa8dcc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08aa8dcc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b50dcb0"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2af0893b30d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08aa80800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08aa80800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089b89210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2af0893b3790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08aa7a530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08aa7a530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b590140"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2af0893b2500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08aa74140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08aa74140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089b89210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2af0893b2ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08aa70e60"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08aa70e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b5654c0"/></to>
    </wire>
    <wire loc="46:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2af0893d15f0"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2af08aae0120"/></to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2af08aae0120"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2af08b5f2200"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af089450d10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08944b4f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2af08944c020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08944d320"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af08944d320"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af0899767a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af089448bd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af089463310"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af089463310"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af089978060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2af0899a6430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2af089444400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af089978060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af0894cd050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af0894821e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af0899790c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af0899790c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af0894d1a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089978800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089973080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af0899736f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08997bc00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08997bc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af0894d31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af08997a8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af08ac7cc70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af08ac7cc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af0898d02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af0894cb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089978800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08ad07d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af0894cfca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af0894cde60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08ac7c020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08ac7c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af0898d1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af0894c6710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08ad075d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08ad075d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af0898d21d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af0894cfca0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08957a3e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af0894cd050"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af089579dc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af0894d1a70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af08957acd0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af0894d31d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08957b5b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089577570"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af0894cb1d0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af089578710"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2af0894cde60"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af089572740"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2af0894c6710"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2af089577be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af089591d30"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af089591d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af08958a550"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af089571180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af0898369a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af0898369a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af0898309d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af08956e2c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af08984d2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08958e860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af089585130"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af089591500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08958dbc0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af0895a9860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2af08967a3f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2af08967a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089770100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2af089583800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2af0896783f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2af0896783f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08976cd10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af0895a7800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2af0896763f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2af0896763f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089766740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2af0895a5800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2af0896a63f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2af0896a63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089733740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2af0895a3800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2af0896743f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2af0896743f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089738d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2af08961ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896edd10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2af08963acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089728740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2af0896883d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08971a740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2af0896973e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897a2d10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2af0896863f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089715100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2af089636cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08971fd10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2af089652020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08975b740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2af089671020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089799100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2af089660020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897ab740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2af0896803f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089741740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2af0896a43e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089787d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2af08968f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08979d740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2af089616cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896ded10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2af08967e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08973c100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2af089612cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08970a100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2af089630cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089747d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2af08964c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08974c740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2af08966b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08978b100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2af08965a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08979d740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2af089620cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896f6740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2af08963ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896fb260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2af089629cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089738d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2af08968a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08971a740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2af08969e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897b0d10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2af0896913e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08979d740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2af089657cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08972e3f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2af089642020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08976cd10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2af089665020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897b5100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2af08969c3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897ab740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2af08967c3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089775740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2af08961acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896e7740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2af089638cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089723100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2af089669020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089787d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2af089634cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08971a740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2af089650020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089756100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2af08966f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089795d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2af08965e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897a6100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2af089626e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896ca3f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2af089610cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089706d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2af08962ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089741740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2af08964a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08977e100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2af0896a23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089782740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2af0896953e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08979d740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2af089646020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089775740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2af08961ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896f1100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2af08963ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896f7d10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2af089659cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089733740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2af0896993e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897a6100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2af089654020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089760e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2af089673020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089766740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2af089662020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897b0d10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2af089618cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896e2100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2af089667020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089782740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2af089614cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08970f740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2af089632cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089715100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2af08964e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089751d10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2af08966d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089790740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2af08965c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897a2d10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2af089622cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0896c6e00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2af089640cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089701740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2af08962bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08973c100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2af089648020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08977ad10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2af0896823d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089747d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2af0896a03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897b5100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2af0896843f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089747d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2af089644020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af089770100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2af0896933e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af0897a2d10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2af0896c13f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08978b100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2af08968c060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af08971fd10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af0898309d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af089829b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089857c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af089860c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089850c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2af089845910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2af089863360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2af089863360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af08985d710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2af08984bb10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2af0898626a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2af0898626a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af0898841d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2af08984ae30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2af0898619c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2af0898619c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089880d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089888930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2af089671020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089883480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2af08966f020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af08987e020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2af08966d020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08ac7bbe0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af089591d30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08ac7b440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af0898d0ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af0898d0ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af089931400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af0898cf8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08ad07d70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af0898d02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af089932020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af089932020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b0733a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2af0898d21d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af0898ccb60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af0898d1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089933210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af089933210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08b074540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af089931400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b0728b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2af0898cbc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08958e860"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af089931cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af0898cf8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af0898b9a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af089931400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af0899559d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af0899327a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af0899327a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08b073b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08996ab20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af089591500"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b070210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af089931cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af08b0709d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af08b076330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2af08b06ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08b0dc3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08996ab20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af08b0dcb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af089955400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08b0db0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af0899559d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b0dbd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af089953720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2af0899a5de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2af0899a6430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af08999b020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af0891d1020"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2af08999b740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089993320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af089993320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089a198d0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af089a198d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089a4a810"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af089992370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af089a23110"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af089990020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089a20a40"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af089991530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089a23e70"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af0899c5080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089a1f720"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af089990c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089a21490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af089a19280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089a4a1c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089a14dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af0899c5a00"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af089a1e120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af089a17480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af089a1ed70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089a18940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af089a144a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2af089b9e6c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af089a17480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af089b83de0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af089a18940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089b836c0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2af089b82c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af089a144a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089a3e020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089a14dc0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089b80920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089a14dc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089b77dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089a14dc0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af089b81590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af089a40c40"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2af089b81e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2af089a447d0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2af089a43020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2af089b7be10"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2af089a38860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08944d320"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af089b78e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af0894821e0"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2af089aac6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2af089a5d4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2af089ab0c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2af089aa9a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2af089b7e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2af089b7e800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af089bab680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089bd0340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af089b8a050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af089baa7f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af089baa7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08a878da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af089b89df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af089bef880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af089bef880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af08a876c00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089bed760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af089bed760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08a8748f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af089bc39e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a56d550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a56d550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a5cfa80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af089bb78a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af089be1bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af089be1bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af089c12700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af089b89210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089bf1b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af089bf1b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a876020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089b86800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089beb810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089beb810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089c13670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af089bee020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08a8752d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af089bc2af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a569660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a569660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a5cbaf0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af089bd0340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af08a7ecb80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af089bd9d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a871830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2af089bd6500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2af08a873b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af089be4970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af089c14740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af089c14740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af089c12700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a7ec080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089c13670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08a56f6e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af089bd8790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af089c112e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af089c112e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af08a851020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af089be0a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af089c12080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af089c12080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af08a56ea70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2af08a8690f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089bcf430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a870860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af089c15350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2af089c15350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af08a7dcca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a86f690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af089c140f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2af089c140f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af08a7daa50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af08a86b4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af08a362b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a86fce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a564d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a86eb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a5d0640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af08a86d610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af089c66dc0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af089c66dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af089ca8970"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2af08a86a1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af089c0b990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af089c0b990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af089c04020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af08a869d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af08a7ecb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2af08a7e8d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af08a56ea70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af08a5cf020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2af08a7dcca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af08a7d1a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a7ec080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a7e42d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2af089bcee70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a7dc5f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08a7dc5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2af08a7d1370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08a56f6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08a5d1c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af089bcf430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a7decb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a7decb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a7d37b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2af089bce160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a7dd960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08a7dd960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2af08a7d24d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2af089c16560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2af08a7d9170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2af08a7d9170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2af08a7cf020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2af08a7daa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af08a7d0840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af08a7e8d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089c109f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af089c109f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089c07690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a7d86b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a73b220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08a73b220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a739a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a73a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a8522a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08a8522a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a84f3b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a851d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a7f0cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08a7f0cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af08a7ea860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a7ea860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af089c0c600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af089c0c600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af089c052e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a7d8020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a7ed980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08a7ed980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af08a7e8690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a7e8690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a797aa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08a797aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a793e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a794950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089c0b300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af089c0b300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a5197c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08a5197c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a513020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af089c04e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089c76950"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af089c76950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089ca9b80"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2af089bfb3f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2af089c71bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2af089c71bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2af089ca6740"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af089c026f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08a3f26d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af089c026f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08a51c5c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af08a51c5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08a515ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af08a3f26d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08a3e6020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2af089bf32a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2af08a3ef020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2af08a3ef020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08a3e68c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2af089bfa060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a3efcb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a3efcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a453650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af089c3b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af089c33920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af089c3a420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af08a759a20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af08a759a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af08a752a20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2af089c36110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a75baa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a75baa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a05f280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089c3abf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2af089c29b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2af089c2aba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2af089c2bc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2af089c630c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2af089ca5b40"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2af089c99d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d26220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d26220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d202e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af089c96060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af089e22370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af089e22370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e151b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2af089c95380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2af089e1fce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2af089e1fce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e58710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2af089c946a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2af089e1c380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2af089e1c380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e4fd70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2af089c920e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2af089e8d210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2af089e8d210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2af089f71a30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af089cc71d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a2b8e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a2b8e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af089cc62e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2af08a2b57b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af08a2b57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af089cc69f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2af08a2b4ae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af08a2b4ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af089cc8a80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2af08a2b6ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af08a2b6ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af089cc8160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a2b3160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a2b3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af089ccdb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2af08a311870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af08a311870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af089c893d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2af08a30f880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af08a30f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af089c89c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2af08a30e0a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af08a30e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af089cd05f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a316e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a316e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af089ccb020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a315670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a315670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af089c8d520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2af08a301500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af08a301500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af089cd1a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2af08a302ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af08a302ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af089ccb8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a312e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a312e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af089cca1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2af08a315e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af08a315e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af089ccaa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2af08a314e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af08a314e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2af089cc5d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a2efa80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a2efa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2af089cc5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a3289e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a3289e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af089c8a810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af08a362b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af089ca1020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af08a361d30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af08a361d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af08a3ac310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2af089cb9820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2af089cba940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af089d297e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af089d21a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af089d21a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b180a10"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d202e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b17f2a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08b180a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b179a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08b17f2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b1725f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08b179a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b15c510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af08b16cd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b1782a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08b1782a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b15cda0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08b16f9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af089d9e020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af089d9e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af089d985f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b158020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b1621b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b1621b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b156760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b1618f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b1618f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b155a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b15fc10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b15fc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2af08926a020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2af089261570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2af089268be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2af08925f1f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2af0892660c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2af08925e020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2af0892655a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2af08925eda0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2af089264a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2af08925db80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2af089262020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2af08925ca20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2af089dcb950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af0898309d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2af089e216a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e62d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2af089e209d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e5db70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2af089e230e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e1a710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2af089e1d020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af089e531b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e19930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af08961ccc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e13480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2af089652020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e60020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2af08961ecc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e5cde0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af089626e10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e57930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2af08964a020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e52480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2af089654020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e4c020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2af08964c020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2af089e895a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af089e74020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af089e8de30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2af089fbaa70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089e74ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2af0892695a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2af089e73da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2af08927da20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2af089e72c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2af089654020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2af089f70610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af089eb7c40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2af089eb7c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af089ea3a30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2af089fb9610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af089e65e70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2af089e65e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af089ea99d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2af089eacbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2af089e99bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2af089eb4bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2af089ea0a30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2af089eb2bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2af089e9ea30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2af089e69d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2af089ea5a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2af089eafbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2af089e9ba30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2af089eb6bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2af089ea2a30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2af089eabbc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2af089e98bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2af089eb1bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2af089e9da30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2af089eb8c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2af089ea4a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2af089eadc40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2af089e9abc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2af089eb5bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2af089ea1a30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2af089eb3bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2af089e9fa30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2af089e6adc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2af089ea6a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2af089eb0bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2af089e9ca30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af08a2b5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a310880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af08a3080a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af08a30f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af08a2fc500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a2ff500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af08a2b4490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af08a304880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a300500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af08a30a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af08a30b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a2b7a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fcb930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a2b3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af08a2b1490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a303c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af08a2b1be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a300ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af08a3040a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a314670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a3060a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af08a308880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a306880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af08a2fdce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a2ffce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af08a30b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af08a3070a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af08a301ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af08a30e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af08a2fcce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a2b6480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af08a316670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a312670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af08a3090a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af08a309880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a3100a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af08a3172f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af08a316020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a2b37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a302500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af08a2fd500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a30a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af08a307880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af08a2b5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af08a30d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af08a317940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af08a30d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af08a3030a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af08a2fb9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fc6bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fc4020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fc4db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089fc7810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fc2ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2af089fbe020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a063770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a063770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a05f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af089fc1400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a042c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a042c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08b263e70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af089fbf080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af08a09c8f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af08a09c8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af08b2602c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af08a00f680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af08a2de020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af08a2de020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af08b25f440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af089fbedf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2af08a00a120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a05f280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a05bb70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af08b25f440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af08a087850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af08b2602c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af08a088020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08b263e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a08a430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b261af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b2565d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b2565d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af08a1c72c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af08a088020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af08a0e3a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2af08b2608d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2af08a0886a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2af08a0886a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2af08a0e2060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08a085a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08b25fbe0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b249a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a0896b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af08a086690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08b257860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08b257860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a1c8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af08a0832a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08b250020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08b250020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af08a1ca4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a0896b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a0e3250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af08a087850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af08a0e2c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a08a430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a0e4470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08a0e03e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08a085a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af08a0e15b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2af08a086690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af08a0db480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2af08a0832a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2af08a0e0a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08a0d0020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08a0d0020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af08a127c70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af08a0dbc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2af08a0d92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af08a0cb5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a11f150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08a0ccd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af08a120780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af08a150bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2af08968a3f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2af08a14eb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2af0896863f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af08a14cb20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2af0896843f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2af08a14ab20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2af08967e3f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2af08a148b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2af0896803f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2af08a155d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2af08a209430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af08b2507c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a1c93f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af08b250dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af08a215540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af08a215540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2af08a209430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08b2555a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08a0d0020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b256d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1c7ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1c7ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1bcc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a1c58a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b249a80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af08a1c72c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af08a1be850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af08a1be850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b289020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2af08a1ca4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af08a1c3060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a1c8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a1bfa80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a1bfa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08b28a270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a1c93f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a1c3990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1bcc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b288400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a1bb570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a1c58a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1c2e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1bcc30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2af08a1c2060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08a0ccd10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af08a1c2840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af08a0cb5e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08a1bc020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08b2897a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b288cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a1bb570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af08b32d500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af08b28c0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2af08b32b7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2af08a202250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af08a127c70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af08a1fed40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2af08968a3f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af08a1fccb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2af0896843f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a348c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af08a2edda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a2e5b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a346670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af08a33ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af08a346e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af08a3322f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a3342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af08a2ea120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af08a33a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a3352f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af08a34ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af08a349c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af08a340670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af08a342e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af08a344670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a2ee760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a2e9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af08a2e8120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a339a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af08a2e8870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a335ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a2eadc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af08a33be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a349480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a34a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af08a2ed750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a33ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af08a33d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a33b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af08a333ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a334ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af08a341670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af08a33de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af08a336ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af08a343670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af08a332ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a2ed100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af08a2e5370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a348480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af08a340e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af08a344e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af08a33e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af08a347670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af08a2eb450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a347e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af08a2e7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af08a2e7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af08a3362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af08a338ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a2e9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a3382f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af08a3332f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a341e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af08a33c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af08a2ebaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af08a2ea770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af08a343e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af08a2e7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af08a342670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af08a33ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af08a3307a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a31bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af08a326da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a31fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a319670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af08a378e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af08a319e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af08a36b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a36d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af08a324120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af08a373670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a36f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af08a31ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af08a31dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af08a379670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af08a37be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af08a318670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a327760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a322aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af08a321120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a372a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af08a321870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a36fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a324dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af08a374e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a31d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a31e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af08a326750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a376e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af08a377670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a374670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af08a36cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a36dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af08a37a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af08a377e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af08a370ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af08a37d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af08a36bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a326100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af08a31f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a31b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af08a379e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af08a318e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af08a378670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af08a31a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af08a325450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a31ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af08a320020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af08a320cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af08a3702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af08a371ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a322450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a3712f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af08a36c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a37ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af08a376670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af08a325aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af08a324770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af08a37de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af08a320670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af08a37b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af08a373e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af08a36a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2af08a3a98c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2af08a39f020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2af08a39f020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2af08a399210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2af08a395cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2af08a384020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2af08a384020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2af08a382490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2af08a3985b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af08a408a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2af08a3848c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2af08a3855a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2af08a3855a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af08a4069e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2af08a3e3b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2af08a3c3020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2af08a3c3020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2af08a3c0d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2af08a382d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2af08a3848c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08a419260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af08a415890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af08a415890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af08a40f060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08a40c190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2af089249060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af08a405c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2af08963ecc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2af08a3ea9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2af08a4525e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2af08a3ec190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2af08a452d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2af08a4517f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d26220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2af08a443500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2af089e230e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af08a43d820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af089e22370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2af08a43cb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2af089e1d020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2af08a445880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2af089e895a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af08a43a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a4dfc30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a4dfc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a43ad10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a4de8f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a4de8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a4376d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2af08a4dd2f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a4dd2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af08a437de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2af08a4dccc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af08a4dccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af08a435530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2af08a4db370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af08a4db370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a435c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a4dad00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a4dad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af08a438e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2af08a4d4c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af08a4d4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af08a439780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2af08a5287a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af08a5287a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a438550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a4c02f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a4c02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a4343e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a4d5480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a4d5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a4335e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a4d1e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a4d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a432020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a4d0670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a4d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af08a434e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2af08a4d77b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af08a4d77b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af08a4319c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2af08a52aad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af08a52aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a432890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2af08a4bf2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a4bf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a431130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2af08a4bfad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a4bfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a42cd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a51cdf0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a51cdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a514550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a44da00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a44c9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af08a44b7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a56d550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a43eb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a565480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a565480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a5c78b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af08a42f6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a4d2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af08a4dc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a4d6c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af08a4c9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af08a4d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af08a5292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af08a4c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af08a4d5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af08a4ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af08a4cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af08a4cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af08a4d8370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a4c3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af08a4d8ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a4c0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a4da060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af08a4c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a4d4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af08a4dd940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a4c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af08a4c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a4c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af08a4cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af08a4c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af08a4c1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af08a4ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af08a529ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af08a4d6490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a4d2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af08a4cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af08a4cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af08a4c9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af08a4d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af08a4dc670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af08a4d7160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af08a4d7e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af08a4c12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af08a4c2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a4da6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a4c22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af08a52a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a4cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af08a4c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af08a4db9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af08a4cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af08a4cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af08a4c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2af08a518020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2af08a5137c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af08a4fe150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af08a511020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af089e22370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2af08a510380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2af089e216a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2af08a50f6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2af089e209d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af08a50ea50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af089e8de30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af08a50d6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af08a6bad00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af08a6bad00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af08a50c530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2af08a70cad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af08a70cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a50bad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a7296b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a7296b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af08a50b3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2af08a728370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af08a728370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a50a330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a5091e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af08a507d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a56d550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af08a509b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af089c66dc0"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a5023e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a721e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a721e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a502cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a720670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a720670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af08a503b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2af08a727160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af08a727160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af08a5006d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2af08a70c2f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af08a70c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a501590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2af08a70e2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af08a70e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a501e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2af08a70ead0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af08a70ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a4ff020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a70fad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a70fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a4ff8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2af08a6b8300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af08a6b8300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2af08a5609d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08a5d87c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af089d9e020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2af08a5c2820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af08a5e14e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af08a5c4b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af08a63c610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af08a63c610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af08a6dc2b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af08a641020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af08a6eb150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08a642130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a60d020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08a60d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b44a9d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af08a6e5640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af08a6532f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08a64e850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08a60d870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08a60d870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b4445f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08a6db690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af08a62cb70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08a62cb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af08a624610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08b44a9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b42e360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af08b43ed20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b449260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08b449260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b42ebf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08b4409b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af08a62cb70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b42add0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b433020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b433020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b428440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b432760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b432760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b427760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b431a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b431a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2af08a622b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af0898309d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2af08a64a9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af08a6e0a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af08a6d28c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af08a6c92c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af08a6c92c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af08a641020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a722c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af08a6b7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a725c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af08a719e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af08a720e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af08a72a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af08a714670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a70f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af08a724c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af08a723c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af08a71a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af08a71ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af08a71e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a6b9970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a729d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a713a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af08a728ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a729060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af08a715e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a723480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a724480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af08a6b8950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a716e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af08a717670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a715670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af08a70dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af08a71b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af08a717e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af08a710ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af08a71d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af08a725490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a722480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af08a71ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af08a71ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af08a719670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af08a721670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af08a6b7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af08a727e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af08a7102f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af08a712ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a7122f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af08a70d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a71be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af08a716670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af08a6b7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af08a72a9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af08a71de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af08a7277b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af08a71c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af08a714e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af08a70b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2af08a757920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2af08a753940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08a75d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08a753080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a736e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af08a73a020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a734ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a737690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a737690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a05f280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af08a7338f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af08a759a20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a732170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2af08a794200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2af08a790570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a78f3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af08a794950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a78fa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a7cfd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af08a7d86b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a7cdb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af08a7d8020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a7cc2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a7cb170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af08a7cbb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af08a7f7410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2af08a818db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2af08a7eb800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a7e6580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a7e6580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a05f280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a84cdd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af08a851d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2af08a84baf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a891350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af08a891350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af08a05f280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2af08a849650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af08a88f750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af08a88f750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af08a6c92c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af08a84a9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08a56f6e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a844a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2af08a8402a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af08a955580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af089bab680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af08a940060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af08a92d910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08a9517e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08a932340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af08a9511d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af08a9292c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a94e640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af089be1bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af08a946e50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af08a9364d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af08a9525c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af08a92a6b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af08a94fb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089beb810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af08a94daa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af08a93bc10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08a950470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08a931020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af08a929a00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08aa29020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08aa29020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b4afcb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2af08a9276a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08aa288b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa288b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08b4ac590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2af08a928800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08aa29c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa29c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08b4ae930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a924130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a56d550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a920270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a569660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a91c020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a565480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08aa20b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af089d9e020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2af08a91cd30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af08aa22830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af08a91a060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af08aa1de60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af08aa1de60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af08a63c610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af08a9960f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af08a926e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af089b89210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2af08a925550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af089b89df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08b4afcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b559660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08b4ae930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b4ac590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08aa26020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08b4abc10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08b4abc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089b86800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08b558460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08aa0a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b5570e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08aa0a940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08aa3f4b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08aa3e400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af089b8a050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa3d060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa3b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2af08aa3a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2af08aa3ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08b50dcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b5aee30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa8c930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08b50b930"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08b50b930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa8a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08b50a590"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b50a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08aa89c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08b509c10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08b509c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089b86800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08b5adad0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08aa0a940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b5ac720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa80dd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa7fa10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08b590140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b582390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa79270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08b590d50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08b590d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa79e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08b58f990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b58f990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08aa775d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08b58c120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08b58c120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089b86800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08b581060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08aa0a940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b581c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa74710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa73400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af08b5654c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af08b608640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aa6faa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af08b5640f0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08b5640f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aa6e720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af08b564d00"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b564d00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08aa6cda0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af08b562440"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af08b562440"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089b86800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af08b6072e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af08aa0a940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08b605020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
    <wire loc="9:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2af08b5f15c0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5df4d0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5df4d0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08aa9fe30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2af08b5ec9f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5d9d00"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5d9d00"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08aa9fe30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2af08b5e8e70"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5d24d0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5d24d0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af08aa9fe30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af08aa9fe30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af08ab08a70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af08ab010a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af08ab14180"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08ab0f690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08ab1a6b0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08ab1a6b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b65b890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08ab1be40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b662b90"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af08b662b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af08b645660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af08b6540a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b6604f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af08b6604f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af08b644020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af08b657c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af089d9e020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b640190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b64a450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b64a450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b63f770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b649a80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b649a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b63ea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b648da0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b648da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2af08ab0b950"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af08aafc490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af08aadd5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af08aadc270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="4:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="11:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:3276">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2af089273230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2af0892735d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2af089273980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2af089273d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2af0892720d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2af089272440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2af0892727d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2af089272b60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2af089271020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2af0892c5960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2af0892c5d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2af0896bc890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2af0896bcc40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2af0896bb020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2af0896bb3d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2af0896bb740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2af08982aad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2af08982aad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2af0898ef5b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2af0898e35b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2af089906d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2af089d7f9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2af089d7f9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2af089d9abb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2af089d9abb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2af089de73b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2af089de73b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2af089de77a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2af089de77a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2af089de5020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2af089de5020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2af089de53f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2af089de5bf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2af089de5bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2af089d9fdd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2af089d9fdd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2af089dc4600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2af089dc4600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2af089dc49f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2af089dc49f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2af089dc3210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2af089dc3210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2af089dc35e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af08a3be400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af08a3be400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af08a3beb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af08a3beb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af08a5e3a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af08a5e3a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af08a67acd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af08a67acd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af08a645230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af08a645230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2af08a645560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2af08a9afa00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2af08a9a86b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2af08a99e320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2af08aa06c80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2af08aa84060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2af08aa69650" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2af08aa699c0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2af08aa62020" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2af08aa62390" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="LinkSnd" ref="0x2af089199650" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkSnd" scoped="" ref="0x2af089199650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0891999d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089199b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089199cf0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089199e80"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089175030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2af08917b9a0" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af08917b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af08917bd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkCtrl" ref="0x2af089176470" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkCtrl" scoped="" ref="0x2af089176470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af0891767f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089176980"/>
        <function-ref name="start" scoped="" ref="0x2af089176b10"/>
        <function-ref name="stop" scoped="" ref="0x2af089176ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2af0891a9e40" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2af0891a9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af0891a6390"/>
        <function-ref name="fired" scoped="" ref="0x2af0891a8970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af0891a7720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af0891a72a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af0891a6c90"/>
        <function-ref name="gett0" scoped="" ref="0x2af0891a6810"/>
        <function-ref name="isRunning" scoped="" ref="0x2af0891a8df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af089197a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af0891a7d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af0891a8020"/>
        <function-ref name="stop" scoped="" ref="0x2af0891a84f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkRcv" ref="0x2af0891a3020" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkRcv" scoped="" ref="0x2af0891a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0891a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af089184370" loc="7:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af089184370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af0891846f0"/>
        <function-ref name="source" scoped="" ref="0x2af089184880"/>
        <function-ref name="address" scoped="" ref="0x2af089184a10"/>
        <function-ref name="destination" scoped="" ref="0x2af089184ba0"/>
        <function-ref name="setSource" scoped="" ref="0x2af089184d30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08917a020"/>
        <function-ref name="type" scoped="" ref="0x2af08917a1b0"/>
        <function-ref name="setType" scoped="" ref="0x2af08917a340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08917a4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08917a660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08917a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af0891ce4e0" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2af0891ce4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891ce860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af0891d1020" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af0891d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af0891d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af0891d03d0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af0891d03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891d0750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2af0891c9400" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2af0891c9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891c9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af0891ca5d0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af0891ca5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891ca950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2af0891cace0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2af0891cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891c90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2af0891c9ae0" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2af0891c9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891c9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af0891cc6d0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af0891cc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891cca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2af0891cb910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2af0891cb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891cbc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2af089205de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af089205de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af0891e8c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af0891e8310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af0891e84a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af0891e8630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af0891e8180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af0891e87c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af0891e8950"/>
        <function-ref name="initClocks" scoped="" ref="0x2af0891e8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af0891ec850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af0891ec850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891ecbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2af089216020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af089216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af089215020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af089216530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af0892166c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af089216850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af0892163a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af0892169e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af089216b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2af089216d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2af089215360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af089215360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af0892156e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af0891f57e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af0891f57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0891f5b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2af0892595a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2af0892595a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089259920"/>
        <function-ref name="getControl" scoped="" ref="0x2af089259ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089259c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089259dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089258020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af0892581b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089258340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af0892584d0"/>
        <function-ref name="setControl" scoped="" ref="0x2af089258660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2af08926a020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2af08926a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08926a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af08926a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08926a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08926a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08926a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08926ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08926ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089269020"/>
        <function-ref name="setControl" scoped="" ref="0x2af0892691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2af089250700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2af089250700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089250a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089250c10"/>
        <function-ref name="captured" scoped="" ref="0x2af089250da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08924f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08924f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08924f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2af08927ba20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2af08927ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08927bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08927a020"/>
        <function-ref name="captured" scoped="" ref="0x2af08927a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08927a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08927a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08927a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2af089257aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2af089257aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089257e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089256020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af0892561b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089256340"/>
        <function-ref name="fired" scoped="" ref="0x2af0892564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2af08925e020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2af08925e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08925e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08925e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08925e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08925e850"/>
        <function-ref name="fired" scoped="" ref="0x2af08925e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2af089278a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2af089278a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089278da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089277020"/>
        <function-ref name="captured" scoped="" ref="0x2af0892771b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089277340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892774d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089277660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2af0892655a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2af0892655a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089265920"/>
        <function-ref name="getControl" scoped="" ref="0x2af089265ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089265c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089265dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089264020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af0892641b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089264340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af0892644d0"/>
        <function-ref name="setControl" scoped="" ref="0x2af089264660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2af08925ab10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2af08925ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08923f020"/>
        <function-ref name="getControl" scoped="" ref="0x2af08923f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08923f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08923f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08923f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08923f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08923f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08923fb10"/>
        <function-ref name="setControl" scoped="" ref="0x2af08923fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2af08927da20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2af08927da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08927dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08927c020"/>
        <function-ref name="captured" scoped="" ref="0x2af08927c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08927c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08927c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08927c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2af0892603e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2af0892603e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089260760"/>
        <function-ref name="setEvent" scoped="" ref="0x2af0892608f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089260a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089260c10"/>
        <function-ref name="fired" scoped="" ref="0x2af089260da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2af0892695a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2af0892695a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089269a20"/>
        <function-ref name="getControl" scoped="" ref="0x2af089269bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089269d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089268020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0892681b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089268340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af0892684d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089268660"/>
        <function-ref name="setControl" scoped="" ref="0x2af0892687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2af08924f700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2af08924f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08924fa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08924fc10"/>
        <function-ref name="captured" scoped="" ref="0x2af08924fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08926c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08926c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08926c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2af08927aa20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2af08927aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08927ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089279020"/>
        <function-ref name="captured" scoped="" ref="0x2af0892791b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089279340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892794d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089279660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2af089268be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2af089268be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089267020"/>
        <function-ref name="getControl" scoped="" ref="0x2af0892671b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089267340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af0892674d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089267660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af0892677f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089267980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089267b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af089267ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2af089256890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2af089256890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089256c10"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089256da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089251020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af0892511b0"/>
        <function-ref name="fired" scoped="" ref="0x2af089251340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2af089249060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2af089249060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0892493e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089249570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089249700"/>
        <function-ref name="get" scoped="" ref="0x2af089249890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089249a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089249bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089249d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089247020"/>
        <function-ref name="overflow" scoped="" ref="0x2af0892471b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af089247340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af0892474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2af08925eda0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2af08925eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08925d180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08925d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08925d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08925d630"/>
        <function-ref name="fired" scoped="" ref="0x2af08925d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2af08923e0c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2af08923e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08923e440"/>
        <function-ref name="getControl" scoped="" ref="0x2af08923e5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08923e760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08923e8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08923ea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08923ec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08923eda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089259020"/>
        <function-ref name="setControl" scoped="" ref="0x2af0892591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2af089264a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2af089264a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089264dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2af089263020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0892631b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089263340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0892634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089263660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af0892637f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089263980"/>
        <function-ref name="setControl" scoped="" ref="0x2af089263b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2af08924a690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2af08924a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08924aa10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08924aba0"/>
        <function-ref name="captured" scoped="" ref="0x2af08924ad30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089250020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892501b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089250340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2af08927ca20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2af08927ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08927cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08927b020"/>
        <function-ref name="captured" scoped="" ref="0x2af08927b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08927b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08927b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08927b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2af089253cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2af089253cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af0892570a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089257230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af0892573c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089257550"/>
        <function-ref name="fired" scoped="" ref="0x2af0892576e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2af08925f1f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2af08925f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08925f570"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08925f700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08925f890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08925fa20"/>
        <function-ref name="fired" scoped="" ref="0x2af08925fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2af089279a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2af089279a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089279da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089278020"/>
        <function-ref name="captured" scoped="" ref="0x2af0892781b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089278340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892784d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089278660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2af0892660c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2af0892660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089266440"/>
        <function-ref name="getControl" scoped="" ref="0x2af0892665d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089266760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af0892668f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089266a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089266c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089266da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089265020"/>
        <function-ref name="setControl" scoped="" ref="0x2af0892651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2af08926c6c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2af08926c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08926ca40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08926cbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08926cd60"/>
        <function-ref name="get" scoped="" ref="0x2af08926b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08926b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08926b340"/>
        <function-ref name="getMode" scoped="" ref="0x2af08926b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08926b660"/>
        <function-ref name="overflow" scoped="" ref="0x2af08926b7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08926b980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08926bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2af08925db80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2af08925db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08925c020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08925c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08925c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08925c4d0"/>
        <function-ref name="fired" scoped="" ref="0x2af08925c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2af08927ea20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2af08927ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08927eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08927d020"/>
        <function-ref name="captured" scoped="" ref="0x2af08927d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08927d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08927d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08927d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2af08925ca20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2af08925ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08927e020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08927e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08927e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08927e4d0"/>
        <function-ref name="fired" scoped="" ref="0x2af08927e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2af089261570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2af089261570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af0892618f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089261a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089261c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089261da0"/>
        <function-ref name="fired" scoped="" ref="0x2af089260020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2af089262020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2af089262020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af0892623a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af089262530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0892626c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089262850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0892629e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089262b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089262d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089261020"/>
        <function-ref name="setControl" scoped="" ref="0x2af0892611b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2af0892ab2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2af0892ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892ab670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2af0892acc20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2af0892acc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2af0892ab940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2af0892ab940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892abcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2af0892ac5b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0892ac5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af0892aec80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af0892aec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0892ad0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af0892ad230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0892ad3c0"/>
        <function-ref name="get" scoped="" ref="0x2af0892ad550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af0892ad6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0892ad870"/>
        <function-ref name="getMode" scoped="" ref="0x2af0892ada00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892adb90"/>
        <function-ref name="overflow" scoped="" ref="0x2af0892add20"/>
        <function-ref name="setMode" scoped="" ref="0x2af0892ac020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af0892ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2af0892a42f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2af0892a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892a4670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2af0892a5c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2af0892a5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2af0892a4940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2af0892a4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892a4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2af0892a55b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0892a55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0892a5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af0892a7c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af0892a7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0892a60a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af0892a6230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0892a63c0"/>
        <function-ref name="get" scoped="" ref="0x2af0892a6550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af0892a66e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0892a6870"/>
        <function-ref name="getMode" scoped="" ref="0x2af0892a6a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892a6b90"/>
        <function-ref name="overflow" scoped="" ref="0x2af0892a6d20"/>
        <function-ref name="setMode" scoped="" ref="0x2af0892a5020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af0892a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af08930fa90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af08930fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08930fe10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08930d020"/>
        <function-ref name="captured" scoped="" ref="0x2af08930d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08930d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08930d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08930d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af0892c39d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af0892c39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af0892c3d50"/>
        <function-ref name="getControl" scoped="" ref="0x2af089310020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0893101b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089310340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0893104d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089310660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af0893107f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089310980"/>
        <function-ref name="setControl" scoped="" ref="0x2af089310b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af08930b020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af08930b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08930b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089310de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089310de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08930f180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08930f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08930f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08930f630"/>
        <function-ref name="fired" scoped="" ref="0x2af08930f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af08930d930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08930d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08930dcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08930de40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08930c020"/>
        <function-ref name="get" scoped="" ref="0x2af08930c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08930c340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08930c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08930c660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08930c7f0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08930c980"/>
        <function-ref name="setMode" scoped="" ref="0x2af08930cb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08930cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af089306160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af089306160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af0893064e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089306670"/>
        <function-ref name="captured" scoped="" ref="0x2af089306800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089306990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089306b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089306cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af089308020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af089308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af0893083a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af089308530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0893086c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089308850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0893089e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089308b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089308d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089307020"/>
        <function-ref name="setControl" scoped="" ref="0x2af0893071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af0893047a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0893047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089304b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089307480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089307480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089307800"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089307990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089307b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089307cb0"/>
        <function-ref name="fired" scoped="" ref="0x2af089307e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af089305020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af089305020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0893053a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089305530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0893056c0"/>
        <function-ref name="get" scoped="" ref="0x2af089305850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af0893059e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089305b70"/>
        <function-ref name="getMode" scoped="" ref="0x2af089305d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089304020"/>
        <function-ref name="overflow" scoped="" ref="0x2af0893041b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af089304340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af0893044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af0892ff7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af0892ff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af0892ffb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af0892ffcb0"/>
        <function-ref name="captured" scoped="" ref="0x2af0892ffe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0892fe020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0892fe1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af0892fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af0893016d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af0893016d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089301a50"/>
        <function-ref name="getControl" scoped="" ref="0x2af089301be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089301d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089300020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0893001b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089300340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af0893004d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089300660"/>
        <function-ref name="setControl" scoped="" ref="0x2af0893007f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af089322c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af089322c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089321020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089300ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089300ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089300e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af0892ff020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af0892ff1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af0892ff340"/>
        <function-ref name="fired" scoped="" ref="0x2af0892ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af0892fe610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af0892fe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0892fe990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af0892feb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0892fecb0"/>
        <function-ref name="get" scoped="" ref="0x2af0892fee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089322020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0893221b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089322340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0893224d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089322660"/>
        <function-ref name="setMode" scoped="" ref="0x2af0893227f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089322980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af08931dcb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af08931dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08931c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08931c230"/>
        <function-ref name="captured" scoped="" ref="0x2af08931c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08931c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08931c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08931c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af08931fb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af08931fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08931e020"/>
        <function-ref name="getControl" scoped="" ref="0x2af08931e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08931e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08931e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08931e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08931e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08931e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08931eb10"/>
        <function-ref name="setControl" scoped="" ref="0x2af08931eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af08931a2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af08931a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08931a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af08931d020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af08931d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08931d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08931d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08931d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08931d850"/>
        <function-ref name="fired" scoped="" ref="0x2af08931d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af08931cb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08931cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08931b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08931b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08931b340"/>
        <function-ref name="get" scoped="" ref="0x2af08931b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08931b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08931b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08931b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08931bb10"/>
        <function-ref name="overflow" scoped="" ref="0x2af08931bca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08931be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08931a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af0893152f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af0893152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089315670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089315800"/>
        <function-ref name="captured" scoped="" ref="0x2af089315990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089315b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089315cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089315e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af089317220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af089317220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af0893175a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af089317730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0893178c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089317a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089317be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089317d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089316020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af0893161b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af089316340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af0893127a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0893127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089312b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089316610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089316610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089316990"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089316b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089316cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089316e40"/>
        <function-ref name="fired" scoped="" ref="0x2af089315020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af089314160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af089314160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0893144e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089314670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089314800"/>
        <function-ref name="get" scoped="" ref="0x2af089314990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089314b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089314cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089314e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089312020"/>
        <function-ref name="overflow" scoped="" ref="0x2af0893121b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af089312340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af0893124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af0893337a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af0893337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089333b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089333cb0"/>
        <function-ref name="captured" scoped="" ref="0x2af089333e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089332020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0893321b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089332340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af0893356d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af0893356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089335a50"/>
        <function-ref name="getControl" scoped="" ref="0x2af089335be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089335d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089334020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0893341b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089334340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af0893344d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089334660"/>
        <function-ref name="setControl" scoped="" ref="0x2af0893347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af089331c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af089331c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089330020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089334ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089334ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089334e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089333020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af0893331b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089333340"/>
        <function-ref name="fired" scoped="" ref="0x2af0893334d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af089332610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af089332610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089332990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089332b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089332cb0"/>
        <function-ref name="get" scoped="" ref="0x2af089332e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089331020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0893311b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089331340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0893314d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089331660"/>
        <function-ref name="setMode" scoped="" ref="0x2af0893317f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089331980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af08932ccb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af08932ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08932b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af08932b230"/>
        <function-ref name="captured" scoped="" ref="0x2af08932b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08932b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08932b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af08932b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af08932eb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af08932eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08932d020"/>
        <function-ref name="getControl" scoped="" ref="0x2af08932d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08932d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08932d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08932d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08932d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08932d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08932db10"/>
        <function-ref name="setControl" scoped="" ref="0x2af08932dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af0893292f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0893292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089329670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af08932c020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af08932c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08932c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08932c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08932c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08932c850"/>
        <function-ref name="fired" scoped="" ref="0x2af08932c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af08932bb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08932bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08932a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08932a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08932a340"/>
        <function-ref name="get" scoped="" ref="0x2af08932a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08932a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08932a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08932a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08932ab10"/>
        <function-ref name="overflow" scoped="" ref="0x2af08932aca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08932ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089329020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af0893492f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af0893492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089349670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089349800"/>
        <function-ref name="captured" scoped="" ref="0x2af089349990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089349b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089349cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089349e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af089325220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af089325220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af0893255a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af089325730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af0893258c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089325a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089325be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089325d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089324020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af0893241b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af089324340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af0893477a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0893477a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089347b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089324610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089324610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089324990"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089324b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089324cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089324e40"/>
        <function-ref name="fired" scoped="" ref="0x2af089349020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af089348160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af089348160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0893484e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089348670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089348800"/>
        <function-ref name="get" scoped="" ref="0x2af089348990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089348b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089348cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089348e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089347020"/>
        <function-ref name="overflow" scoped="" ref="0x2af0893471b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af089347340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af0893474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af0893427a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af0893427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089342b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089342cb0"/>
        <function-ref name="captured" scoped="" ref="0x2af089342e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089341020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0893411b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089341340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af0893446d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af0893446d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089344a50"/>
        <function-ref name="getControl" scoped="" ref="0x2af089344be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089344d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089343020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af0893431b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089343340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af0893434d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089343660"/>
        <function-ref name="setControl" scoped="" ref="0x2af0893437f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af089340c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af089340c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08933e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af089343ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af089343ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089343e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089342020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af0893421b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089342340"/>
        <function-ref name="fired" scoped="" ref="0x2af0893424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af089341610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af089341610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089341990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089341b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089341cb0"/>
        <function-ref name="get" scoped="" ref="0x2af089341e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089340020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0893401b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089340340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0893404d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089340660"/>
        <function-ref name="setMode" scoped="" ref="0x2af0893407f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089340980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af08933acb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af08933acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af0893390a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089339230"/>
        <function-ref name="captured" scoped="" ref="0x2af0893393c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089339550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0893396e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089339870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af08933cb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af08933cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08933b020"/>
        <function-ref name="getControl" scoped="" ref="0x2af08933b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08933b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08933b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08933b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08933b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08933b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08933bb10"/>
        <function-ref name="setControl" scoped="" ref="0x2af08933bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af0893372f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af0893372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089337670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af08933a020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af08933a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08933a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08933a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08933a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08933a850"/>
        <function-ref name="fired" scoped="" ref="0x2af08933a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af089339b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af089339b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089338020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af0893381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089338340"/>
        <function-ref name="get" scoped="" ref="0x2af0893384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089338660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0893387f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089338980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089338b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af089338ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af089338e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089337020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2af089357240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2af089357240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0893575c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2af08935baa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2af08935baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08935be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2af089358260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2af089358260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0893585e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2af0893589f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2af0893589f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089358d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2af088e38080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af088e38080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af088e38400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2af088cfb2d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2af088cfb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af088cfb650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2af088ed07d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2af088ed07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2af088ed0b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2af0891eab50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af0891eab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af089376b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af0893761b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af089376340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af0893764d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af089376020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af089376660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af0893767f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2af089376980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af089395dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2af089395dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089394180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af089377590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af089377590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af089377910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2af0893956c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2af0893956c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089395a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2af089377c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af089377c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089395020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af0893951b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af089395340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af088c211d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2af088c211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af088c21550"/>
        <function-ref name="runTask" scoped="" ref="0x2af088c216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af088c8b3a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af088c8b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af088c8b720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af088c8b8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af088c8ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af0890df040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2af0890df040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af0890df3c0"/>
        <function-ref name="runTask" scoped="" ref="0x2af0890df550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2af0890dc5d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2af0890dc5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af0890dc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af0890e1140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af0890e1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0890e14c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af0890e1650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af0890e17e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af0893b1710" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af0893b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0893b1a90"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0893b1c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af0893b1db0"/>
        <function-ref name="cancel" scoped="" ref="0x2af0893b0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0893b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af0893b10c0" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af0893b10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0893b1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af0891d2570" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af0891d2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af0891d28f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af0891d2a80"/>
        <function-ref name="start" scoped="" ref="0x2af0891d2c10"/>
        <function-ref name="stop" scoped="" ref="0x2af0891d2da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2af0893a7b60" loc="18:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2af0893a7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af0893a6020"/>
        <function-ref name="stopDone" scoped="" ref="0x2af0893a61b0"/>
        <function-ref name="start" scoped="" ref="0x2af0893a6340"/>
        <function-ref name="stop" scoped="" ref="0x2af0893a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2af0893b2500" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2af0893b2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0893b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af0893a9020" loc="13:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af0893a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0893a93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0893a9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af0893a96c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af0893a9850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0893a99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2af0893bddf0" loc="21:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2af0893bddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0893a4c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0893bb590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af0893bb110"/>
        <function-ref name="cancel" scoped="" ref="0x2af0893bc580"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0893bca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2af0893b8340" loc="25:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2af0893b8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0893b86c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0893b8850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af0893b89e0"/>
        <function-ref name="cancel" scoped="" ref="0x2af0893b8b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0893b8d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2af0893b2ca0" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2af0893b2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0893d90a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0893d9230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af0893d93c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af0893d9550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0893d96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af0893a9cc0" loc="14:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af0893a9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0893a80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2af0893bbc70" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2af0893bbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0893ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af0893aa480" loc="12:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af0893aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af0893aa800"/>
        <function-ref name="stopDone" scoped="" ref="0x2af0893aa990"/>
        <function-ref name="start" scoped="" ref="0x2af0893aab20"/>
        <function-ref name="stop" scoped="" ref="0x2af0893aacb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2af0893b5a90" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2af0893b5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af0893b9890"/>
        <function-ref name="eventTime" scoped="" ref="0x2af0893b9da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2af0893b30d0" loc="26:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2af0893b30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0893b3450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2af0893b3790" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2af0893b3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0893b3b10"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0893b3ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af0893b3e30"/>
        <function-ref name="cancel" scoped="" ref="0x2af0893b2020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0893b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2af0893a5020" loc="19:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af0893a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af0893a53a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2af0893a5530"/>
        <function-ref name="getRetries" scoped="" ref="0x2af0893a56c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af0893a5850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af0893a59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af0893a83b0" loc="17:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af0893a83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af0893a8730"/>
        <function-ref name="source" scoped="" ref="0x2af0893a88c0"/>
        <function-ref name="address" scoped="" ref="0x2af0893a8a50"/>
        <function-ref name="destination" scoped="" ref="0x2af0893a8be0"/>
        <function-ref name="setSource" scoped="" ref="0x2af0893a8d70"/>
        <function-ref name="setDestination" scoped="" ref="0x2af0893a7020"/>
        <function-ref name="type" scoped="" ref="0x2af0893a71b0"/>
        <function-ref name="setType" scoped="" ref="0x2af0893a7340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af0893a74d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af0893a7660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af0893a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2af0893d15f0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af0893d15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af0893d84d0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af0893d1b00"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af0893d1c90"/>
        <function-ref name="isRunning" scoped="" ref="0x2af0893d1e20"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af0893d8020"/>
        <function-ref name="start" scoped="" ref="0x2af0893d81b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af0893d8340"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2af0893d1970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af089450d10" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af089450d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af0894520e0"/>
        <function-ref name="stop" scoped="" ref="0x2af089452270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2af089444400" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af089444400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af089444780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2af089448bd0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af089448bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08944b020"/>
        <function-ref name="receive" scoped="" ref="0x2af08944b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08944bc80" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08944bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08944a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2af08944c020" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2af08944c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08944c3a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08944c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08944b4f0" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08944b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08944b870"/>
        <function-ref name="stop" scoped="" ref="0x2af08944ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af089463310" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af089463310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089463690"/>
        <function-ref name="receive" scoped="" ref="0x2af089463820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af0894821e0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af0894821e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089482560"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af0894826f0"/>
        <function-ref name="receive" scoped="" ref="0x2af089482880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af089482a10"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af089482ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af089482d30"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089463020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08944d320" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08944d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08944d6a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08944d830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08997a8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08997a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08997ac70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08997ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af089978060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af089978060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0899783e0"/>
        <function-ref name="receive" scoped="" ref="0x2af089978570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af089978800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089978800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af089978b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af0899790c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af0899790c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089979440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af0899795d0"/>
        <function-ref name="receive" scoped="" ref="0x2af089979760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af0899798f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af089979a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af089979c10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089979da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08997bc00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08997bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08997a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08997a1b0"/>
        <function-ref name="request" scoped="" ref="0x2af08997a340"/>
        <function-ref name="granted" scoped="" ref="0x2af08997a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08997a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af0894cfca0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af0894cfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af0894d10a0"/>
        <function-ref name="configure" scoped="" ref="0x2af0894d1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af0894cd050" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af0894cd050"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0894cd3d0"/>
        <function-ref name="receive" scoped="" ref="0x2af0894cd560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af0894cb1d0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af0894cb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af0894cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af0894d1a70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af0894d1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0894d1df0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af0894ce020"/>
        <function-ref name="receive" scoped="" ref="0x2af0894ce1b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af0894ce340"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af0894ce4d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af0894ce660"/>
        <function-ref name="sendDone" scoped="" ref="0x2af0894ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af0894cde60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af0894cde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af0894cc210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af0894cc3a0"/>
        <function-ref name="request" scoped="" ref="0x2af0894cc530"/>
        <function-ref name="granted" scoped="" ref="0x2af0894cc6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af0894cc850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af0894d31d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af0894d31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af0894d3550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af0894d36e0"/>
        <function-ref name="request" scoped="" ref="0x2af0894d3870"/>
        <function-ref name="granted" scoped="" ref="0x2af0894d3a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af0894d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af0894c6710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af0894c6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af0894c6a90"/>
        <function-ref name="txDone" scoped="" ref="0x2af0894c6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af08957a3e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08957a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08957a780"/>
        <function-ref name="configure" scoped="" ref="0x2af08957a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af089579dc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af089579dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089578180"/>
        <function-ref name="receive" scoped="" ref="0x2af089578310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af089577570" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089577570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af089577910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2af089577be0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af089577be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af089576020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af0895761b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af089576340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af0895764d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af089576660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af0895767f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af089576980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af089576b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af089576ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af089576e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af089575020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af0895751b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af089575340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af0895755d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af089575760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af0895758f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af089575a80"/>
        <function-ref name="isUart" scoped="" ref="0x2af089575c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af089575da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af089574020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af0895741b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af089574340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af0895744d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af089574660"/>
        <function-ref name="getMode" scoped="" ref="0x2af0895747f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af089574b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af089574d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af089573020"/>
        <function-ref name="tx" scoped="" ref="0x2af0895731b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af089573340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af0895734d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af089573660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af0895737f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af089573980"/>
        <function-ref name="rx" scoped="" ref="0x2af089573b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af089573ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af089573e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af089572020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af0895721b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af089572340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af08957acd0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af08957acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0895790a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af089579230"/>
        <function-ref name="receive" scoped="" ref="0x2af0895793c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af089579550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af0895796e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af089579870"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089579a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af089571180" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af089571180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af089570020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0895709a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af0895704e0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089570e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af089578710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af089578710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089578ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089578c40"/>
        <function-ref name="request" scoped="" ref="0x2af089578dd0"/>
        <function-ref name="granted" scoped="" ref="0x2af089577020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af0895771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08957b5b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08957b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08957b950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08957bae0"/>
        <function-ref name="request" scoped="" ref="0x2af08957bc70"/>
        <function-ref name="granted" scoped="" ref="0x2af08957be00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08957a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af089572740" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af089572740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af089572ae0"/>
        <function-ref name="txDone" scoped="" ref="0x2af089572c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08956e2c0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08956e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08956e640"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08956e7d0"/>
        <function-ref name="led1On" scoped="" ref="0x2af08956e960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08956eaf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08956ec80"/>
        <function-ref name="get" scoped="" ref="0x2af08956ee10"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08956d020"/>
        <function-ref name="led2On" scoped="" ref="0x2af08956d660"/>
        <function-ref name="set" scoped="" ref="0x2af08956d340"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08956d1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2af08956d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af08958e860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08958e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08958ebe0"/>
        <function-ref name="txDone" scoped="" ref="0x2af08958ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2af089591500" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af089591500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af089591880"/>
        <function-ref name="stop" scoped="" ref="0x2af089591a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af089591d30" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af089591d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af0895940e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af089594270"/>
        <function-ref name="setUctl" scoped="" ref="0x2af089594400"/>
        <function-ref name="enableUart" scoped="" ref="0x2af089594590"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af089594720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af0895948b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af089594a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af089594bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af089594d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af089593020"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af0895931b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af089593340"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af0895934d0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af089593760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af0895938f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af089593a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af089593c10"/>
        <function-ref name="isUart" scoped="" ref="0x2af089593da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af089590020"/>
        <function-ref name="isSpi" scoped="" ref="0x2af0895901b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af089590340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af0895904d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af089590660"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af0895907f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089590980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af089590d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08958f020"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08958f1b0"/>
        <function-ref name="tx" scoped="" ref="0x2af08958f340"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08958f4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08958f660"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08958f7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08958f980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08958fb10"/>
        <function-ref name="rx" scoped="" ref="0x2af08958fca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08958fe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08958e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08958e1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08958e340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08958e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af0895a7800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af0895a7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0895a7b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af0895a7d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0895a6020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0895a61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0895a6340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0895a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0895a6660"/>
        <function-ref name="get" scoped="" ref="0x2af0895a67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0895a6980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0895a6b10"/>
        <function-ref name="set" scoped="" ref="0x2af0895a6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0895a6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0895a5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0895a52b0"/>
        <function-ref name="clr" scoped="" ref="0x2af0895a5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af089585130" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af089585130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af0895854b0"/>
        <function-ref name="txDone" scoped="" ref="0x2af089585640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2af0895a5800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2af0895a5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0895a5b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af0895a5d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0895a4020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0895a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0895a4340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0895a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0895a4660"/>
        <function-ref name="get" scoped="" ref="0x2af0895a47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0895a4980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0895a4b10"/>
        <function-ref name="set" scoped="" ref="0x2af0895a4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0895a4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0895a3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0895a32b0"/>
        <function-ref name="clr" scoped="" ref="0x2af0895a3440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2af0895a3800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2af0895a3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0895a3b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af0895a3d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0895a2020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0895a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0895a2340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0895a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0895a2660"/>
        <function-ref name="get" scoped="" ref="0x2af0895a27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0895a2980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0895a2b10"/>
        <function-ref name="set" scoped="" ref="0x2af0895a2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0895a2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0895a1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0895a12b0"/>
        <function-ref name="clr" scoped="" ref="0x2af0895a1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2af08958a550" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af08958a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08958a8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08958aa60"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08958abf0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08958ad80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af089589020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af0895891b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af089589340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af0895894d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af089589660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af0895897f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af089589980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af089589b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af089589ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af089588020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af0895881b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af089588340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af0895884d0"/>
        <function-ref name="isUart" scoped="" ref="0x2af089588660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af0895887f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af089588980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af089588b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af089588ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af089588e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af089587020"/>
        <function-ref name="getMode" scoped="" ref="0x2af0895871b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af089587540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af0895876d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af089587860"/>
        <function-ref name="tx" scoped="" ref="0x2af0895879f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af089587b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2af089587d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af089586020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af0895861b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af089586340"/>
        <function-ref name="rx" scoped="" ref="0x2af0895864d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af089586660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af0895867f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af089586980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af089586b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af089586ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2af08958dbc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08958dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08958a020"/>
        <function-ref name="stop" scoped="" ref="0x2af08958a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2af089583800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2af089583800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089583b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af089583d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0895a8020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0895a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0895a8340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0895a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0895a8660"/>
        <function-ref name="get" scoped="" ref="0x2af0895a87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0895a8980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0895a8b10"/>
        <function-ref name="set" scoped="" ref="0x2af0895a8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0895a8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0895a7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0895a72b0"/>
        <function-ref name="clr" scoped="" ref="0x2af0895a7440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af0895a9860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af0895a9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0895a9be0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0895a9d70"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089584020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0895841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089584340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0895844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089584660"/>
        <function-ref name="get" scoped="" ref="0x2af0895847f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089584980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089584b10"/>
        <function-ref name="set" scoped="" ref="0x2af089584ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089584e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089583020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0895832b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089583440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af08961ccc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af08961ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08961b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08961b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08961b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08961b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08961b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08961b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08961ba00"/>
        <function-ref name="get" scoped="" ref="0x2af08961bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08961bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08961a020"/>
        <function-ref name="set" scoped="" ref="0x2af08961a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08961a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08961a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08961a760"/>
        <function-ref name="clr" scoped="" ref="0x2af08961a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af08963acc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af08963acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896390a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089639230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896393c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089639550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896396e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089639870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089639a00"/>
        <function-ref name="get" scoped="" ref="0x2af089639b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089639d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089638020"/>
        <function-ref name="set" scoped="" ref="0x2af0896381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089638340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089638760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2af0896883d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2af0896883d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089688750"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896888e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089688a70"/>
        <function-ref name="toggle" scoped="" ref="0x2af089688c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089688d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089687020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896871b0"/>
        <function-ref name="get" scoped="" ref="0x2af089687340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896874d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089687660"/>
        <function-ref name="set" scoped="" ref="0x2af0896877f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089687980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089687b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089687da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089686020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2af0896973e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2af0896973e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089697760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896978f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089697a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af089697c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089697da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089696020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896961b0"/>
        <function-ref name="get" scoped="" ref="0x2af089696340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896964d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089696660"/>
        <function-ref name="set" scoped="" ref="0x2af0896967f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089696980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089696b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089696da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089695020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2af0896863f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2af0896863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089686770"/>
        <function-ref name="isInput" scoped="" ref="0x2af089686900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089686a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af089686c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089686db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089685020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896851b0"/>
        <function-ref name="get" scoped="" ref="0x2af089685340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896854d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089685660"/>
        <function-ref name="set" scoped="" ref="0x2af0896857f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089685980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089685b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089685da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089684020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2af089636cc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2af089636cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896350a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089635230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896353c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089635550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896356e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089635870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089635a00"/>
        <function-ref name="get" scoped="" ref="0x2af089635b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089635d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089634020"/>
        <function-ref name="set" scoped="" ref="0x2af0896341b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089634340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896344d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089634760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2af089652020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2af089652020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896523a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089652530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896526c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089652850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896529e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089652b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089652d00"/>
        <function-ref name="get" scoped="" ref="0x2af089651020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089651340"/>
        <function-ref name="set" scoped="" ref="0x2af0896514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089651660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089651a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089651c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2af089671020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2af089671020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896713a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089671530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896716c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089671850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896719e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089671b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089671d00"/>
        <function-ref name="get" scoped="" ref="0x2af089670020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089670340"/>
        <function-ref name="set" scoped="" ref="0x2af0896704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089670660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089670a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089670c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2af089660020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2af089660020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896603a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089660530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896606c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089660850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089660b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089660d00"/>
        <function-ref name="get" scoped="" ref="0x2af08965f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08965f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08965f340"/>
        <function-ref name="set" scoped="" ref="0x2af08965f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08965f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08965f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08965fa80"/>
        <function-ref name="clr" scoped="" ref="0x2af08965fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2af0896803f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2af0896803f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089680770"/>
        <function-ref name="isInput" scoped="" ref="0x2af089680900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089680a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af089680c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089680db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08967f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08967f1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08967f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08967f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08967f660"/>
        <function-ref name="set" scoped="" ref="0x2af08967f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08967f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08967fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08967fda0"/>
        <function-ref name="clr" scoped="" ref="0x2af08967e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2af0896a43e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2af0896a43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896a4760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896a48f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896a4a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896a4c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896a4da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896a31b0"/>
        <function-ref name="get" scoped="" ref="0x2af0896a3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896a34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896a3660"/>
        <function-ref name="set" scoped="" ref="0x2af0896a37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896a3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896a3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896a3da0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2af08968f3f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2af08968f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08968f770"/>
        <function-ref name="isInput" scoped="" ref="0x2af08968f900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08968fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af08968fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08968fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08968e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08968e1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08968e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08968e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08968e660"/>
        <function-ref name="set" scoped="" ref="0x2af08968e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08968e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08968eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08968eda0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af089616cc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af089616cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896150a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089615230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896153c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089615550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089615870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089615a00"/>
        <function-ref name="get" scoped="" ref="0x2af089615b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089615d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089614020"/>
        <function-ref name="set" scoped="" ref="0x2af0896141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089614340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089614760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2af08967e3f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2af08967e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08967e770"/>
        <function-ref name="isInput" scoped="" ref="0x2af08967e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08967ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2af08967ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08967edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08967d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08967d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08967d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08967d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08967d660"/>
        <function-ref name="set" scoped="" ref="0x2af08967d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08967d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08967db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08967dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af08967c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af089612cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af089612cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896110a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089611230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896113c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089611550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896116e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089611870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089611a00"/>
        <function-ref name="get" scoped="" ref="0x2af089611b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089611d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089610020"/>
        <function-ref name="set" scoped="" ref="0x2af0896101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089610340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089610760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2af089630cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2af089630cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08962f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08962f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08962f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08962f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08962f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08962f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08962fa00"/>
        <function-ref name="get" scoped="" ref="0x2af08962fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08962fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08962e020"/>
        <function-ref name="set" scoped="" ref="0x2af08962e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08962e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08962e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08962e760"/>
        <function-ref name="clr" scoped="" ref="0x2af08962e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2af08964c020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2af08964c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08964c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08964c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08964c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08964c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08964c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08964cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08964cd00"/>
        <function-ref name="get" scoped="" ref="0x2af08964b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08964b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08964b340"/>
        <function-ref name="set" scoped="" ref="0x2af08964b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08964b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08964b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08964ba80"/>
        <function-ref name="clr" scoped="" ref="0x2af08964bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2af08966b020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2af08966b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08966b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08966b530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08966b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08966b850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08966b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08966bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08966bd00"/>
        <function-ref name="get" scoped="" ref="0x2af08966a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08966a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08966a340"/>
        <function-ref name="set" scoped="" ref="0x2af08966a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08966a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08966a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08966aa80"/>
        <function-ref name="clr" scoped="" ref="0x2af08966ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2af08965a020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2af08965a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08965a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08965a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08965a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08965a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08965a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08965ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08965ad00"/>
        <function-ref name="get" scoped="" ref="0x2af08968d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08968d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08968d340"/>
        <function-ref name="set" scoped="" ref="0x2af08968d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08968d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08968d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08968da80"/>
        <function-ref name="clr" scoped="" ref="0x2af08968dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af089620cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af089620cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08961f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08961f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08961f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08961f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08961f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08961f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08961fa00"/>
        <function-ref name="get" scoped="" ref="0x2af08961fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08961fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08961e020"/>
        <function-ref name="set" scoped="" ref="0x2af08961e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08961e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08961e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08961e760"/>
        <function-ref name="clr" scoped="" ref="0x2af08961e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af08963ecc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af08963ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08963d180"/>
        <function-ref name="isInput" scoped="" ref="0x2af08963d310"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08963d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08963d630"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08963d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08963d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08963dae0"/>
        <function-ref name="get" scoped="" ref="0x2af08963dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08963de00"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08963c020"/>
        <function-ref name="set" scoped="" ref="0x2af08963c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08963c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08963c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08963c760"/>
        <function-ref name="clr" scoped="" ref="0x2af08963c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2af089629cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2af089629cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896280a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089628230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896283c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089628550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896286e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089628870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089628a00"/>
        <function-ref name="get" scoped="" ref="0x2af089628b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089628d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089659020"/>
        <function-ref name="set" scoped="" ref="0x2af0896591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089659340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089659760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2af08968a3f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2af08968a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08968a770"/>
        <function-ref name="isInput" scoped="" ref="0x2af08968a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08968aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af08968ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08968adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089689020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896891b0"/>
        <function-ref name="get" scoped="" ref="0x2af089689340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089689660"/>
        <function-ref name="set" scoped="" ref="0x2af0896897f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089689980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089689b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089689da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089688020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2af08969e3e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2af08969e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08969e760"/>
        <function-ref name="isInput" scoped="" ref="0x2af08969e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08969ea80"/>
        <function-ref name="toggle" scoped="" ref="0x2af08969ec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08969eda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08969d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08969d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08969d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08969d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08969d660"/>
        <function-ref name="set" scoped="" ref="0x2af08969d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08969d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08969db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08969dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af08969c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2af0896913e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2af0896913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089691760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896918f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089691a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af089691c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089691da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089690020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896901b0"/>
        <function-ref name="get" scoped="" ref="0x2af089690340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089690660"/>
        <function-ref name="set" scoped="" ref="0x2af0896907f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089690980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089690b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089690da0"/>
        <function-ref name="clr" scoped="" ref="0x2af08968f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2af0896763f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2af0896763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089676770"/>
        <function-ref name="isInput" scoped="" ref="0x2af089676900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089676a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af089676c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089676db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089675020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896751b0"/>
        <function-ref name="get" scoped="" ref="0x2af089675340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896754d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089675660"/>
        <function-ref name="set" scoped="" ref="0x2af0896757f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089675980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089675b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089675da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089674020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2af089657cc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2af089657cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089656410"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896565a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089656730"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896568c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089656a50"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089656be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089656d70"/>
        <function-ref name="get" scoped="" ref="0x2af089655020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089655340"/>
        <function-ref name="set" scoped="" ref="0x2af0896554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089655660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089655a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089655c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2af089642020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2af089642020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896423a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089642530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896426c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089642850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089642b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089642d00"/>
        <function-ref name="get" scoped="" ref="0x2af089641020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089641340"/>
        <function-ref name="set" scoped="" ref="0x2af0896414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089641660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089641a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089641c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2af089665020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2af089665020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896653a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089665530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896656c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089665850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089665b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089665d00"/>
        <function-ref name="get" scoped="" ref="0x2af089664020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089664340"/>
        <function-ref name="set" scoped="" ref="0x2af0896644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089664660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089664a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089664c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2af08969c3e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2af08969c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08969c760"/>
        <function-ref name="isInput" scoped="" ref="0x2af08969c8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08969ca80"/>
        <function-ref name="toggle" scoped="" ref="0x2af08969cc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08969cda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08969a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08969a1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08969a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08969a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08969a660"/>
        <function-ref name="set" scoped="" ref="0x2af08969a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08969a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08969ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08969ada0"/>
        <function-ref name="clr" scoped="" ref="0x2af089699020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2af08967c3e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2af08967c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08967c760"/>
        <function-ref name="isInput" scoped="" ref="0x2af08967c8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08967ca80"/>
        <function-ref name="toggle" scoped="" ref="0x2af08967cc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08967cda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08967b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08967b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08967b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08967b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08967b660"/>
        <function-ref name="set" scoped="" ref="0x2af08967b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08967b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08967bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08967bda0"/>
        <function-ref name="clr" scoped="" ref="0x2af08967a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af08961acc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af08961acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896190a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089619230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896193c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089619550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089619870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089619a00"/>
        <function-ref name="get" scoped="" ref="0x2af089619b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089619d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089618020"/>
        <function-ref name="set" scoped="" ref="0x2af0896181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089618340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089618760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af089638cc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af089638cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896370a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089637230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896373c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089637550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896376e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089637870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089637a00"/>
        <function-ref name="get" scoped="" ref="0x2af089637b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089637d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089636020"/>
        <function-ref name="set" scoped="" ref="0x2af0896361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089636340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089636760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2af089669020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2af089669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896693a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089669530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896696c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089669850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896699e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089669b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089669d00"/>
        <function-ref name="get" scoped="" ref="0x2af089668020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089668340"/>
        <function-ref name="set" scoped="" ref="0x2af0896684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089668660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089668a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089668c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2af089634cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2af089634cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896330a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089633230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896333c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089633550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896336e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089633870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089633a00"/>
        <function-ref name="get" scoped="" ref="0x2af089633b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089633d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089632020"/>
        <function-ref name="set" scoped="" ref="0x2af0896321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089632340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089632760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2af089650020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2af089650020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896503a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089650530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896506c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089650850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896509e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089650b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089650d00"/>
        <function-ref name="get" scoped="" ref="0x2af08964f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08964f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08964f340"/>
        <function-ref name="set" scoped="" ref="0x2af08964f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08964f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08964f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08964fa80"/>
        <function-ref name="clr" scoped="" ref="0x2af08964fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2af08966f020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2af08966f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08966f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08966f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08966f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08966f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08966f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08966fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08966fd00"/>
        <function-ref name="get" scoped="" ref="0x2af08966e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08966e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08966e340"/>
        <function-ref name="set" scoped="" ref="0x2af08966e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08966e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08966e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08966ea80"/>
        <function-ref name="clr" scoped="" ref="0x2af08966ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2af08965e020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2af08965e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08965e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08965e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08965e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08965e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08965e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08965eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08965ed00"/>
        <function-ref name="get" scoped="" ref="0x2af08965d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08965d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08965d340"/>
        <function-ref name="set" scoped="" ref="0x2af08965d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08965d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08965d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08965da80"/>
        <function-ref name="clr" scoped="" ref="0x2af08965dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2af0896783f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2af0896783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089678770"/>
        <function-ref name="isInput" scoped="" ref="0x2af089678900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089678a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af089678c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089678db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089677020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896771b0"/>
        <function-ref name="get" scoped="" ref="0x2af089677340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896774d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089677660"/>
        <function-ref name="set" scoped="" ref="0x2af0896777f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089677980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089677b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089677da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089676020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af089626e10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af089626e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896231c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089623350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896234e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089623670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089623800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089623990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089623b20"/>
        <function-ref name="get" scoped="" ref="0x2af089623cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089623e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089622020"/>
        <function-ref name="set" scoped="" ref="0x2af0896221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089622340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089622760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af089610cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af089610cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08960f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08960f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08960f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08960f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08960f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08960f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08960fa00"/>
        <function-ref name="get" scoped="" ref="0x2af08960fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08960fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089640020"/>
        <function-ref name="set" scoped="" ref="0x2af0896401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089640340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089640760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2af08962ecc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2af08962ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08962c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08962c230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08962c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08962c550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08962c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08962c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08962ca00"/>
        <function-ref name="get" scoped="" ref="0x2af08962cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08962cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08962b020"/>
        <function-ref name="set" scoped="" ref="0x2af08962b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08962b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08962b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08962b760"/>
        <function-ref name="clr" scoped="" ref="0x2af08962b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2af08964a020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2af08964a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08964a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08964a530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08964a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08964a850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08964a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08964ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08964ad00"/>
        <function-ref name="get" scoped="" ref="0x2af089649020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089649340"/>
        <function-ref name="set" scoped="" ref="0x2af0896494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089649660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089649a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089649c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2af0896743f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2af0896743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089674770"/>
        <function-ref name="isInput" scoped="" ref="0x2af089674900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089674a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af089674c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089674db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896a71b0"/>
        <function-ref name="get" scoped="" ref="0x2af0896a7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896a74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896a7660"/>
        <function-ref name="set" scoped="" ref="0x2af0896a77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896a7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896a7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896a7da0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2af0896a23e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2af0896a23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896a2760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896a28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896a2a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896a2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896a2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896a11b0"/>
        <function-ref name="get" scoped="" ref="0x2af0896a1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896a14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896a1660"/>
        <function-ref name="set" scoped="" ref="0x2af0896a17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896a1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896a1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896a1da0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2af0896953e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2af0896953e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089695760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896958f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089695a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af089695c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089695da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089694020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896941b0"/>
        <function-ref name="get" scoped="" ref="0x2af089694340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896944d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089694660"/>
        <function-ref name="set" scoped="" ref="0x2af0896947f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089694980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089694b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089694da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089693020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2af089646020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2af089646020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896463a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089646530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896466c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089646850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896469e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089646b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089646d00"/>
        <function-ref name="get" scoped="" ref="0x2af089645020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089645340"/>
        <function-ref name="set" scoped="" ref="0x2af0896454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089645660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089645a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089645c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2af0896a63f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2af0896a63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896a6770"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896a6900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896a6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896a6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896a6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896a51b0"/>
        <function-ref name="get" scoped="" ref="0x2af0896a5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896a54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896a5660"/>
        <function-ref name="set" scoped="" ref="0x2af0896a57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896a5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896a5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896a5da0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af08961ecc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af08961ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08961d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08961d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08961d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08961d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08961d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08961d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08961da00"/>
        <function-ref name="get" scoped="" ref="0x2af08961db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08961dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08961c020"/>
        <function-ref name="set" scoped="" ref="0x2af08961c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08961c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08961c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08961c760"/>
        <function-ref name="clr" scoped="" ref="0x2af08961c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af08963ccc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af08963ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08963b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08963b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08963b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08963b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08963b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08963b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08963ba00"/>
        <function-ref name="get" scoped="" ref="0x2af08963bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08963bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08963a020"/>
        <function-ref name="set" scoped="" ref="0x2af08963a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08963a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08963a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08963a760"/>
        <function-ref name="clr" scoped="" ref="0x2af08963a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2af089659cc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2af089659cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896580a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089658230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896583c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089658550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896586e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089658870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089658a00"/>
        <function-ref name="get" scoped="" ref="0x2af089658b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089658d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089657020"/>
        <function-ref name="set" scoped="" ref="0x2af0896571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089657340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089657760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2af08967a3f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2af08967a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08967a770"/>
        <function-ref name="isInput" scoped="" ref="0x2af08967a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08967aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af08967ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08967adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089679020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896791b0"/>
        <function-ref name="get" scoped="" ref="0x2af089679340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896794d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089679660"/>
        <function-ref name="set" scoped="" ref="0x2af0896797f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089679980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089679b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089679da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089678020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2af0896993e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2af0896993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089699760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896998f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089699a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af089699c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089699da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089698020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896981b0"/>
        <function-ref name="get" scoped="" ref="0x2af089698340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896984d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089698660"/>
        <function-ref name="set" scoped="" ref="0x2af0896987f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089698980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089698b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089698da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089697020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2af089654020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2af089654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896543a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089654530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896546c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089654850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089654b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089654d00"/>
        <function-ref name="get" scoped="" ref="0x2af089653020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089653340"/>
        <function-ref name="set" scoped="" ref="0x2af0896534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089653660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089653a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089653c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2af089673020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2af089673020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896733a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089673530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896736c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089673850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089673b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089673d00"/>
        <function-ref name="get" scoped="" ref="0x2af089672020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089672340"/>
        <function-ref name="set" scoped="" ref="0x2af0896724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089672660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089672a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089672c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2af089662020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2af089662020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896623a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089662530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896626c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089662850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089662b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089662d00"/>
        <function-ref name="get" scoped="" ref="0x2af089661020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089661340"/>
        <function-ref name="set" scoped="" ref="0x2af0896614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089661660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089661a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089661c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af089618cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af089618cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896170a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089617230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896173c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089617550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896176e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089617870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089617a00"/>
        <function-ref name="get" scoped="" ref="0x2af089617b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089617d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089616020"/>
        <function-ref name="set" scoped="" ref="0x2af0896161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089616340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089616760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2af089667020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2af089667020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896673a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089667530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896676c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089667850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089667b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089667d00"/>
        <function-ref name="get" scoped="" ref="0x2af089666020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089666340"/>
        <function-ref name="set" scoped="" ref="0x2af0896664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089666660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089666a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089666c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af089614cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af089614cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896130a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089613230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896133c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089613550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896136e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089613870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089613a00"/>
        <function-ref name="get" scoped="" ref="0x2af089613b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089613d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089612020"/>
        <function-ref name="set" scoped="" ref="0x2af0896121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089612340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089612760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896128f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2af089632cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2af089632cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896310a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089631230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896313c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089631550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896316e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089631870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089631a00"/>
        <function-ref name="get" scoped="" ref="0x2af089631b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089631d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089630020"/>
        <function-ref name="set" scoped="" ref="0x2af0896301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089630340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089630760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2af08964e020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2af08964e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08964e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08964e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08964e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08964e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08964e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08964eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08964ed00"/>
        <function-ref name="get" scoped="" ref="0x2af08964d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08964d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08964d340"/>
        <function-ref name="set" scoped="" ref="0x2af08964d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08964d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08964d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08964da80"/>
        <function-ref name="clr" scoped="" ref="0x2af08964dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2af08966d020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2af08966d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08966d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08966d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08966d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08966d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08966d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08966db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08966dd00"/>
        <function-ref name="get" scoped="" ref="0x2af08966c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08966c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08966c340"/>
        <function-ref name="set" scoped="" ref="0x2af08966c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08966c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08966c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08966ca80"/>
        <function-ref name="clr" scoped="" ref="0x2af08966cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2af08965c020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2af08965c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08965c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08965c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08965c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08965c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08965c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08965cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08965cd00"/>
        <function-ref name="get" scoped="" ref="0x2af08965b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08965b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08965b340"/>
        <function-ref name="set" scoped="" ref="0x2af08965b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08965b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08965b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08965ba80"/>
        <function-ref name="clr" scoped="" ref="0x2af08965bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af089622cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af089622cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896210a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089621230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896213c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089621550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896216e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089621870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089621a00"/>
        <function-ref name="get" scoped="" ref="0x2af089621b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089621d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089620020"/>
        <function-ref name="set" scoped="" ref="0x2af0896201b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089620340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896204d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089620760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af089640cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af089640cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08963f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08963f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08963f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08963f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08963f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08963f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08963fa00"/>
        <function-ref name="get" scoped="" ref="0x2af08963fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08963fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08963e020"/>
        <function-ref name="set" scoped="" ref="0x2af08963e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08963e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08963e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08963e760"/>
        <function-ref name="clr" scoped="" ref="0x2af08963e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2af08962bcc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2af08962bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08962a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08962a230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08962a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08962a550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08962a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08962a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08962aa00"/>
        <function-ref name="get" scoped="" ref="0x2af08962ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08962ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089629020"/>
        <function-ref name="set" scoped="" ref="0x2af0896291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089629340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089629760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2af089648020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2af089648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896483a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089648530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896486c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089648850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896489e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089648b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089648d00"/>
        <function-ref name="get" scoped="" ref="0x2af089647020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089647340"/>
        <function-ref name="set" scoped="" ref="0x2af0896474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089647660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089647a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089647c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2af0896823d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2af0896823d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089682750"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896828e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089682a70"/>
        <function-ref name="toggle" scoped="" ref="0x2af089682c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089682d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089681020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896811b0"/>
        <function-ref name="get" scoped="" ref="0x2af089681340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896814d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089681660"/>
        <function-ref name="set" scoped="" ref="0x2af0896817f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089681980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089681b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089681da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089680020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2af0896a03e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2af0896a03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896a0760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896a08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896a0a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896a0c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896a0da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08969f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08969f1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08969f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08969f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08969f660"/>
        <function-ref name="set" scoped="" ref="0x2af08969f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08969f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08969fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08969fda0"/>
        <function-ref name="clr" scoped="" ref="0x2af08969e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2af0896843f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2af0896843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089684770"/>
        <function-ref name="isInput" scoped="" ref="0x2af089684900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089684a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af089684c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089684db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089683020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896831b0"/>
        <function-ref name="get" scoped="" ref="0x2af089683340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896834d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089683660"/>
        <function-ref name="set" scoped="" ref="0x2af0896837f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089683980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089683b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089683da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089682020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2af089644020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2af089644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896443a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089644530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896446c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089644850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896449e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089644b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089644d00"/>
        <function-ref name="get" scoped="" ref="0x2af089643020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089643340"/>
        <function-ref name="set" scoped="" ref="0x2af0896434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089643660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089643a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089643c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2af0896933e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2af0896933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089693760"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896938f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089693a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af089693c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089693da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089692020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896921b0"/>
        <function-ref name="get" scoped="" ref="0x2af089692340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896924d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089692660"/>
        <function-ref name="set" scoped="" ref="0x2af0896927f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089692980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089692b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089692da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089691020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2af0896c13f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2af0896c13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896c1770"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896c1900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896c1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896c1c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896c1db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896c0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896c01b0"/>
        <function-ref name="get" scoped="" ref="0x2af0896c0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896c04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896c0660"/>
        <function-ref name="set" scoped="" ref="0x2af0896c07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896c0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896c0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896c0da0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2af08968c060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2af08968c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08968c7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08968c970"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08968cb00"/>
        <function-ref name="toggle" scoped="" ref="0x2af08968cc90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08968ce20"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08968b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08968b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08968b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08968b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08968b660"/>
        <function-ref name="set" scoped="" ref="0x2af08968b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08968b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08968bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08968bda0"/>
        <function-ref name="clr" scoped="" ref="0x2af08968a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896ca3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896ca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896ca770"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896ca900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896caa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896cac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896cadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896c9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896c91b0"/>
        <function-ref name="get" scoped="" ref="0x2af0896c9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896c94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896c9660"/>
        <function-ref name="set" scoped="" ref="0x2af0896c97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896c9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896c9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896c9da0"/>
        <function-ref name="clr" scoped="" ref="0x2af0896c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896c6e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896c6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896c51c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896c5350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896c54e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896c5670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896c5800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896c5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896c5b20"/>
        <function-ref name="get" scoped="" ref="0x2af0896c5cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896c5e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896c4020"/>
        <function-ref name="set" scoped="" ref="0x2af0896c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896c4760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896f6740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896f6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896f6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896f6de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896f51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896f54d0"/>
        <function-ref name="get" scoped="" ref="0x2af0896f5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896f5980"/>
        <function-ref name="set" scoped="" ref="0x2af0896f5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896f5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896f5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896f4120"/>
        <function-ref name="clr" scoped="" ref="0x2af0896f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896f1100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896f1480"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896f1610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896f17a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896f1930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896f1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896f1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896f1de0"/>
        <function-ref name="get" scoped="" ref="0x2af0896f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896f01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896f0340"/>
        <function-ref name="set" scoped="" ref="0x2af0896f04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896f0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896f07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896f0a80"/>
        <function-ref name="clr" scoped="" ref="0x2af0896f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896edd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896edd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896eb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896eb270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896eb400"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896eb590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896eb720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896eb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896eba40"/>
        <function-ref name="get" scoped="" ref="0x2af0896ebbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896ebd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896ea020"/>
        <function-ref name="set" scoped="" ref="0x2af0896ea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896ea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896ea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896ea760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896ea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896e7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896e7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896e7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896e7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896e7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896e6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896e64d0"/>
        <function-ref name="get" scoped="" ref="0x2af0896e6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896e67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896e6980"/>
        <function-ref name="set" scoped="" ref="0x2af0896e6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896e6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896e6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896e5120"/>
        <function-ref name="clr" scoped="" ref="0x2af0896e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896e2100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896e2480"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896e2610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896e27a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896e2930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896e2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896e2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896e2de0"/>
        <function-ref name="get" scoped="" ref="0x2af0896e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896e11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896e1340"/>
        <function-ref name="set" scoped="" ref="0x2af0896e14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896e1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896e17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896e1a80"/>
        <function-ref name="clr" scoped="" ref="0x2af0896e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896ded10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896ded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896dd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896dd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896dd400"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896dd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896dd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896dd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896dda40"/>
        <function-ref name="get" scoped="" ref="0x2af0896ddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896ddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896dc020"/>
        <function-ref name="set" scoped="" ref="0x2af0896dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896dc760"/>
        <function-ref name="clr" scoped="" ref="0x2af0896dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08970f740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08970f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08970fac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08970fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08970fde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08970e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08970e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08970e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08970e4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08970e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08970e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08970e980"/>
        <function-ref name="set" scoped="" ref="0x2af08970eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08970eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08970ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08970d120"/>
        <function-ref name="clr" scoped="" ref="0x2af08970d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08970a100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08970a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08970a480"/>
        <function-ref name="isInput" scoped="" ref="0x2af08970a610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08970a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08970a930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08970aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08970ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08970ade0"/>
        <function-ref name="get" scoped="" ref="0x2af089709020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897091b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089709340"/>
        <function-ref name="set" scoped="" ref="0x2af0897094d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089709660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089709a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089709c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089706d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089706d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897050e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089705270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089705400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089705590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089705720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897058b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089705a40"/>
        <function-ref name="get" scoped="" ref="0x2af089705bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089705d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089704020"/>
        <function-ref name="set" scoped="" ref="0x2af0897041b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089704340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897044d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089704760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897048f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089701740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089701740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089701ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089701c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089701de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089700020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897001b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089700340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897004d0"/>
        <function-ref name="get" scoped="" ref="0x2af089700660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897007f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089700980"/>
        <function-ref name="set" scoped="" ref="0x2af089700b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089700ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089700e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896ff120"/>
        <function-ref name="clr" scoped="" ref="0x2af0896ff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896fb260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896fb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0896fb5e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0896fb770"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0896fb900"/>
        <function-ref name="toggle" scoped="" ref="0x2af0896fba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0896fbc20"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0896fbdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0896fa020"/>
        <function-ref name="get" scoped="" ref="0x2af0896fa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0896fa340"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0896fa4d0"/>
        <function-ref name="set" scoped="" ref="0x2af0896fa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0896fa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0896fa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0896fac10"/>
        <function-ref name="clr" scoped="" ref="0x2af0896fada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0896f7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0896f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08972c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08972c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08972c400"/>
        <function-ref name="toggle" scoped="" ref="0x2af08972c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08972c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08972c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08972ca40"/>
        <function-ref name="get" scoped="" ref="0x2af08972cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08972cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08972b020"/>
        <function-ref name="set" scoped="" ref="0x2af08972b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08972b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08972b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08972b760"/>
        <function-ref name="clr" scoped="" ref="0x2af08972b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089728740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089728740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089728ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089728c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089728de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089727020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897271b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089727340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897274d0"/>
        <function-ref name="get" scoped="" ref="0x2af089727660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089727980"/>
        <function-ref name="set" scoped="" ref="0x2af089727b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089727ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089727e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089726120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089723100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089723100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089723480"/>
        <function-ref name="isInput" scoped="" ref="0x2af089723610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897237a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089723930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089723ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089723c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089723de0"/>
        <function-ref name="get" scoped="" ref="0x2af089722020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089722340"/>
        <function-ref name="set" scoped="" ref="0x2af0897224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089722660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089722a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089722c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08971fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08971fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08971e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08971e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08971e400"/>
        <function-ref name="toggle" scoped="" ref="0x2af08971e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08971e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08971e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08971ea40"/>
        <function-ref name="get" scoped="" ref="0x2af08971ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08971ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08971d020"/>
        <function-ref name="set" scoped="" ref="0x2af08971d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08971d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08971d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08971d760"/>
        <function-ref name="clr" scoped="" ref="0x2af08971d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08971a740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08971a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08971aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08971ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08971ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089719020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089719340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897194d0"/>
        <function-ref name="get" scoped="" ref="0x2af089719660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089719980"/>
        <function-ref name="set" scoped="" ref="0x2af089719b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089719ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089719e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089718120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089715100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089715100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089715480"/>
        <function-ref name="isInput" scoped="" ref="0x2af089715610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897157a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089715930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089715ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089715c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089715de0"/>
        <function-ref name="get" scoped="" ref="0x2af089714020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089714340"/>
        <function-ref name="set" scoped="" ref="0x2af0897144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089714660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089714a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089714c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089747d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089747d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897450e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089745270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089745400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089745590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089745720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089745a40"/>
        <function-ref name="get" scoped="" ref="0x2af089745bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089745d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089744020"/>
        <function-ref name="set" scoped="" ref="0x2af0897441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089744340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089744760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089741740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089741740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089741ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089741c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089741de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089740020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089740340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897404d0"/>
        <function-ref name="get" scoped="" ref="0x2af089740660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089740980"/>
        <function-ref name="set" scoped="" ref="0x2af089740b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089740ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089740e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08973f120"/>
        <function-ref name="clr" scoped="" ref="0x2af08973f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08973c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08973c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08973c480"/>
        <function-ref name="isInput" scoped="" ref="0x2af08973c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08973c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08973c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08973cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08973cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08973cde0"/>
        <function-ref name="get" scoped="" ref="0x2af08973b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08973b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08973b340"/>
        <function-ref name="set" scoped="" ref="0x2af08973b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08973b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08973b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08973ba80"/>
        <function-ref name="clr" scoped="" ref="0x2af08973bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089738d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089738d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897370e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089737270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089737400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089737590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089737720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089737a40"/>
        <function-ref name="get" scoped="" ref="0x2af089737bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089737d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089736020"/>
        <function-ref name="set" scoped="" ref="0x2af0897361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089736340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089736760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089733740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089733740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089733ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089733c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089733de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089732020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089732340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897324d0"/>
        <function-ref name="get" scoped="" ref="0x2af089732660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089732980"/>
        <function-ref name="set" scoped="" ref="0x2af089732b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089732ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089732e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089731120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08972e3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08972e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08972e770"/>
        <function-ref name="isInput" scoped="" ref="0x2af08972e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08972ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2af08972ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08972edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08972d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08972d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08972d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08972d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08972d660"/>
        <function-ref name="set" scoped="" ref="0x2af08972d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08972d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08972db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08972dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af089762020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089760e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089760e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08975f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08975f350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08975f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08975f670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08975f800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08975f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08975fb20"/>
        <function-ref name="get" scoped="" ref="0x2af08975fcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08975fe40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08975e020"/>
        <function-ref name="set" scoped="" ref="0x2af08975e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08975e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08975e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08975e760"/>
        <function-ref name="clr" scoped="" ref="0x2af08975e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08975b740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08975b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08975bac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08975bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08975bde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08975a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08975a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08975a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08975a4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08975a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08975a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08975a980"/>
        <function-ref name="set" scoped="" ref="0x2af08975ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08975aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08975ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089759120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089756100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089756100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089756480"/>
        <function-ref name="isInput" scoped="" ref="0x2af089756610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897567a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089756930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089756ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089756c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089756de0"/>
        <function-ref name="get" scoped="" ref="0x2af089754020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089754340"/>
        <function-ref name="set" scoped="" ref="0x2af0897544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089754660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089754a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089754c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089751d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089751d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897500e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089750270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089750400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089750590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089750720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897508b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089750a40"/>
        <function-ref name="get" scoped="" ref="0x2af089750bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089750d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08974f020"/>
        <function-ref name="set" scoped="" ref="0x2af08974f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08974f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08974f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08974f760"/>
        <function-ref name="clr" scoped="" ref="0x2af08974f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08974c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08974c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08974cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08974cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08974cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08974b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08974b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08974b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08974b4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08974b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08974b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08974b980"/>
        <function-ref name="set" scoped="" ref="0x2af08974bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08974bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08974be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08974a120"/>
        <function-ref name="clr" scoped="" ref="0x2af08974a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08977e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08977e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08977e480"/>
        <function-ref name="isInput" scoped="" ref="0x2af08977e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08977e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08977e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08977eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08977ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08977ede0"/>
        <function-ref name="get" scoped="" ref="0x2af08977d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08977d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08977d340"/>
        <function-ref name="set" scoped="" ref="0x2af08977d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08977d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08977d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08977da80"/>
        <function-ref name="clr" scoped="" ref="0x2af08977dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08977ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08977ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897790e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089779270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089779400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089779590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089779720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089779a40"/>
        <function-ref name="get" scoped="" ref="0x2af089779bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089779d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089778020"/>
        <function-ref name="set" scoped="" ref="0x2af0897781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089778340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089778760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089775740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089775740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089775ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089775c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089775de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089774020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089774340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897744d0"/>
        <function-ref name="get" scoped="" ref="0x2af089774660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089774980"/>
        <function-ref name="set" scoped="" ref="0x2af089774b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089774ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089774e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089773120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089770100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089770100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089770480"/>
        <function-ref name="isInput" scoped="" ref="0x2af089770610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897707a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089770930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089770ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089770c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089770de0"/>
        <function-ref name="get" scoped="" ref="0x2af08976f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08976f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08976f340"/>
        <function-ref name="set" scoped="" ref="0x2af08976f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08976f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08976f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08976fa80"/>
        <function-ref name="clr" scoped="" ref="0x2af08976fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08976cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08976cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08976b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08976b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08976b400"/>
        <function-ref name="toggle" scoped="" ref="0x2af08976b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08976b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08976b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08976ba40"/>
        <function-ref name="get" scoped="" ref="0x2af08976bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08976bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08976a020"/>
        <function-ref name="set" scoped="" ref="0x2af08976a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08976a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08976a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08976a760"/>
        <function-ref name="clr" scoped="" ref="0x2af08976a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089766740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089766740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089766ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089766c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089766de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089765020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089765340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897654d0"/>
        <function-ref name="get" scoped="" ref="0x2af089765660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089765980"/>
        <function-ref name="set" scoped="" ref="0x2af089765b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089765ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089765e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089764120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089799100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089799100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089799480"/>
        <function-ref name="isInput" scoped="" ref="0x2af089799610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897997a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089799930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089799ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089799c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089799de0"/>
        <function-ref name="get" scoped="" ref="0x2af089798020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089798340"/>
        <function-ref name="set" scoped="" ref="0x2af0897984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089798660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089798a80"/>
        <function-ref name="clr" scoped="" ref="0x2af089798c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089795d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089795d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897940e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089794270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089794400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089794590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089794720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897948b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089794a40"/>
        <function-ref name="get" scoped="" ref="0x2af089794bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089794d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089793020"/>
        <function-ref name="set" scoped="" ref="0x2af0897931b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089793340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897934d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089793760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089790740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089790740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089790ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089790c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089790de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08978f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08978f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08978f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08978f4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08978f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08978f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08978f980"/>
        <function-ref name="set" scoped="" ref="0x2af08978fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08978fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08978fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08978e120"/>
        <function-ref name="clr" scoped="" ref="0x2af08978e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08978b100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08978b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08978b480"/>
        <function-ref name="isInput" scoped="" ref="0x2af08978b610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08978b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08978b930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08978bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08978bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08978bde0"/>
        <function-ref name="get" scoped="" ref="0x2af08978a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08978a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08978a340"/>
        <function-ref name="set" scoped="" ref="0x2af08978a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08978a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08978a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08978aa80"/>
        <function-ref name="clr" scoped="" ref="0x2af08978ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089787d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089787d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897860e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089786270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089786400"/>
        <function-ref name="toggle" scoped="" ref="0x2af089786590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089786720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897868b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089786a40"/>
        <function-ref name="get" scoped="" ref="0x2af089786bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089786d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089785020"/>
        <function-ref name="set" scoped="" ref="0x2af0897851b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089785340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897854d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089785760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897858f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af089782740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af089782740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089782ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089782c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089782de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089781020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897811b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089781340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897814d0"/>
        <function-ref name="get" scoped="" ref="0x2af089781660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897817f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089781980"/>
        <function-ref name="set" scoped="" ref="0x2af089781b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089781ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089781e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089780120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0897b5100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0897b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897b5480"/>
        <function-ref name="isInput" scoped="" ref="0x2af0897b5610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897b57a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0897b5930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897b5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897b5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897b5de0"/>
        <function-ref name="get" scoped="" ref="0x2af0897b3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897b31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0897b3340"/>
        <function-ref name="set" scoped="" ref="0x2af0897b34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0897b3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897b37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0897b3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af0897b3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0897b0d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0897b0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897af0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0897af270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897af400"/>
        <function-ref name="toggle" scoped="" ref="0x2af0897af590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897af720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897af8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897afa40"/>
        <function-ref name="get" scoped="" ref="0x2af0897afbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897afd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0897ae020"/>
        <function-ref name="set" scoped="" ref="0x2af0897ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0897ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0897ae760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0897ab740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0897ab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897abac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0897abc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897abde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0897aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897aa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897aa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897aa4d0"/>
        <function-ref name="get" scoped="" ref="0x2af0897aa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897aa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0897aa980"/>
        <function-ref name="set" scoped="" ref="0x2af0897aab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0897aaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897aae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0897a9120"/>
        <function-ref name="clr" scoped="" ref="0x2af0897a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0897a6100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0897a6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897a6480"/>
        <function-ref name="isInput" scoped="" ref="0x2af0897a6610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897a67a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af0897a6930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897a6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897a6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897a6de0"/>
        <function-ref name="get" scoped="" ref="0x2af0897a5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897a51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0897a5340"/>
        <function-ref name="set" scoped="" ref="0x2af0897a54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0897a5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897a57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0897a5a80"/>
        <function-ref name="clr" scoped="" ref="0x2af0897a5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af0897a2d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af0897a2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0897a10e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af0897a1270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af0897a1400"/>
        <function-ref name="toggle" scoped="" ref="0x2af0897a1590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af0897a1720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0897a18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0897a1a40"/>
        <function-ref name="get" scoped="" ref="0x2af0897a1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0897a1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af0897a0020"/>
        <function-ref name="set" scoped="" ref="0x2af0897a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af0897a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af0897a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0897a0760"/>
        <function-ref name="clr" scoped="" ref="0x2af0897a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af08979d740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af08979d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08979dac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08979dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08979dde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08979c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08979c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08979c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08979c4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08979c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08979c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08979c980"/>
        <function-ref name="set" scoped="" ref="0x2af08979cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08979cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08979ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08979b120"/>
        <function-ref name="clr" scoped="" ref="0x2af08979b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af0898369a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af0898369a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af0898337e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0898311b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089833ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089831670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2af0898309d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af0898309d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08982d810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08982c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08982dcd0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08982c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af089857c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af089857c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089855020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af0898551b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089855340"/>
        <function-ref name="get" scoped="" ref="0x2af0898554d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089855660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af0898557f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089855980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089855b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af089855ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af089855e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089854020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af089829b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af089829b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af0898289b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089857360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089828e70"/>
        <function-ref name="overflow" scoped="" ref="0x2af089857820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2af089835970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089835970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089835cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089835e80"/>
        <function-ref name="led1On" scoped="" ref="0x2af089851030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af0898511c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089851350"/>
        <function-ref name="get" scoped="" ref="0x2af0898514e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089851670"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089851cb0"/>
        <function-ref name="set" scoped="" ref="0x2af089851800"/>
        <function-ref name="led0On" scoped="" ref="0x2af089851990"/>
        <function-ref name="led2On" scoped="" ref="0x2af089851b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2af089845910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2af089845910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089845c90"/>
        <function-ref name="isInput" scoped="" ref="0x2af089845e20"/>
        <function-ref name="toggle" scoped="" ref="0x2af08984b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08984b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08984b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08984b4d0"/>
        <function-ref name="set" scoped="" ref="0x2af08984b660"/>
        <function-ref name="clr" scoped="" ref="0x2af08984b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af089850c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089850c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08984d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2af08984bb10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2af08984bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08984a020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08984a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08984a340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08984a4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08984a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08984a7f0"/>
        <function-ref name="set" scoped="" ref="0x2af08984a980"/>
        <function-ref name="clr" scoped="" ref="0x2af08984ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2af08984d2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08984d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08984d620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08984d7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af08984d940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08984dad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08984dc60"/>
        <function-ref name="get" scoped="" ref="0x2af08984ddf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08984c020"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08984c660"/>
        <function-ref name="set" scoped="" ref="0x2af08984c1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2af08984c340"/>
        <function-ref name="led2On" scoped="" ref="0x2af08984c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2af08984ae30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2af08984ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0898441e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089844370"/>
        <function-ref name="toggle" scoped="" ref="0x2af089844500"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089844690"/>
        <function-ref name="get" scoped="" ref="0x2af089844820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0898449b0"/>
        <function-ref name="set" scoped="" ref="0x2af089844b40"/>
        <function-ref name="clr" scoped="" ref="0x2af089844cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2af089863360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2af089863360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af0898636e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089863870"/>
        <function-ref name="toggle" scoped="" ref="0x2af089863a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089863b90"/>
        <function-ref name="get" scoped="" ref="0x2af089863d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089862020"/>
        <function-ref name="set" scoped="" ref="0x2af0898621b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089862340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2af0898626a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2af0898626a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089862a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af089862bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089862d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089861020"/>
        <function-ref name="get" scoped="" ref="0x2af0898611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089861340"/>
        <function-ref name="set" scoped="" ref="0x2af0898614d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089861660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2af089860c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089860c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08985f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2af0898619c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2af0898619c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089861d40"/>
        <function-ref name="isInput" scoped="" ref="0x2af089860020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0898601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089860340"/>
        <function-ref name="get" scoped="" ref="0x2af0898604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089860660"/>
        <function-ref name="set" scoped="" ref="0x2af0898607f0"/>
        <function-ref name="clr" scoped="" ref="0x2af089860980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089888930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089888930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089888cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089888e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089887020"/>
        <function-ref name="toggle" scoped="" ref="0x2af0898871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089887340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af0898874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089887660"/>
        <function-ref name="get" scoped="" ref="0x2af0898877f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089887980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089887b10"/>
        <function-ref name="set" scoped="" ref="0x2af089887ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089887e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089886020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af0898862b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089886440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af08985d710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af08985d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08985da90"/>
        <function-ref name="isInput" scoped="" ref="0x2af08985dc20"/>
        <function-ref name="toggle" scoped="" ref="0x2af08985ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089888020"/>
        <function-ref name="get" scoped="" ref="0x2af0898881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089888340"/>
        <function-ref name="set" scoped="" ref="0x2af0898884d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089888660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089883480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089883480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089883800"/>
        <function-ref name="isInput" scoped="" ref="0x2af089883990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089883b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af089883cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089883e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089882020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af0898821b0"/>
        <function-ref name="get" scoped="" ref="0x2af089882340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af0898824d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089882660"/>
        <function-ref name="set" scoped="" ref="0x2af0898827f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089882980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089882b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089882da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089881020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af0898841d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af0898841d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089884550"/>
        <function-ref name="isInput" scoped="" ref="0x2af0898846e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089884870"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089884a00"/>
        <function-ref name="get" scoped="" ref="0x2af089884b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089884d20"/>
        <function-ref name="set" scoped="" ref="0x2af089883020"/>
        <function-ref name="clr" scoped="" ref="0x2af0898831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af08987e020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af08987e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08987e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08987e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08987e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08987e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08987e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08987eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08987ed00"/>
        <function-ref name="get" scoped="" ref="0x2af08987d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08987d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08987d340"/>
        <function-ref name="set" scoped="" ref="0x2af08987d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08987d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08987d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08987da80"/>
        <function-ref name="clr" scoped="" ref="0x2af08987dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089880d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089880d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08987f180"/>
        <function-ref name="isInput" scoped="" ref="0x2af08987f310"/>
        <function-ref name="toggle" scoped="" ref="0x2af08987f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08987f630"/>
        <function-ref name="get" scoped="" ref="0x2af08987f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08987f950"/>
        <function-ref name="set" scoped="" ref="0x2af08987fae0"/>
        <function-ref name="clr" scoped="" ref="0x2af08987fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08ac7cc70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08ac7cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08ac7b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08ac7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af08ad07d70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08ad07d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08ad06180"/>
        <function-ref name="configure" scoped="" ref="0x2af08ad06310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af08ad075d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08ad075d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08ad07950"/>
        <function-ref name="txDone" scoped="" ref="0x2af08ad07ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08ac7c020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08ac7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08ac7c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08ac7c530"/>
        <function-ref name="request" scoped="" ref="0x2af08ac7c6c0"/>
        <function-ref name="granted" scoped="" ref="0x2af08ac7c850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08ac7c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af08ac7bbe0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08ac7bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08ac7a020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08ac7a1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08ac7a340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08ac7a4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af08ac7a660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af08ac7a7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af08ac7a980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af08ac7ab10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af08ac7aca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af08ac7ae30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af08ac79020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af08ac791b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af08ac79340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af08ac795d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af08ac79760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af08ac798f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af08ac79a80"/>
        <function-ref name="isUart" scoped="" ref="0x2af08ac79c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af08ac79da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af08ac78020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af08ac781b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af08ac78340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af08ac784d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af08ac78660"/>
        <function-ref name="getMode" scoped="" ref="0x2af08ac787f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af08ac78b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08ac78d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08ad08020"/>
        <function-ref name="tx" scoped="" ref="0x2af08ad081b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08ad08340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08ad084d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08ad08660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08ad087f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08ad08980"/>
        <function-ref name="rx" scoped="" ref="0x2af08ad08b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08ad08ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08ad08e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08ad07020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08ad071b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08ad07340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af08ac7b440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08ac7b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08ac7b7c0"/>
        <function-ref name="userId" scoped="" ref="0x2af08ac7b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af0898d02c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af0898d02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af0898d0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af0898d07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af0898cf8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af0898cf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af0898cfc20"/>
        <function-ref name="configure" scoped="" ref="0x2af0898cfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af0898d21d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af0898d21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af0898d2550"/>
        <function-ref name="txDone" scoped="" ref="0x2af0898d26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af0898d1020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af0898d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af0898d13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af0898d1530"/>
        <function-ref name="request" scoped="" ref="0x2af0898d16c0"/>
        <function-ref name="granted" scoped="" ref="0x2af0898d1850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af0898d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af0898d0ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af0898d0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af0898d0e50"/>
        <function-ref name="userId" scoped="" ref="0x2af0898cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af0898b9a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af0898b9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af0898b9e10"/>
        <function-ref name="userId" scoped="" ref="0x2af0898b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af0898ccb60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af0898ccb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af0898cb020"/>
        <function-ref name="txDone" scoped="" ref="0x2af0898cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2af0898b9480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af0898b9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0898b9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af0898cb5b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af0898cb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af0898cb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2af0898cbc20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2af0898cbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af0898b9020"/>
        <function-ref name="txDone" scoped="" ref="0x2af0898b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af089932020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af089932020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af0899323c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af089932550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af089931cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af089931cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af0899300a0"/>
        <function-ref name="configure" scoped="" ref="0x2af089930230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af0899327a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af0899327a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089932b20"/>
        <function-ref name="requested" scoped="" ref="0x2af089932cb0"/>
        <function-ref name="granted" scoped="" ref="0x2af089932e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089931020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af0899311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af089933210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089933210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af0899335b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089933740"/>
        <function-ref name="request" scoped="" ref="0x2af0899338d0"/>
        <function-ref name="granted" scoped="" ref="0x2af089933a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089933bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af089931400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af089931400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af089931780"/>
        <function-ref name="userId" scoped="" ref="0x2af089931910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b077ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b077ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b0760a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af08b076330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af08b076330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af08b0766b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af08b076840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af08b0769d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af08b076b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08b0733a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b0733a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08b073740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b0738d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af08b070210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b070210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08b0705b0"/>
        <function-ref name="configure" scoped="" ref="0x2af08b070740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af08b0709d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af08b0709d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af08b070d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af08b06f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af08b06f1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af08b06f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af08b073b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08b073b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b072020"/>
        <function-ref name="requested" scoped="" ref="0x2af08b0721b0"/>
        <function-ref name="granted" scoped="" ref="0x2af08b072340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b0724d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b072660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08b06f590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08b06f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08b06f910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08b06faa0"/>
        <function-ref name="led1On" scoped="" ref="0x2af08b06fc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08b06fdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08b06e020"/>
        <function-ref name="get" scoped="" ref="0x2af08b06e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08b06e340"/>
        <function-ref name="led0On" scoped="" ref="0x2af08b06e980"/>
        <function-ref name="set" scoped="" ref="0x2af08b06e660"/>
        <function-ref name="led2On" scoped="" ref="0x2af08b06e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08b06e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08b074540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08b074540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b0748e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08b074a70"/>
        <function-ref name="request" scoped="" ref="0x2af08b074c00"/>
        <function-ref name="granted" scoped="" ref="0x2af08b074d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b073020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af08b0728b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b0728b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08b072c30"/>
        <function-ref name="userId" scoped="" ref="0x2af08b072dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2af08b06ec50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2af08b06ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08b06d020"/>
        <function-ref name="runTask" scoped="" ref="0x2af08b06d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2af089955400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af089955400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2af089955780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2af0899559d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af0899559d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089955d50"/>
        <function-ref name="requested" scoped="" ref="0x2af089953020"/>
        <function-ref name="granted" scoped="" ref="0x2af0899531b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089953340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af0899534d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2af08996ab20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08996ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af089955020"/>
        <function-ref name="stop" scoped="" ref="0x2af0899551b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af089953720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af089953720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af089953aa0"/>
        <function-ref name="userId" scoped="" ref="0x2af089953c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2af08b0dcb00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af08b0dcb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2af08b0dce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2af08b0db0f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08b0db0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b0db470"/>
        <function-ref name="requested" scoped="" ref="0x2af08b0db600"/>
        <function-ref name="granted" scoped="" ref="0x2af08b0db790"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b0db920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b0dbab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2af08b0dc3a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af08b0dc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08b0dc720"/>
        <function-ref name="stop" scoped="" ref="0x2af08b0dc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af08b0dbd00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b0dbd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08b0d90a0"/>
        <function-ref name="userId" scoped="" ref="0x2af08b0d9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2af089973080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af089973080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af089973400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2af0899736f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af0899736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089973a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089973c00"/>
        <function-ref name="request" scoped="" ref="0x2af089973d90"/>
        <function-ref name="granted" scoped="" ref="0x2af089972020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af0899721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af0899767a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af0899767a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af089976b20"/>
        <function-ref name="stop" scoped="" ref="0x2af089976cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2af0899a6430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af0899a6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af0899a67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af0899a5780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af0899a5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af0899a5b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2af0899a5de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af0899a5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af0899a2180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2af08999b020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af08999b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af08999b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2af08999b740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2af08999b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af08999bac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af08999bc50"/>
        <function-ref name="start" scoped="" ref="0x2af08999bde0"/>
        <function-ref name="stop" scoped="" ref="0x2af08999a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089993320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089993320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af0899936a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089993830"/>
        <function-ref name="start" scoped="" ref="0x2af0899939c0"/>
        <function-ref name="stop" scoped="" ref="0x2af089993b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af089992370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af089992370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af0899926f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089992880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089992a10"/>
        <function-ref name="cancel" scoped="" ref="0x2af089992ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089992d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af089990020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af089990020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af0899903a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af089990530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af0899906c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089990850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af0899909e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089991530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089991530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af0899918b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af0899c5a00" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af0899c5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af0899c5d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af0899c4020"/>
        <function-ref name="led1On" scoped="" ref="0x2af0899c41b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af0899c4340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af0899c44d0"/>
        <function-ref name="get" scoped="" ref="0x2af0899c4660"/>
        <function-ref name="led1Off" scoped="" ref="0x2af0899c47f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af0899c4e30"/>
        <function-ref name="set" scoped="" ref="0x2af0899c4980"/>
        <function-ref name="led0On" scoped="" ref="0x2af0899c4b10"/>
        <function-ref name="led2On" scoped="" ref="0x2af0899c4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af0899c5080" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af0899c5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af0899c5400"/>
        <function-ref name="noAck" scoped="" ref="0x2af0899c5590"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af0899c5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af089990c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af089990c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08998f0a0"/>
        <function-ref name="source" scoped="" ref="0x2af08998f230"/>
        <function-ref name="address" scoped="" ref="0x2af08998f3c0"/>
        <function-ref name="destination" scoped="" ref="0x2af08998f550"/>
        <function-ref name="setSource" scoped="" ref="0x2af08998f6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08998f870"/>
        <function-ref name="type" scoped="" ref="0x2af08998fa00"/>
        <function-ref name="setType" scoped="" ref="0x2af08998fb90"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08998fd20"/>
        <function-ref name="setGroup" scoped="" ref="0x2af0899c6020"/>
        <function-ref name="localGroup" scoped="" ref="0x2af0899c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af089a1e120" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af089a1e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089a1e4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089a1e630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089a1e7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089a1e950"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089a1eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af089a1ed70" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af089a1ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089a1d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af089a23110" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af089a23110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089a234b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089a23640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089a237d0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089a23960"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089a23af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af089a20a40" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af089a20a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089a20dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af089a1f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089a1f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089a1f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af089a1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089a23e70" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089a23e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089a21240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af089a1f720" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089a1f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af089a1faa0"/>
        <function-ref name="noAck" scoped="" ref="0x2af089a1fc30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af089a1fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af089a21490" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af089a21490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af089a21810"/>
        <function-ref name="source" scoped="" ref="0x2af089a219a0"/>
        <function-ref name="address" scoped="" ref="0x2af089a21b30"/>
        <function-ref name="destination" scoped="" ref="0x2af089a21cc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af089a21e50"/>
        <function-ref name="setDestination" scoped="" ref="0x2af089a20020"/>
        <function-ref name="type" scoped="" ref="0x2af089a201b0"/>
        <function-ref name="setType" scoped="" ref="0x2af089a20340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af089a204d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af089a20660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af089a207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089a198d0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089a198d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089a19c50"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089a19de0"/>
        <function-ref name="start" scoped="" ref="0x2af089a18020"/>
        <function-ref name="stop" scoped="" ref="0x2af089a181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af089a17480" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af089a17480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af089170d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089a17800"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089a17990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089a17b20"/>
        <function-ref name="cancel" scoped="" ref="0x2af089a17cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089a17e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af089a19280" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089a19280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089a19600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089a18940" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089a18940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af089170d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089a18cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089a14dc0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089a14dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089a10180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089a10310"/>
        <function-ref name="led1On" scoped="" ref="0x2af089a104a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089a10630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089a107c0"/>
        <function-ref name="get" scoped="" ref="0x2af089a10950"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089a10ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089a0f1b0"/>
        <function-ref name="set" scoped="" ref="0x2af089a10c70"/>
        <function-ref name="led0On" scoped="" ref="0x2af089a10e00"/>
        <function-ref name="led2On" scoped="" ref="0x2af089a0f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2af089a144a0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af089a144a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af089170d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af089a14820"/>
        <function-ref name="offset" scoped="" ref="0x2af089a149b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af089a14b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089a4a810" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089a4a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089a4ab90"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089a4ad20"/>
        <function-ref name="start" scoped="" ref="0x2af089a49020"/>
        <function-ref name="stop" scoped="" ref="0x2af089a491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2af089aac6e0" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2af089aac6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089aaca60"/>
        <function-ref name="runTask" scoped="" ref="0x2af089aacbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2af089a38860" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2af089a38860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af089a38be0"/>
        <function-ref name="stop" scoped="" ref="0x2af089a38d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2af089a5d4f0" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2af089a5d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089a5d870"/>
        <function-ref name="runTask" scoped="" ref="0x2af089a5da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af089a4a1c0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089a4a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089a4a540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2af089a34480" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2af089a34480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2af089a34800"/>
        <function-ref name="flush" scoped="" ref="0x2af089a34990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2af089ab0c70" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2af089ab0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089aaf020"/>
        <function-ref name="runTask" scoped="" ref="0x2af089aaf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2af089a43020" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2af089a43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2af089a433a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2af089a43530"/>
        <function-ref name="dataReceived" scoped="" ref="0x2af089a436c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2af089a43850"/>
        <function-ref name="putData" scoped="" ref="0x2af089a439e0"/>
        <function-ref name="putDone" scoped="" ref="0x2af089a43b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2af089a43d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089a3e020" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089a3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089a3e3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089a3e530"/>
        <function-ref name="led1On" scoped="" ref="0x2af089a3e6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089a3e850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089a3e9e0"/>
        <function-ref name="get" scoped="" ref="0x2af089a3eb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089a3ed00"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089a384d0"/>
        <function-ref name="set" scoped="" ref="0x2af089a38020"/>
        <function-ref name="led0On" scoped="" ref="0x2af089a381b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af089a38340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2af089aa9a00" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2af089aa9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089aa9d80"/>
        <function-ref name="runTask" scoped="" ref="0x2af089aa8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2af089a447d0" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2af089a447d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2af089a44b50"/>
        <function-ref name="nextByte" scoped="" ref="0x2af089a44ce0"/>
        <function-ref name="startSend" scoped="" ref="0x2af089a44e70"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2af089a48030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2af089a40c40" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af089a40c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2af089a47020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2af089a471b0"/>
        <function-ref name="endPacket" scoped="" ref="0x2af089a47340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2af089b7e020" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2af089b7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089b7e3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af089b7e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af089b83de0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af089b83de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af089170d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089b821c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089b82350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089b824e0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089b82670"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089b82800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2af089b7e800" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2af089b7e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089b7eb80"/>
        <function-ref name="runTask" scoped="" ref="0x2af089b7ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089b836c0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089b836c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af089170d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089b83a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2af089b82c20" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2af089b82c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af089170d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af089b81020"/>
        <function-ref name="offset" scoped="" ref="0x2af089b811b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af089b81340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089b80920" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089b80920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089b80ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089b80e30"/>
        <function-ref name="led1On" scoped="" ref="0x2af089b7f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089b7f1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089b7f340"/>
        <function-ref name="get" scoped="" ref="0x2af089b7f4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089b7f660"/>
        <function-ref name="led2On" scoped="" ref="0x2af089b7fca0"/>
        <function-ref name="set" scoped="" ref="0x2af089b7f980"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089b7f7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2af089b7fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2af089b81e80" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2af089b81e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2af089b80220"/>
        <function-ref name="nextByte" scoped="" ref="0x2af089b803b0"/>
        <function-ref name="startSend" scoped="" ref="0x2af089b80540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2af089b806d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2af089b81590" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af089b81590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2af089b81910"/>
        <function-ref name="byteReceived" scoped="" ref="0x2af089b81aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x2af089b81c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2af089b78e40" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af089b78e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089b771e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af089b77370"/>
        <function-ref name="receive" scoped="" ref="0x2af089b77500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af089b77690"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af089b77820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af089b779b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089b77b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2af089b7be10" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2af089b7be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2af089b781c0"/>
        <function-ref name="resetSend" scoped="" ref="0x2af089b78350"/>
        <function-ref name="dataReceived" scoped="" ref="0x2af089b784e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2af089b78670"/>
        <function-ref name="putData" scoped="" ref="0x2af089b78800"/>
        <function-ref name="putDone" scoped="" ref="0x2af089b78990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2af089b78b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089b77dc0" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089b77dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089b76180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089b76310"/>
        <function-ref name="led1On" scoped="" ref="0x2af089b764a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089b76630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089b767c0"/>
        <function-ref name="get" scoped="" ref="0x2af089b76950"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089b76ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089b751b0"/>
        <function-ref name="set" scoped="" ref="0x2af089b76c70"/>
        <function-ref name="led0On" scoped="" ref="0x2af089b76e00"/>
        <function-ref name="led2On" scoped="" ref="0x2af089b75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2af089b9e6c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2af089b9e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af089b9ea40"/>
        <function-ref name="offset" scoped="" ref="0x2af089b9ebd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af089b9ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089b8b020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089b8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089b8b3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089b8b530"/>
        <function-ref name="start" scoped="" ref="0x2af089b8b6c0"/>
        <function-ref name="stop" scoped="" ref="0x2af089b8b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af089b8a050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af089b8a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089b8a3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089b8a560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089b8a6f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089b8a880"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089b8aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af089b89df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af089b89df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089b881c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af089b88450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af089b88450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089b887d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af089b88960"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089b88af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089b88c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af089b88e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af089bc39e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af089bc39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af089bcb020"/>
        <function-ref name="clear" scoped="" ref="0x2af089bcb750"/>
        <function-ref name="isValid" scoped="" ref="0x2af089bcc890"/>
        <function-ref name="set" scoped="" ref="0x2af089bcbe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af089bb78a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af089bb78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af089bb7c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af089bb7db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af089bbd020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af089bbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089b89210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089b89210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089b89590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af089b86800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089b86800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af089b86b80"/>
        <function-ref name="noAck" scoped="" ref="0x2af089b86d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af089bcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af089b87120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af089b87120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af089b874a0"/>
        <function-ref name="source" scoped="" ref="0x2af089b87630"/>
        <function-ref name="address" scoped="" ref="0x2af089b877c0"/>
        <function-ref name="destination" scoped="" ref="0x2af089b87950"/>
        <function-ref name="setSource" scoped="" ref="0x2af089b87ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af089b87c70"/>
        <function-ref name="type" scoped="" ref="0x2af089b87e00"/>
        <function-ref name="setType" scoped="" ref="0x2af089b86020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af089b861b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af089b86340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af089b864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af089bc2af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af089bc2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af089bc00d0"/>
        <function-ref name="clear" scoped="" ref="0x2af089bc0800"/>
        <function-ref name="isValid" scoped="" ref="0x2af089bc1970"/>
        <function-ref name="set" scoped="" ref="0x2af089bbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089bab680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089bab680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089baba00"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089babb90"/>
        <function-ref name="start" scoped="" ref="0x2af089babd20"/>
        <function-ref name="stop" scoped="" ref="0x2af089baa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af089bd9d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af089bd9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af089be10e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af089be1270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af089be1400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af089be1590"/>
        <function-ref name="setCca" scoped="" ref="0x2af089be1720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af089be18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2af089bd6500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2af089bd6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2af089bd6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af089bed760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af089bed760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089bedae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af089bedc70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089bede00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089bec020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af089bec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af089baa7f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af089baa7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089baab70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089baad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089bf1020"/>
        <function-ref name="cancel" scoped="" ref="0x2af089bf11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089bf1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af089bef880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af089bef880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089befc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af089be4970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af089be4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af089be4cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af089be4e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2af089beb030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af089beb1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2af089beb350"/>
        <function-ref name="getLqi" scoped="" ref="0x2af089beb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af089be1bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af089be1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af089bd8020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af089bd81b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af089bd8340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af089bd84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089bf1b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089bf1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089bef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af089beb810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089beb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af089bebb90"/>
        <function-ref name="noAck" scoped="" ref="0x2af089bebd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af089bea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af089bd8790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af089bd8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af089bd8b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2af089bd8ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2af089bd8e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af089bd7020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af089bd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af089bee020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af089bee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af089bee3a0"/>
        <function-ref name="source" scoped="" ref="0x2af089bee530"/>
        <function-ref name="address" scoped="" ref="0x2af089bee6c0"/>
        <function-ref name="destination" scoped="" ref="0x2af089bee850"/>
        <function-ref name="setSource" scoped="" ref="0x2af089bee9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af089beeb70"/>
        <function-ref name="type" scoped="" ref="0x2af089beed00"/>
        <function-ref name="setType" scoped="" ref="0x2af089bed020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af089bed1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af089bed340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af089bed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af089be0a80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af089be0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af089be0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089bd0340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089bd0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089bd06c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089bd0850"/>
        <function-ref name="start" scoped="" ref="0x2af089bd09e0"/>
        <function-ref name="stop" scoped="" ref="0x2af089bd0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af089c12080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af089c12080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af089c12400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af089c112e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af089c112e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af089c11660"/>
        <function-ref name="setRetries" scoped="" ref="0x2af089c117f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2af089c11980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af089c11b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af089c11ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af089c14740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af089c14740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af089c14ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af089c14c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2af089c14de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af089c13020"/>
        <function-ref name="getPower" scoped="" ref="0x2af089c131b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af089c13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af089c15350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af089c15350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089c156d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089c15860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089c159f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089c15b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089c15d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af089c12700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af089c12700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af089c12a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af089c12c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af089c12da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af089c11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2af089bcee70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2af089bcee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089c16220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af089c13670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af089c13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af089c139f0"/>
        <function-ref name="noAck" scoped="" ref="0x2af089c13b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af089c13d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af089bcf430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089bcf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089bcf7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089bcf940"/>
        <function-ref name="request" scoped="" ref="0x2af089bcfad0"/>
        <function-ref name="granted" scoped="" ref="0x2af089bcfc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089bcfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2af089bce160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2af089bce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089bce4e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089bce670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089bce800"/>
        <function-ref name="cancel" scoped="" ref="0x2af089bce990"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089bceb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af089c16560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af089c16560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089c168e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af089c16a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089c16c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089c16d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af089c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af089c140f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af089c140f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089c14470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089c109f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089c109f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089c10d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089c0c020"/>
        <function-ref name="start" scoped="" ref="0x2af089c0c1b0"/>
        <function-ref name="stop" scoped="" ref="0x2af089c0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af089c0b990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af089c0b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af089c0bd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af089c0a020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af089c0a1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af089c0a340"/>
        <function-ref name="setCca" scoped="" ref="0x2af089c0a4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af089c0a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af089c0c600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af089c0c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089c0c980"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089c0cb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089c0cca0"/>
        <function-ref name="cancel" scoped="" ref="0x2af089c0ce30"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089c0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af089c0b300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af089c0b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af089c0b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af089c07690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af089c07690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af089c07a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2af089c07ba0"/>
        <function-ref name="start" scoped="" ref="0x2af089c07d30"/>
        <function-ref name="stop" scoped="" ref="0x2af089c05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af089c04020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af089c04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af089c043a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af089c04530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af089c046c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af089c04850"/>
        <function-ref name="setCca" scoped="" ref="0x2af089c049e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af089c04b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2af089bfa060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2af089bfa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af089bfa3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af089bfa570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af089bfa700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af089bfa890"/>
        <function-ref name="setCca" scoped="" ref="0x2af089bfaa20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af089bfabb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af089c3b330" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af089c3b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af089c3b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af089c3b840"/>
        <function-ref name="getRssi" scoped="" ref="0x2af089c3b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af089c3bb60"/>
        <function-ref name="getPower" scoped="" ref="0x2af089c3bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af089c3be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2af089bf32a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2af089bf32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089bf3620"/>
        <function-ref name="cancel" scoped="" ref="0x2af089bf37b0"/>
        <function-ref name="modify" scoped="" ref="0x2af089bf3940"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089bf3ad0"/>
        <function-ref name="resend" scoped="" ref="0x2af089bf3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af089c052e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af089c052e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af089c05660"/>
        <function-ref name="getPayload" scoped="" ref="0x2af089c057f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af089c05980"/>
        <function-ref name="cancel" scoped="" ref="0x2af089c05b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af089c05ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2af089c3a420" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af089c3a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af089c3a7a0"/>
        <function-ref name="rand32" scoped="" ref="0x2af089c3a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2af089c026f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2af089c026f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af089c02a70"/>
        <function-ref name="stop" scoped="" ref="0x2af089c02c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af089c33920" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af089c33920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af089c33ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af089c33e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af089c37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2af089bfb3f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af089bfb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af089bfb770"/>
        <function-ref name="rfOff" scoped="" ref="0x2af089bfb900"/>
        <function-ref name="rxOn" scoped="" ref="0x2af089bfba90"/>
        <function-ref name="startVReg" scoped="" ref="0x2af089bfbc20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af089bfbdb0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af089c02020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af089c021b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af089c02340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089c3abf0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089c3abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089bf2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089bf21b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af089bf2340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089bf24d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089bf2660"/>
        <function-ref name="get" scoped="" ref="0x2af089bf27f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089bf2980"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089c3b020"/>
        <function-ref name="set" scoped="" ref="0x2af089bf2b10"/>
        <function-ref name="led0On" scoped="" ref="0x2af089bf2ca0"/>
        <function-ref name="led2On" scoped="" ref="0x2af089bf2e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2af089c04e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089c04e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089c03210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089c033a0"/>
        <function-ref name="request" scoped="" ref="0x2af089c03530"/>
        <function-ref name="granted" scoped="" ref="0x2af089c036c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089c03850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2af089c36110" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2af089c36110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af089c36590"/>
        <function-ref name="toIdle" scoped="" ref="0x2af089c36720"/>
        <function-ref name="isState" scoped="" ref="0x2af089c368b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af089c36a40"/>
        <function-ref name="requestState" scoped="" ref="0x2af089c36bd0"/>
        <function-ref name="forceState" scoped="" ref="0x2af089c36d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2af089c29b70" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2af089c29b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089c27020"/>
        <function-ref name="runTask" scoped="" ref="0x2af089c271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2af089c2aba0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2af089c2aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089c29020"/>
        <function-ref name="runTask" scoped="" ref="0x2af089c291b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2af089c2bc20" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2af089c2bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089c2a020"/>
        <function-ref name="runTask" scoped="" ref="0x2af089c2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2af089c66dc0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af089c66dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af089c72180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af089c72310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af089c724a0"/>
        <function-ref name="syncDone" scoped="" ref="0x2af089c72630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af089c727c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af089c72950"/>
        <function-ref name="setChannel" scoped="" ref="0x2af089c72ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af089c72c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af089c72e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af089c71020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af089c711b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af089c71340"/>
        <function-ref name="sync" scoped="" ref="0x2af089c714d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2af089c71760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af089c718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2af089c630c0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2af089c630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089c63cb0"/>
        <function-ref name="readDone" scoped="" ref="0x2af089c62170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2af089c71bf0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af089c71bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af089c65020"/>
        <function-ref name="rfOff" scoped="" ref="0x2af089c651b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2af089c65340"/>
        <function-ref name="startVReg" scoped="" ref="0x2af089c654d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af089c65660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af089c657f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af089c65980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af089c65b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af089c76950" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089c76950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089c76cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089c76e60"/>
        <function-ref name="request" scoped="" ref="0x2af089c73020"/>
        <function-ref name="granted" scoped="" ref="0x2af089c731b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089c73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2af089ca8970" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af089ca8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af089ca8cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af089ca8e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af089ca7030"/>
        <function-ref name="syncDone" scoped="" ref="0x2af089ca71c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af089ca7350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af089ca74e0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af089ca7670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af089ca7800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af089ca7990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af089ca7b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af089ca7cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af089ca7e40"/>
        <function-ref name="sync" scoped="" ref="0x2af089ca6020"/>
        <function-ref name="getChannel" scoped="" ref="0x2af089ca62b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af089ca6440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2af089ccb8e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af089ccb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089ccbc60"/>
        <function-ref name="write" scoped="" ref="0x2af089ccbdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2af089ca1020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af089ca1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af089ca13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2af089c99d90" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2af089c99d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af089c97670"/>
        <function-ref name="fired" scoped="" ref="0x2af089c9f5d0"/>
        <function-ref name="startAt" scoped="" ref="0x2af089c97020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af089c9fa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af089c97b30"/>
        <function-ref name="start" scoped="" ref="0x2af089ca0bc0"/>
        <function-ref name="stop" scoped="" ref="0x2af089c9f110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2af089cd05f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af089cd05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089cd0970"/>
        <function-ref name="write" scoped="" ref="0x2af089cd0b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2af089c95380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2af089c95380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089c95700"/>
        <function-ref name="isInput" scoped="" ref="0x2af089c95890"/>
        <function-ref name="toggle" scoped="" ref="0x2af089c95a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089c95bb0"/>
        <function-ref name="get" scoped="" ref="0x2af089c95d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089c94020"/>
        <function-ref name="set" scoped="" ref="0x2af089c941b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089c94340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2af089ca5b40" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2af089ca5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089ca4750"/>
        <function-ref name="readDone" scoped="" ref="0x2af089ca4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2af089cb9820" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2af089cb9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089cb9ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2af089cb9d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2af089cca1c0" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af089cca1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089cca540"/>
        <function-ref name="write" scoped="" ref="0x2af089cca6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2af089ccaa70" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af089ccaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089ccadf0"/>
        <function-ref name="write" scoped="" ref="0x2af089cc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2af089c893d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af089c893d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089c89750"/>
        <function-ref name="write" scoped="" ref="0x2af089c898e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2af089c8a810" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af089c8a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af089c8ab90"/>
        <function-ref name="changed" scoped="" ref="0x2af089c8ad20"/>
        <function-ref name="amGroup" scoped="" ref="0x2af089c91020"/>
        <function-ref name="setAddress" scoped="" ref="0x2af089c911b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af089c96060" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af089c96060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089c963e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089c96570"/>
        <function-ref name="toggle" scoped="" ref="0x2af089c96700"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089c96890"/>
        <function-ref name="get" scoped="" ref="0x2af089c96a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089c96bb0"/>
        <function-ref name="set" scoped="" ref="0x2af089c96d40"/>
        <function-ref name="clr" scoped="" ref="0x2af089c95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2af089cc8160" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af089cc8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af089cc86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2af089c946a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2af089c946a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089c94a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af089c94bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089c94d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089c93020"/>
        <function-ref name="get" scoped="" ref="0x2af089c931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089c93340"/>
        <function-ref name="set" scoped="" ref="0x2af089c934d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089c93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af089ca9510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089ca9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089ca9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2af089ccb020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af089ccb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089ccb3a0"/>
        <function-ref name="write" scoped="" ref="0x2af089ccb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2af089cc8a80" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af089cc8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af089cc8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af089cc71d0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af089cc71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089cc7550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089cc76e0"/>
        <function-ref name="request" scoped="" ref="0x2af089cc7870"/>
        <function-ref name="granted" scoped="" ref="0x2af089cc7a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089cc7b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2af089cc5d90" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2af089cc5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089cc4180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089cc4310"/>
        <function-ref name="request" scoped="" ref="0x2af089cc44a0"/>
        <function-ref name="granted" scoped="" ref="0x2af089cc4630"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089cc47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2af089ca6740" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af089ca6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af089ca6ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x2af089ca6c50"/>
        <function-ref name="rxOn" scoped="" ref="0x2af089ca6de0"/>
        <function-ref name="startVReg" scoped="" ref="0x2af089ca5020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af089ca51b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af089ca5340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af089ca54d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af089ca5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2af089c89c80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af089c89c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089cd00a0"/>
        <function-ref name="write" scoped="" ref="0x2af089cd0230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2af089ccdb00" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af089ccdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089ccde80"/>
        <function-ref name="write" scoped="" ref="0x2af089c89030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2af089cc62e0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af089cc62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af089cc6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089cc4a80" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089cc4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089cc4e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089cc3020"/>
        <function-ref name="led1On" scoped="" ref="0x2af089cc31b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089cc3340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089cc34d0"/>
        <function-ref name="get" scoped="" ref="0x2af089cc3660"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089cc37f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af089cc3e30"/>
        <function-ref name="set" scoped="" ref="0x2af089cc3980"/>
        <function-ref name="led0On" scoped="" ref="0x2af089cc3b10"/>
        <function-ref name="led2On" scoped="" ref="0x2af089cc3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2af089cba940" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2af089cba940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af089cbacc0"/>
        <function-ref name="runTask" scoped="" ref="0x2af089cbae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af089ca9b80" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089ca9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089ca8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089ca81b0"/>
        <function-ref name="request" scoped="" ref="0x2af089ca8340"/>
        <function-ref name="granted" scoped="" ref="0x2af089ca84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089ca8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2af089c8d520" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af089c8d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089c8d8a0"/>
        <function-ref name="write" scoped="" ref="0x2af089c8da30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2af089cd1a90" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af089cd1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089c8d020"/>
        <function-ref name="write" scoped="" ref="0x2af089c8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2af089c920e0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2af089c920e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089c92460"/>
        <function-ref name="disable" scoped="" ref="0x2af089c925f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af089c92780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af089c92910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2af089cc5020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2af089cc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089cc53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089cc5530"/>
        <function-ref name="request" scoped="" ref="0x2af089cc56c0"/>
        <function-ref name="granted" scoped="" ref="0x2af089cc5850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089cc59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2af089cc69f0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af089cc69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af089cc6d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af089d297e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089d297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089d29b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2af089d26220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d26220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af089d24b30"/>
        <function-ref name="fired" scoped="" ref="0x2af089d25a60"/>
        <function-ref name="startAt" scoped="" ref="0x2af089d244e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af089d24020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af089d22020"/>
        <function-ref name="start" scoped="" ref="0x2af089d25090"/>
        <function-ref name="stop" scoped="" ref="0x2af089d255a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af089d21a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af089d21a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af089d21da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2af089d202e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2af089d202e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af089e28b30"/>
        <function-ref name="fired" scoped="" ref="0x2af089e29ae0"/>
        <function-ref name="startAt" scoped="" ref="0x2af089e284e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af089e28020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af089e26020"/>
        <function-ref name="start" scoped="" ref="0x2af089e29110"/>
        <function-ref name="stop" scoped="" ref="0x2af089e29620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b17f2a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b17f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b17db30"/>
        <function-ref name="fired" scoped="" ref="0x2af08b17eaa0"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b17d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b17d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b17c020"/>
        <function-ref name="start" scoped="" ref="0x2af08b17e0d0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b17e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b180a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b180a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b180d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b1782a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b1782a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b175b30"/>
        <function-ref name="fired" scoped="" ref="0x2af08b177aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b1754e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b175020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b174020"/>
        <function-ref name="start" scoped="" ref="0x2af08b1770d0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b1775e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b179a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b179a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b179d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af08b15fc10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b15fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08b15e020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08b15e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08b15e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08b15e4d0"/>
        <function-ref name="fired" scoped="" ref="0x2af08b15e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af08b1621b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b1621b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b162530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b1626c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b162850"/>
        <function-ref name="get" scoped="" ref="0x2af08b1629e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b162b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b162d00"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b161020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b1611b0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b161340"/>
        <function-ref name="setMode" scoped="" ref="0x2af08b1614d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08b161660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af08b1618f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b1618f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08b161c70"/>
        <function-ref name="getControl" scoped="" ref="0x2af08b161e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b15f020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08b15f1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08b15f340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b15f4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08b15f660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08b15f7f0"/>
        <function-ref name="setControl" scoped="" ref="0x2af08b15f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af089d4cba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af089d4cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089d4b020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af089d4b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af089d4b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af089d4b4d0"/>
        <function-ref name="fired" scoped="" ref="0x2af089d4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af089d504d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af089d504d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089d50850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af089d509e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089d50b70"/>
        <function-ref name="get" scoped="" ref="0x2af089d50d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089d4f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089d4f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af089d4f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089d4f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089d4f660"/>
        <function-ref name="setMode" scoped="" ref="0x2af089d4f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af089d4f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af089d4d280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089d4d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089d4d600"/>
        <function-ref name="getControl" scoped="" ref="0x2af089d4d790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089d4d920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089d4dab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089d4dc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089d4ddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089d4c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089d4c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af089d4c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af08b155a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b155a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08b155e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08b154020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08b1541b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08b154340"/>
        <function-ref name="fired" scoped="" ref="0x2af08b1544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af08b158020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b158020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b1583a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b158530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b1586c0"/>
        <function-ref name="get" scoped="" ref="0x2af08b158850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b1589e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b158b70"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b158d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b156020"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b1561b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08b156340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08b1564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b15cda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b15cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b159670"/>
        <function-ref name="fired" scoped="" ref="0x2af08b15a610"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b159020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b15aad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b159b30"/>
        <function-ref name="start" scoped="" ref="0x2af08b15bbf0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b15a150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b15c510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b15c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b15c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af08b156760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b156760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08b156ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2af08b156c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b156e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08b155020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08b1551b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b155340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08b1554d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08b155660"/>
        <function-ref name="setControl" scoped="" ref="0x2af08b1557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af089d9e020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af089d9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af089d9ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089d9c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089d9c340"/>
        <function-ref name="overflow" scoped="" ref="0x2af089d9ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2af089dcb950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2af089dcb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af089dca780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089dc9150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089dcac40"/>
        <function-ref name="overflow" scoped="" ref="0x2af089dc9610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af089d985f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af089d985f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af089dcd430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089dcddb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089dcd8f0"/>
        <function-ref name="overflow" scoped="" ref="0x2af089dcb2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b1725f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b1725f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b170e50"/>
        <function-ref name="fired" scoped="" ref="0x2af08b171e00"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b170800"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b170340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b16f340"/>
        <function-ref name="start" scoped="" ref="0x2af08b171430"/>
        <function-ref name="stop" scoped="" ref="0x2af08b171940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af08b16cd20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af08b16cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b169670"/>
        <function-ref name="fired" scoped="" ref="0x2af08b16a550"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b169020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b16aa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b169b30"/>
        <function-ref name="start" scoped="" ref="0x2af08b16bb60"/>
        <function-ref name="stop" scoped="" ref="0x2af08b16a090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08b16f9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08b16f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08b16d7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b16c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b16dca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b16c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2af089e216a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2af089e216a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e21a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e21bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e21d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e20020"/>
        <function-ref name="get" scoped="" ref="0x2af089e201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e20340"/>
        <function-ref name="set" scoped="" ref="0x2af089e204d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2af089e209d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2af089e209d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e20d50"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e1f020"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e1f340"/>
        <function-ref name="get" scoped="" ref="0x2af089e1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e1f660"/>
        <function-ref name="set" scoped="" ref="0x2af089e1f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e1f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2af089e1fce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2af089e1fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e1e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e1e230"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e1e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e1e550"/>
        <function-ref name="get" scoped="" ref="0x2af089e1e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e1e870"/>
        <function-ref name="set" scoped="" ref="0x2af089e1ea00"/>
        <function-ref name="clr" scoped="" ref="0x2af089e1eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2af089e22370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af089e22370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e226f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e22880"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e22a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e22ba0"/>
        <function-ref name="get" scoped="" ref="0x2af089e22d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e21020"/>
        <function-ref name="set" scoped="" ref="0x2af089e211b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2af089e1c380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2af089e1c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e1c700"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e1c890"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e1ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e1cbb0"/>
        <function-ref name="get" scoped="" ref="0x2af089e1cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e1b020"/>
        <function-ref name="set" scoped="" ref="0x2af089e1b1b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2af089e230e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2af089e230e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e23460"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e235f0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e23780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e23910"/>
        <function-ref name="get" scoped="" ref="0x2af089e23aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e23c30"/>
        <function-ref name="set" scoped="" ref="0x2af089e23dc0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2af089e1d020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2af089e1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e1d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e1d530"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e1d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e1d850"/>
        <function-ref name="get" scoped="" ref="0x2af089e1d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e1db70"/>
        <function-ref name="set" scoped="" ref="0x2af089e1dd00"/>
        <function-ref name="clr" scoped="" ref="0x2af089e1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e19930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e19930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e19cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e19e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e18020"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e18340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e18660"/>
        <function-ref name="get" scoped="" ref="0x2af089e187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e18980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e18b10"/>
        <function-ref name="set" scoped="" ref="0x2af089e18ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e18e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e17020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e172b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e17440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e1a710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e1a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e1aa90"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e1ac20"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e1adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e19020"/>
        <function-ref name="get" scoped="" ref="0x2af089e191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e19340"/>
        <function-ref name="set" scoped="" ref="0x2af089e194d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e19660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e13480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e13480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e13800"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e13990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e13b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e13cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e13e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e121b0"/>
        <function-ref name="get" scoped="" ref="0x2af089e12340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e124d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e12660"/>
        <function-ref name="set" scoped="" ref="0x2af089e127f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e12980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e12b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e12da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e151b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e151b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e15530"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e156c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e15850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e159e0"/>
        <function-ref name="get" scoped="" ref="0x2af089e15b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e15d00"/>
        <function-ref name="set" scoped="" ref="0x2af089e13020"/>
        <function-ref name="clr" scoped="" ref="0x2af089e131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e60020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e603a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e60530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e606c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e60850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e60b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e60d00"/>
        <function-ref name="get" scoped="" ref="0x2af089e5f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e5f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e5f340"/>
        <function-ref name="set" scoped="" ref="0x2af089e5f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e5f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e5f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e5fa80"/>
        <function-ref name="clr" scoped="" ref="0x2af089e5fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e62d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e62d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e61180"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e61310"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e614a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e61630"/>
        <function-ref name="get" scoped="" ref="0x2af089e617c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e61950"/>
        <function-ref name="set" scoped="" ref="0x2af089e61ae0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e61c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e5cde0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e5cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e5b180"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e5b310"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e5b4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e5b630"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e5b7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e5b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e5bae0"/>
        <function-ref name="get" scoped="" ref="0x2af089e5bc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e5be00"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e5a020"/>
        <function-ref name="set" scoped="" ref="0x2af089e5a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e5a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e5a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e5a760"/>
        <function-ref name="clr" scoped="" ref="0x2af089e5a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e5db70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e5db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e5c020"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e5c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e5c340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e5c4d0"/>
        <function-ref name="get" scoped="" ref="0x2af089e5c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e5c7f0"/>
        <function-ref name="set" scoped="" ref="0x2af089e5c980"/>
        <function-ref name="clr" scoped="" ref="0x2af089e5cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e57930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e57930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e57cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e57e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e56020"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e56340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e56660"/>
        <function-ref name="get" scoped="" ref="0x2af089e567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e56980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e56b10"/>
        <function-ref name="set" scoped="" ref="0x2af089e56ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e56e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e55020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e552b0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e55440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e58710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e58710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e58a90"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e58c20"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e58db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e57020"/>
        <function-ref name="get" scoped="" ref="0x2af089e571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e57340"/>
        <function-ref name="set" scoped="" ref="0x2af089e574d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e57660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e52480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e52480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e52800"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e52990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e52b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e52cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e52e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e51020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e511b0"/>
        <function-ref name="get" scoped="" ref="0x2af089e51340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e51660"/>
        <function-ref name="set" scoped="" ref="0x2af089e517f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e51980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e51b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e51da0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e531b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e531b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e53530"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e536c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e53850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e539e0"/>
        <function-ref name="get" scoped="" ref="0x2af089e53b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e53d00"/>
        <function-ref name="set" scoped="" ref="0x2af089e52020"/>
        <function-ref name="clr" scoped="" ref="0x2af089e521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af089e4c020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af089e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e4c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e4c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e4c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e4c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e4cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e4cd00"/>
        <function-ref name="get" scoped="" ref="0x2af089e4b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e4b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e4b340"/>
        <function-ref name="set" scoped="" ref="0x2af089e4b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e4b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e4b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e4ba80"/>
        <function-ref name="clr" scoped="" ref="0x2af089e4bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af089e4fd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e4fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e4d180"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e4d310"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e4d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e4d630"/>
        <function-ref name="get" scoped="" ref="0x2af089e4d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e4d950"/>
        <function-ref name="set" scoped="" ref="0x2af089e4dae0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e4dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2af089e895a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2af089e895a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af089e89920"/>
        <function-ref name="disable" scoped="" ref="0x2af089e89ab0"/>
        <function-ref name="captured" scoped="" ref="0x2af089e89c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af089e89dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2af089e8d210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2af089e8d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089e8d590"/>
        <function-ref name="disable" scoped="" ref="0x2af089e8d720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af089e8d8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af089e8da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2af089e8de30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af089e8de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089e8c1e0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e8c370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af089e8c500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af089e8c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2af089e73da0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2af089e73da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af089e72180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af089e72310"/>
        <function-ref name="captured" scoped="" ref="0x2af089e724a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af089e72630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af089e727c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af089e72950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af089e74020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af089e74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af089e743a0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e74530"/>
        <function-ref name="captured" scoped="" ref="0x2af089e746c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af089e74850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af089e74ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af089e74ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af089e74e60"/>
        <function-ref name="getControl" scoped="" ref="0x2af089e73020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af089e731b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af089e73340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af089e734d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af089e73660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af089e737f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af089e73980"/>
        <function-ref name="setControl" scoped="" ref="0x2af089e73b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2af089e72c20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af089e72c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af089e71020"/>
        <function-ref name="isInput" scoped="" ref="0x2af089e711b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af089e71340"/>
        <function-ref name="toggle" scoped="" ref="0x2af089e714d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af089e71660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af089e717f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af089e71980"/>
        <function-ref name="get" scoped="" ref="0x2af089e71b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af089e71ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af089e71e30"/>
        <function-ref name="set" scoped="" ref="0x2af089e70020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af089e701b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af089e70340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af089e705d0"/>
        <function-ref name="clr" scoped="" ref="0x2af089e70760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af089eb7c40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af089eb7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb6020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb61b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb6340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb64d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb6660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af089eacbc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af089eacbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eab020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eab1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eab340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eab4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eab660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af089eb4bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af089eb4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb3020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb31b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb3340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb34d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb3660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af089eb2bc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af089eb2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb1020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb11b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb1340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb14d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb1660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af089e69d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af089e69d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb80e0"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb8270"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb8400"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb8590"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb8720"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af089eafbc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af089eafbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ead0a0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ead230"/>
        <function-ref name="disable" scoped="" ref="0x2af089ead3c0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ead550"/>
        <function-ref name="enable" scoped="" ref="0x2af089ead6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ead870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af089eb6bc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af089eb6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb5020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb51b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb5340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb54d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb5660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af089eabbc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af089eabbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eaa020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eaa1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eaa340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eaa4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eaa660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af089e65e70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af089e65e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e6a220"/>
        <function-ref name="fired" scoped="" ref="0x2af089e6a3b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e6a540"/>
        <function-ref name="edge" scoped="" ref="0x2af089e6a6d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089e6a860"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e6a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af089eb1bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af089eb1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb0020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb01b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb0340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb04d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb0660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af089eb8c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af089eb8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb70a0"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb7230"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb73c0"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb7550"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb76e0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af089eadc40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af089eadc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eac020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eac1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eac340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eac4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eac660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af089eb5bc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af089eb5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb4020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb41b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb4340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb44d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb4660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af089eb3bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af089eb3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eb2020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eb21b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eb2340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eb24d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eb2660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eb27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af089e6adc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af089e6adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e69180"/>
        <function-ref name="fired" scoped="" ref="0x2af089e69310"/>
        <function-ref name="disable" scoped="" ref="0x2af089e694a0"/>
        <function-ref name="edge" scoped="" ref="0x2af089e69630"/>
        <function-ref name="enable" scoped="" ref="0x2af089e697c0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e69950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af089eb0bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af089eb0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089eaf020"/>
        <function-ref name="fired" scoped="" ref="0x2af089eaf1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089eaf340"/>
        <function-ref name="edge" scoped="" ref="0x2af089eaf4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089eaf660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089eaf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af089ea3a30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af089ea3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea3db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea2020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea21b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea2340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea24d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af089e99bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af089e99bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e98020"/>
        <function-ref name="fired" scoped="" ref="0x2af089e981b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e98340"/>
        <function-ref name="edge" scoped="" ref="0x2af089e984d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089e98660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e987f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af089ea0a30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af089ea0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea0db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089e9f020"/>
        <function-ref name="disable" scoped="" ref="0x2af089e9f1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089e9f340"/>
        <function-ref name="enable" scoped="" ref="0x2af089e9f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e9f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af089e9ea30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af089e9ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e9edb0"/>
        <function-ref name="fired" scoped="" ref="0x2af089e9d020"/>
        <function-ref name="disable" scoped="" ref="0x2af089e9d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089e9d340"/>
        <function-ref name="enable" scoped="" ref="0x2af089e9d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e9d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af089ea5a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af089ea5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea5db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea4020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea41b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea4340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea44d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af089e9ba30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af089e9ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e9a020"/>
        <function-ref name="fired" scoped="" ref="0x2af089e9a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e9a340"/>
        <function-ref name="edge" scoped="" ref="0x2af089e9a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089e9a660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af089ea2a30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af089ea2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea2db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea1020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea11b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea1340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea14d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af089e98bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af089e98bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e97020"/>
        <function-ref name="fired" scoped="" ref="0x2af089e971b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e97340"/>
        <function-ref name="edge" scoped="" ref="0x2af089e974d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089e97660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e977f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af089ea99d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af089ea99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea9d50"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea6020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea61b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea6340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea64d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af089e9da30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af089e9da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e9ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2af089e9c020"/>
        <function-ref name="disable" scoped="" ref="0x2af089e9c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089e9c340"/>
        <function-ref name="enable" scoped="" ref="0x2af089e9c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e9c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af089ea4a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af089ea4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea4db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea3020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea31b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea3340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea34d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af089e9abc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af089e9abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e99020"/>
        <function-ref name="fired" scoped="" ref="0x2af089e991b0"/>
        <function-ref name="disable" scoped="" ref="0x2af089e99340"/>
        <function-ref name="edge" scoped="" ref="0x2af089e994d0"/>
        <function-ref name="enable" scoped="" ref="0x2af089e99660"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af089ea1a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af089ea1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea1db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea0020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea01b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea0340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea04d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af089e9fa30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af089e9fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e9fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af089e9e020"/>
        <function-ref name="disable" scoped="" ref="0x2af089e9e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089e9e340"/>
        <function-ref name="enable" scoped="" ref="0x2af089e9e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af089ea6a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af089ea6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089ea6db0"/>
        <function-ref name="fired" scoped="" ref="0x2af089ea5020"/>
        <function-ref name="disable" scoped="" ref="0x2af089ea51b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089ea5340"/>
        <function-ref name="enable" scoped="" ref="0x2af089ea54d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089ea5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af089e9ca30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af089e9ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089e9cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af089e9b020"/>
        <function-ref name="disable" scoped="" ref="0x2af089e9b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af089e9b340"/>
        <function-ref name="enable" scoped="" ref="0x2af089e9b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af089e9b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2af089f70610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2af089f70610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089f70990"/>
        <function-ref name="fired" scoped="" ref="0x2af089f70b20"/>
        <function-ref name="disable" scoped="" ref="0x2af089f70cb0"/>
        <function-ref name="edge" scoped="" ref="0x2af089f70e40"/>
        <function-ref name="enable" scoped="" ref="0x2af089fbb020"/>
        <function-ref name="getValue" scoped="" ref="0x2af089fbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2af089f71a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2af089f71a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089f71db0"/>
        <function-ref name="disable" scoped="" ref="0x2af089f70020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af089f701b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af089f70340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2af089fb9610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2af089fb9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af089fb9990"/>
        <function-ref name="fired" scoped="" ref="0x2af089fb9b20"/>
        <function-ref name="disable" scoped="" ref="0x2af089fb9cb0"/>
        <function-ref name="edge" scoped="" ref="0x2af089fb9e40"/>
        <function-ref name="enable" scoped="" ref="0x2af089fb8020"/>
        <function-ref name="getValue" scoped="" ref="0x2af089fb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2af089fbaa70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2af089fbaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af089fbadf0"/>
        <function-ref name="disable" scoped="" ref="0x2af089fb9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af089fb91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af089fb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af08a312e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a312e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a311410"/>
        <function-ref name="write" scoped="" ref="0x2af08a3115a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af08a2b5160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af08a2b5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af08a316e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a316e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a315210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af08a310880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a310880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a310c00"/>
        <function-ref name="write" scoped="" ref="0x2af08a310d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af08a3080a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af08a3080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a308420"/>
        <function-ref name="write" scoped="" ref="0x2af08a3085b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af08a30f0a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af08a30f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30f420"/>
        <function-ref name="write" scoped="" ref="0x2af08a30f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af08a2fc500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af08a2fc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2fc880"/>
        <function-ref name="write" scoped="" ref="0x2af08a2fca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af08a2ff500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a2ff500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2ff880"/>
        <function-ref name="write" scoped="" ref="0x2af08a2ffa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af08a2b4490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af08a2b4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af08a304880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af08a304880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a304c00"/>
        <function-ref name="write" scoped="" ref="0x2af08a304d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af08a300500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a300500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a300880"/>
        <function-ref name="write" scoped="" ref="0x2af08a300a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af08a315e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af08a315e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a314210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af08a314e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af08a314e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a312210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af08a30a880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af08a30a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30ac00"/>
        <function-ref name="write" scoped="" ref="0x2af08a30ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af08a30b0a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af08a30b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30b420"/>
        <function-ref name="write" scoped="" ref="0x2af08a30b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af08a30f880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af08a30f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30fc00"/>
        <function-ref name="write" scoped="" ref="0x2af08a30fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af08a2b7a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a2b7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af08a2b7e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af08a2b6020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af08a2b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af08a2b3e00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a2b3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af08a2b1490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af08a2b1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af08a303c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a303c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3020a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a302230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af08a2b1be0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af08a2b1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a317020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af08a300ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a300ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2ff0a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a2ff230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af08a2b3160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a2b3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af08a3040a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af08a3040a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a304420"/>
        <function-ref name="write" scoped="" ref="0x2af08a3045b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af08a314670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a314670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3149f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a314b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af08a315670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a315670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3159f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a315b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af08a2b6ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af08a2b6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af08a3060a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a3060a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a306420"/>
        <function-ref name="write" scoped="" ref="0x2af08a3065b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af08a308880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af08a308880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a308c00"/>
        <function-ref name="write" scoped="" ref="0x2af08a308d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af08a306880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a306880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a306c00"/>
        <function-ref name="write" scoped="" ref="0x2af08a306d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af08a2fdce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af08a2fdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2fc0a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a2fc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af08a2ffce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a2ffce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2fd0a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a2fd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af08a30b880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af08a30b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30bc00"/>
        <function-ref name="write" scoped="" ref="0x2af08a30bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af08a3070a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af08a3070a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a307420"/>
        <function-ref name="write" scoped="" ref="0x2af08a3075b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af08a301ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af08a301ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3000a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a300230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af08a30e880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af08a30e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30ec00"/>
        <function-ref name="write" scoped="" ref="0x2af08a30ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af08a2fcce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af08a2fcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a2fb0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a2fb230"/>
        <function-ref name="write" scoped="" ref="0x2af08a2fb3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a2fb550"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a2fb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af08a2b6480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a2b6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af08a316670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af08a316670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3169f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a316b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af08a312670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a312670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3129f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a312b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af08a3090a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af08a3090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a309420"/>
        <function-ref name="write" scoped="" ref="0x2af08a3095b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af08a30e0a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af08a30e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30e420"/>
        <function-ref name="write" scoped="" ref="0x2af08a30e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af08a309880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af08a309880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a309c00"/>
        <function-ref name="write" scoped="" ref="0x2af08a309d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af08a311870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af08a311870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a311bf0"/>
        <function-ref name="write" scoped="" ref="0x2af08a311d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af08a2b57b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af08a2b57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af08a3100a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a3100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a310420"/>
        <function-ref name="write" scoped="" ref="0x2af08a3105b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a2b8e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a2b8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a2b71c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a2b7350"/>
        <function-ref name="request" scoped="" ref="0x2af08a2b74e0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a2b7670"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a2b7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af08a3172f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af08a3172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a317670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af08a316020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af08a316020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af08a301500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af08a301500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a301880"/>
        <function-ref name="write" scoped="" ref="0x2af08a301a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af08a302ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af08a302ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3010a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a301230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af08a2b37b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a2b37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af08a302500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a302500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a302880"/>
        <function-ref name="write" scoped="" ref="0x2af08a302a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af08a2fd500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af08a2fd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2fd880"/>
        <function-ref name="write" scoped="" ref="0x2af08a2fda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af08a30a0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a30a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30a420"/>
        <function-ref name="write" scoped="" ref="0x2af08a30a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af08a307880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af08a307880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a307c00"/>
        <function-ref name="write" scoped="" ref="0x2af08a307d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af08a2b5e00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af08a2b5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af08a2b4ae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af08a2b4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2b4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af08a30d0a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af08a30d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30d420"/>
        <function-ref name="write" scoped="" ref="0x2af08a30d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af08a317940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af08a317940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a317cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af08a30d880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af08a30d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a30dc00"/>
        <function-ref name="write" scoped="" ref="0x2af08a30dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af08a3030a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af08a3030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a303820"/>
        <function-ref name="write" scoped="" ref="0x2af08a3039b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af08a2fb9b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af08a2fb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a2fbd30"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a2fa020"/>
        <function-ref name="write" scoped="" ref="0x2af08a2fa1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a2fa340"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a2fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2af089fd0630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2af089fd0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af089fd09b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af089fd0b40"/>
        <function-ref name="write" scoped="" ref="0x2af089fd0cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af089fd0e60"/>
        <function-ref name="readDone" scoped="" ref="0x2af089fcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af089fd1680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fd1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af089fd1a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af089fd1b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af089fd1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2af089fcf8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2af089fcf8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089fcfc40"/>
        <function-ref name="write" scoped="" ref="0x2af089fcfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2af089fce6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2af089fce6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089fcea70"/>
        <function-ref name="write" scoped="" ref="0x2af089fcec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af089fd4960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089fd4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089fd4ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089fd4e70"/>
        <function-ref name="request" scoped="" ref="0x2af089fd1030"/>
        <function-ref name="granted" scoped="" ref="0x2af089fd11c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089fd1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2af089fcc510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2af089fcc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af089fcc890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2af08a00f680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af08a00f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a00fa00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a00fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2af089fc6bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2af089fc6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af089fc5020"/>
        <function-ref name="writeDone" scoped="" ref="0x2af089fc51b0"/>
        <function-ref name="write" scoped="" ref="0x2af089fc5340"/>
        <function-ref name="beginRead" scoped="" ref="0x2af089fc54d0"/>
        <function-ref name="readDone" scoped="" ref="0x2af089fc5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af089fcb930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af089fcb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af089fcbcb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af089fcbe40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af089fc7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2af089fbf080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af089fbf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af089fbf400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2af089fbe020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2af089fbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af089fbe3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af089fbe530"/>
        <function-ref name="isState" scoped="" ref="0x2af089fbe6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af089fbe850"/>
        <function-ref name="requestState" scoped="" ref="0x2af089fbe9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af089fbeb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af089fc1400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af089fc1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089fc1780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089fc1910"/>
        <function-ref name="request" scoped="" ref="0x2af089fc1aa0"/>
        <function-ref name="granted" scoped="" ref="0x2af089fc1c30"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089fc1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2af089fc4020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2af089fc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089fc43a0"/>
        <function-ref name="write" scoped="" ref="0x2af089fc4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2af089fc4db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2af089fc4db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af089fc2180"/>
        <function-ref name="write" scoped="" ref="0x2af089fc2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af089fbedf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af089fbedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af089fbd1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af089fbd350"/>
        <function-ref name="led1On" scoped="" ref="0x2af089fbd4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af089fbd670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af089fbd800"/>
        <function-ref name="get" scoped="" ref="0x2af089fbd990"/>
        <function-ref name="led1Off" scoped="" ref="0x2af089fbdb20"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08a0101b0"/>
        <function-ref name="set" scoped="" ref="0x2af089fbdcb0"/>
        <function-ref name="led0On" scoped="" ref="0x2af089fbde40"/>
        <function-ref name="led2On" scoped="" ref="0x2af08a010020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af089fc7810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af089fc7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af089fc7b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af089fc7d20"/>
        <function-ref name="request" scoped="" ref="0x2af089fc6020"/>
        <function-ref name="granted" scoped="" ref="0x2af089fc61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af089fc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2af08a00a120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2af08a00a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a00a4a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a00a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2af089fc2ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2af089fc2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af089fc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a063770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a063770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a063af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a063c80"/>
        <function-ref name="isState" scoped="" ref="0x2af08a063e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a060020"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a0601b0"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a060340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a05f280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a05f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a05f600"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a05f790"/>
        <function-ref name="isState" scoped="" ref="0x2af08a05f920"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a05fab0"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a05fc40"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a05fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a05b020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a05b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a05b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a05bb70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a05bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a05a020"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a05a1b0"/>
        <function-ref name="isState" scoped="" ref="0x2af08a05a340"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a05a4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a05a660"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a05a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af08a2de020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af08a2de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a2de3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a2de530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af08a09c8f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af08a09c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af08a09cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a042c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a042c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a09c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a09c1b0"/>
        <function-ref name="request" scoped="" ref="0x2af08a09c340"/>
        <function-ref name="granted" scoped="" ref="0x2af08a09c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a09c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08b261af0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b261af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08b261e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b260030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af08b25f440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af08b25f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b25f7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b25f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af08b25fbe0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08b25fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af08b25d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af08b2602c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af08b2602c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af08b260640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08b263e70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08b263e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b261220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08b2613b0"/>
        <function-ref name="request" scoped="" ref="0x2af08b261540"/>
        <function-ref name="granted" scoped="" ref="0x2af08b2616d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b261860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af08b2608d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af08b2608d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af08b260c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af08b260de0"/>
        <function-ref name="splitRead" scoped="" ref="0x2af08b25f020"/>
        <function-ref name="write" scoped="" ref="0x2af08b25f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af08a0896b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a0896b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08a089a30"/>
        <function-ref name="configure" scoped="" ref="0x2af08a089bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af08a087850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af08a087850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a087bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a087d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af08a085a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08a085a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af08a085dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af08a088020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af08a088020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af08a0883a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af08a086690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af08a086690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a086a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a086ba0"/>
        <function-ref name="request" scoped="" ref="0x2af08a086d30"/>
        <function-ref name="granted" scoped="" ref="0x2af08a085020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a0851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a08a430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a08a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a08a7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a08a940"/>
        <function-ref name="request" scoped="" ref="0x2af08a08aad0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a08ac60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a08adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af08a0886a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af08a0886a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af08a088a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af08a088bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2af08a088d40"/>
        <function-ref name="write" scoped="" ref="0x2af08a087020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af08a0832a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af08a0832a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a083620"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a0837b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af08a0e3250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a0e3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08a0e35f0"/>
        <function-ref name="configure" scoped="" ref="0x2af08a0e3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af08a0e2c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af08a0e2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a0e1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a0e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af08a0e03e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af08a0e03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af08a0e0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af08a0e3a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af08a0e3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af08a0e3d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2af08a0e0a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af08a0e0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08a0e0dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08a0df020"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08a0df1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08a0df340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af08a0df4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af08a0df660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af08a0df7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af08a0df980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af08a0dfb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af08a0dfca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af08a0dfe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af08a0de020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af08a0de1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af08a0de440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af08a0de5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af08a0de760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af08a0de8f0"/>
        <function-ref name="isUart" scoped="" ref="0x2af08a0dea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af08a0dec10"/>
        <function-ref name="isSpi" scoped="" ref="0x2af08a0deda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af08a0dd020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af08a0dd1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af08a0dd340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af08a0dd4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08a0dd660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af08a0dd9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08a0ddb80"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08a0ddd10"/>
        <function-ref name="tx" scoped="" ref="0x2af08a0dc020"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08a0dc1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08a0dc340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08a0dc4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08a0dc660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08a0dc7f0"/>
        <function-ref name="rx" scoped="" ref="0x2af08a0dc980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08a0dcb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08a0dcca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08a0dce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08a0db020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08a0db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08a0dbc20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08a0dbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08a0da020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08a0da1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af08a0da340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08a0da4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08a0da660"/>
        <function-ref name="get" scoped="" ref="0x2af08a0da7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08a0da980"/>
        <function-ref name="led2On" scoped="" ref="0x2af08a0d9020"/>
        <function-ref name="set" scoped="" ref="0x2af08a0daca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08a0dab10"/>
        <function-ref name="led0On" scoped="" ref="0x2af08a0dae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af08a0e15b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af08a0e15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a0e1950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a0e1ae0"/>
        <function-ref name="request" scoped="" ref="0x2af08a0e1c70"/>
        <function-ref name="granted" scoped="" ref="0x2af08a0e1e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a0e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a0e4470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a0e4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a0e4810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a0e49a0"/>
        <function-ref name="request" scoped="" ref="0x2af08a0e4b30"/>
        <function-ref name="granted" scoped="" ref="0x2af08a0e4cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a0e4e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af08a0e2060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af08a0e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af08a0e23e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af08a0e2570"/>
        <function-ref name="splitRead" scoped="" ref="0x2af08a0e2700"/>
        <function-ref name="write" scoped="" ref="0x2af08a0e2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af08a0db480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af08a0db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a0db800"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a0db990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2af08a0d92f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2af08a0d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a0d9670"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a0d9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2af08a0cb5e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af08a0cb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08a0cb960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af08a0ccd10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08a0ccd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a0cb0e0"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a0cb270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af08a0d0020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08a0d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08a0d03a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08a0d0530"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08a0d06c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08a0d0850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af08a0d09e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af08a0d0b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af08a0d0d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af08a0cf020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af08a0cf1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af08a0cf340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af08a0cf4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af08a0cf660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af08a0cf7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af08a0cfa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af08a0cfc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af08a0cfda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af08a0ce020"/>
        <function-ref name="isUart" scoped="" ref="0x2af08a0ce1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af08a0ce340"/>
        <function-ref name="isSpi" scoped="" ref="0x2af08a0ce4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af08a0ce660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af08a0ce7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af08a0ce980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af08a0ceb10"/>
        <function-ref name="getMode" scoped="" ref="0x2af08a0ceca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af08a0cd220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08a0cd3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08a0cd540"/>
        <function-ref name="tx" scoped="" ref="0x2af08a0cd6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08a0cd860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08a0cd9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08a0cdb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08a0cdd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08a0cc020"/>
        <function-ref name="rx" scoped="" ref="0x2af08a0cc1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08a0cc340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08a0cc4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08a0cc660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08a0cc7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08a0cc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af08a14cb20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af08a14cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a14b020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a14b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a14b340"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a14b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a14b660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a14b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a14b980"/>
        <function-ref name="get" scoped="" ref="0x2af08a14bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a14bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a14be30"/>
        <function-ref name="set" scoped="" ref="0x2af08a14a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a14a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a14a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a14a5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a14a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af08a120780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af08a120780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a120b00"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a120c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2af08a14ab20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2af08a14ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a149020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a1491b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a149340"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a1494d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a149660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a1497f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a149980"/>
        <function-ref name="get" scoped="" ref="0x2af08a149b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a149ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a149e30"/>
        <function-ref name="set" scoped="" ref="0x2af08a148020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a1481b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a148340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a1485d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a148760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2af08a148b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2af08a148b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a147020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a1471b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a147340"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a1474d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a147660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a1477f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a147980"/>
        <function-ref name="get" scoped="" ref="0x2af08a147b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a147ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a147e30"/>
        <function-ref name="set" scoped="" ref="0x2af08a146020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a1461b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a146340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a1465d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a146760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2af08a127c70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af08a127c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08a124020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08a1241b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08a124340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08a1244d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af08a124660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af08a1247f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af08a124980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af08a124b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af08a124ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af08a124e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af08a123020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af08a1231b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af08a123340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af08a1235d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af08a123760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af08a1238f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af08a123a80"/>
        <function-ref name="isUart" scoped="" ref="0x2af08a123c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af08a123da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af08a122020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af08a1221b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af08a122340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af08a1224d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af08a122660"/>
        <function-ref name="getMode" scoped="" ref="0x2af08a1227f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af08a122b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08a122d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08a121020"/>
        <function-ref name="tx" scoped="" ref="0x2af08a1211b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08a121340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08a1214d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08a121660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08a1217f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08a121980"/>
        <function-ref name="rx" scoped="" ref="0x2af08a121b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08a121ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08a121e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08a120020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08a1201b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08a120340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2af08a155d10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2af08a155d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af08a11e0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af08a11e270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af08a11e400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af08a11e590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af08a11e720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af08a11e8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af08a11ea40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af08a11ebd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08a11ed60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af08a11d020"/>
        <function-ref name="getData" scoped="" ref="0x2af08a11d1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af08a11d340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af08a11d4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af08a11d760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af08a11d8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2af08a11da80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af08a11dc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af08a11dda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af08a154020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af08a1541b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af08a154340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af08a1544d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af08a154660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af08a1547f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af08a154980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af08a154d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af08a153020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af08a1531b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af08a153340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af08a1534d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af08a153660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af08a1537f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af08a153980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af08a153b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af08a153ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af08a153e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af08a152020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af08a1521b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af08a152340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af08a1524d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af08a152660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af08a1527f0"/>
        <function-ref name="setData" scoped="" ref="0x2af08a152980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af08a152b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af08a152ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af08a152e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af08a151020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af08a1511b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af08a151340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af08a1518d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af08a151a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af08a151bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af08a151d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af08a150020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af08a1501b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af08a150340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af08a1504d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af08a150660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af08a1507f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2af08a14eb20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2af08a14eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a14d020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a14d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a14d340"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a14d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a14d660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a14d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a14d980"/>
        <function-ref name="get" scoped="" ref="0x2af08a14db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a14dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a14de30"/>
        <function-ref name="set" scoped="" ref="0x2af08a14c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a14c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a14c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a14c5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a14c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af08a11f150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a11f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08a11f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af08a150bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af08a150bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a14f020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a14f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a14f340"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a14f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a14f660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a14f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a14f980"/>
        <function-ref name="get" scoped="" ref="0x2af08a14fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a14fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a14fe30"/>
        <function-ref name="set" scoped="" ref="0x2af08a14e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a14e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a14e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a14e5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a14e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08b2565d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b2565d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08b256950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b256ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2af08b2507c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af08b2507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08b250b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af08b249a80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b249a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08b249e00"/>
        <function-ref name="configure" scoped="" ref="0x2af08b248020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2af08b250dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af08b250dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af08b24f180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af08b24f310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af08b24f4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af08b24f630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af08b24f7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af08b24f950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af08b24fae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af08b24fc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b24fe00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af08b24e020"/>
        <function-ref name="getData" scoped="" ref="0x2af08b24e1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af08b24e340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af08b24e4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af08b24e760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af08b24e8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2af08b24ea80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af08b24ec10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af08b24eda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af08b24d020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af08b24d1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af08b24d340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af08b24d4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af08b24d660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af08b24d7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af08b24d980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af08b24dd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af08b24c020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af08b24c1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af08b24c340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af08b24c4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af08b24c660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af08b24c7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af08b24c980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af08b24cb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af08b24cca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af08b24ce30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af08b24b020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af08b24b1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af08b24b340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af08b24b4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af08b24b660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af08b24b7f0"/>
        <function-ref name="setData" scoped="" ref="0x2af08b24b980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af08b24bb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af08b24bca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af08b24be30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af08b24a020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af08b24a1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af08b24a340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af08b24a8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af08b24aa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af08b24abf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af08b24ad80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af08b249020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af08b2491b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af08b249340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af08b2494d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af08b249660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af08b2497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af08b250020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af08b250020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08b2503a0"/>
        <function-ref name="txDone" scoped="" ref="0x2af08b250530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08b257860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08b257860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b257be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08b257d70"/>
        <function-ref name="request" scoped="" ref="0x2af08b256020"/>
        <function-ref name="granted" scoped="" ref="0x2af08b2561b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b256340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af08b2555a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af08b2555a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08b255920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08b255ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08b255c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08b255dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af08b254020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af08b2541b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af08b254340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af08b2544d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af08b254660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af08b2547f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af08b254980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af08b254b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af08b254ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af08b253020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af08b2531b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af08b253340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af08b2534d0"/>
        <function-ref name="isUart" scoped="" ref="0x2af08b253660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af08b2537f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af08b253980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af08b253b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af08b253ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af08b253e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af08b252020"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b2521b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af08b252540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08b2526d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08b252860"/>
        <function-ref name="tx" scoped="" ref="0x2af08b2529f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08b252b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08b252d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08b251020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08b2511b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08b251340"/>
        <function-ref name="rx" scoped="" ref="0x2af08b2514d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08b251660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08b2517f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08b251980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08b251b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08b251ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af08b256d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b256d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08b255180"/>
        <function-ref name="userId" scoped="" ref="0x2af08b255310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08a1c72c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08a1c72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08a1c7640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08a1c77d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af08a1c58a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a1c58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08a1c5c20"/>
        <function-ref name="configure" scoped="" ref="0x2af08a1c5db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af08a1ca4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af08a1ca4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a1ca850"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a1ca9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a1c8020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a1c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a1c83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a1c8530"/>
        <function-ref name="request" scoped="" ref="0x2af08a1c86c0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a1c8850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a1c89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af08a1c93f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a1c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08a1c9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af08a1c7ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08a1c7e50"/>
        <function-ref name="userId" scoped="" ref="0x2af08a1c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af08a1c2e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08a1c1210"/>
        <function-ref name="userId" scoped="" ref="0x2af08a1c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af08a1c3060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af08a1c3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a1c3400"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a1c3590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2af08a1c2840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af08a1c2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08a1c2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af08a1c3990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af08a1c3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08a1c3d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2af08a1c2060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2af08a1c2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af08a1c23e0"/>
        <function-ref name="txDone" scoped="" ref="0x2af08a1c2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08a1be850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08a1be850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08a1bebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08a1bed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af08a1bb570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08a1bb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08a1bb910"/>
        <function-ref name="configure" scoped="" ref="0x2af08a1bbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af08a1bc020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08a1bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a1bc3a0"/>
        <function-ref name="requested" scoped="" ref="0x2af08a1bc530"/>
        <function-ref name="granted" scoped="" ref="0x2af08a1bc6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a1bc850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08a1bc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a1bfa80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a1bfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a1bfe20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a1be020"/>
        <function-ref name="request" scoped="" ref="0x2af08a1be1b0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a1be340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a1be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af08a1bcc30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08a1bcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08a1bb020"/>
        <function-ref name="userId" scoped="" ref="0x2af08a1bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b28da40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b28da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b28ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af08b28c0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af08b28c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af08b28c420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af08b28c5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af08b28c740"/>
        <function-ref name="dequeue" scoped="" ref="0x2af08b28c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af08b289020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af08b289020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af08b2893c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b289550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af08b288cf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af08b288cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af08b32d0e0"/>
        <function-ref name="configure" scoped="" ref="0x2af08b32d270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af08b32d500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af08b32d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af08b32d880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af08b32da10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af08b32dba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af08b32dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af08b2897a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af08b2897a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b289b20"/>
        <function-ref name="requested" scoped="" ref="0x2af08b289cb0"/>
        <function-ref name="granted" scoped="" ref="0x2af08b289e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b288020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af08b2881b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08b32c020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08b32c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08b32c3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08b32c530"/>
        <function-ref name="led1On" scoped="" ref="0x2af08b32c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08b32c850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08b32c9e0"/>
        <function-ref name="get" scoped="" ref="0x2af08b32cb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08b32cd00"/>
        <function-ref name="led0On" scoped="" ref="0x2af08b32b4d0"/>
        <function-ref name="set" scoped="" ref="0x2af08b32b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af08b32b020"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08b32b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08b28a270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08b28a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08b28a610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08b28a7a0"/>
        <function-ref name="request" scoped="" ref="0x2af08b28a930"/>
        <function-ref name="granted" scoped="" ref="0x2af08b28aac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08b28ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af08b288400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af08b288400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af08b288780"/>
        <function-ref name="userId" scoped="" ref="0x2af08b288910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2af08b32b7a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2af08b32b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08b32bb20"/>
        <function-ref name="runTask" scoped="" ref="0x2af08b32bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2af08a215540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af08a215540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af08a2158c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af08a215a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af08a215be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af08a215d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af08a212020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af08a2121b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af08a212340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af08a2124d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08a212660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af08a2127f0"/>
        <function-ref name="getData" scoped="" ref="0x2af08a212980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af08a212b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af08a212ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af08a211020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af08a2111b0"/>
        <function-ref name="getIV" scoped="" ref="0x2af08a211340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af08a2114d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af08a211660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af08a2117f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af08a211980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af08a211b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af08a211ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af08a211e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af08a210020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af08a2101b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af08a210540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af08a2106d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af08a210860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af08a2109f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af08a210b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af08a210d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af08a20f020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af08a20f1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af08a20f340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af08a20f4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af08a20f660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af08a20f7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af08a20f980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af08a20fb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af08a20fca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af08a20fe30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af08a20e020"/>
        <function-ref name="setData" scoped="" ref="0x2af08a20e1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af08a20e340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af08a20e4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af08a20e660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af08a20e7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af08a20e980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af08a20eb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af08a20d420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af08a20d5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af08a20d740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af08a20d8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af08a20da60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af08a20dbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af08a20dd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af08a20c020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af08a20c1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af08a20c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2af08a202250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2af08a202250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af08a2025d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af08a202760"/>
        <function-ref name="setUctl" scoped="" ref="0x2af08a2028f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af08a202a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af08a202c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af08a202da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af08a201020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af08a2011b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af08a201340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af08a2014d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af08a201660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af08a2017f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af08a201980"/>
        <function-ref name="getUbr" scoped="" ref="0x2af08a201c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af08a201da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af08a200020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af08a2001b0"/>
        <function-ref name="isUart" scoped="" ref="0x2af08a200340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af08a2004d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af08a200660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af08a2007f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af08a200980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af08a200b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af08a200ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08a200e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af08a1ff220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af08a1ff3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af08a1ff540"/>
        <function-ref name="tx" scoped="" ref="0x2af08a1ff6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af08a1ff860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af08a1ff9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af08a1ffb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af08a1ffd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af08a1fe020"/>
        <function-ref name="rx" scoped="" ref="0x2af08a1fe1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af08a1fe340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af08a1fe4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af08a1fe660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af08a1fe7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af08a1fe980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af08a1fccb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af08a1fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a1fb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a1fb230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a1fb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a1fb550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a1fb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a1fb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a1fba00"/>
        <function-ref name="get" scoped="" ref="0x2af08a1fbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a1fbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a1fa020"/>
        <function-ref name="set" scoped="" ref="0x2af08a1fa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a1fa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a1fa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a1fa760"/>
        <function-ref name="clr" scoped="" ref="0x2af08a1fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2af08a209430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2af08a209430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af08a2097b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af08a209940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af08a209ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af08a209c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af08a209df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af08a208020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af08a2081b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af08a208340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08a2084d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af08a208660"/>
        <function-ref name="getData" scoped="" ref="0x2af08a2087f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af08a208980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af08a208b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af08a208da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af08a207020"/>
        <function-ref name="getIV" scoped="" ref="0x2af08a2071b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af08a207340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af08a2074d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af08a207660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af08a2077f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af08a207980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af08a207b10"/>
        <function-ref name="isI2C" scoped="" ref="0x2af08a207ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af08a207e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af08a206020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af08a2063b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af08a206540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af08a2066d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af08a206860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af08a2069f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af08a206b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af08a206d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af08a205020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af08a2051b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af08a205340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af08a2054d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af08a205660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af08a2057f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af08a205980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af08a205b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af08a205ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af08a205e30"/>
        <function-ref name="setData" scoped="" ref="0x2af08a204020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af08a2041b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af08a204340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af08a2044d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af08a204660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af08a2047f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af08a204980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af08a203020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af08a2031b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af08a203340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af08a2034d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af08a203660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af08a2037f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af08a203980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af08a203b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af08a203ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af08a203e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af08a1fed40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af08a1fed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a1fd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a1fd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a1fd400"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a1fd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a1fd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a1fd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a1fda40"/>
        <function-ref name="get" scoped="" ref="0x2af08a1fdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a1fdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a1fc020"/>
        <function-ref name="set" scoped="" ref="0x2af08a1fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a1fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a1fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a1fc760"/>
        <function-ref name="clr" scoped="" ref="0x2af08a1fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af08a348c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a348c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a347210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af08a2edda0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af08a2edda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2eb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af08a2e5b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a2e5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a34a020"/>
        <function-ref name="write" scoped="" ref="0x2af08a34a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af08a346670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a346670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3469f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a346b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af08a33ee50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af08a33ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33d210"/>
        <function-ref name="write" scoped="" ref="0x2af08a33d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af08a346e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af08a346e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a344210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af08a3322f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af08a3322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a332670"/>
        <function-ref name="write" scoped="" ref="0x2af08a332800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af08a3342f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a3342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a334670"/>
        <function-ref name="write" scoped="" ref="0x2af08a334800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af08a2ea120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af08a2ea120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2ea4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af08a33a670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af08a33a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a33ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af08a3352f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a3352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a335670"/>
        <function-ref name="write" scoped="" ref="0x2af08a335800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af08a34ac60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af08a34ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a349020"/>
        <function-ref name="write" scoped="" ref="0x2af08a3491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af08a349c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af08a349c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a348020"/>
        <function-ref name="write" scoped="" ref="0x2af08a3481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af08a340670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af08a340670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3409f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a340b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af08a342e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af08a342e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a341210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af08a344670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af08a344670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3449f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a344b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af08a2ee760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a2ee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af08a2eeae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af08a2eec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af08a2eee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af08a2e9aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a2e9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af08a2e8120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af08a2e8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af08a339a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a339a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a339df0"/>
        <function-ref name="write" scoped="" ref="0x2af08a338020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af08a2e8870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af08a2e8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af08a335ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a335ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a335e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a334020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af08a2eadc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a2eadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af08a33be50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af08a33be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33a210"/>
        <function-ref name="write" scoped="" ref="0x2af08a33a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af08a349480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a349480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a349800"/>
        <function-ref name="write" scoped="" ref="0x2af08a349990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af08a34a480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a34a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a34a800"/>
        <function-ref name="write" scoped="" ref="0x2af08a34a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af08a2ed750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af08a2ed750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2edad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af08a33ce50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a33ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33b210"/>
        <function-ref name="write" scoped="" ref="0x2af08a33b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af08a33d670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af08a33d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a33db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af08a33b670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a33b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33b9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a33bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af08a333ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af08a333ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a333e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a332020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af08a334ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a334ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a334e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a333020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af08a341670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af08a341670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3419f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a341b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af08a33de50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af08a33de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33c210"/>
        <function-ref name="write" scoped="" ref="0x2af08a33c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af08a336ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af08a336ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a336e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af08a343670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af08a343670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3439f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a343b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af08a332ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af08a332ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a332e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a330020"/>
        <function-ref name="write" scoped="" ref="0x2af08a3301b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a330340"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a3304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af08a2ed100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a2ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2ed480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af08a2e5370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af08a2e5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a2e56f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a2e5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af08a348480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a348480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a348800"/>
        <function-ref name="write" scoped="" ref="0x2af08a348990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af08a340e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af08a340e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33e210"/>
        <function-ref name="write" scoped="" ref="0x2af08a33e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af08a344e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af08a344e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a343210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af08a33e670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af08a33e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a33eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af08a347670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af08a347670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3479f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a347b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af08a2eb450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af08a2eb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2eb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af08a347e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a347e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a346210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a2efa80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a2efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a2efe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a2ee020"/>
        <function-ref name="request" scoped="" ref="0x2af08a2ee1b0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a2ee340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a2ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af08a2e7020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af08a2e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af08a2e7cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af08a2e7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af08a3362f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af08a3362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a336670"/>
        <function-ref name="write" scoped="" ref="0x2af08a336800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af08a338ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af08a338ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a338e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a336020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af08a2e9450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a2e9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af08a3382f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a3382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a338670"/>
        <function-ref name="write" scoped="" ref="0x2af08a338800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af08a3332f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af08a3332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a333670"/>
        <function-ref name="write" scoped="" ref="0x2af08a333800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af08a341e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a341e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a340210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af08a33c670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af08a33c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a33c9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a33cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af08a2ebaa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af08a2ebaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2ebe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af08a2ea770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af08a2ea770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2eaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af08a343e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af08a343e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a342210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af08a2e7670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af08a2e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a2e79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af08a342670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af08a342670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3429f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a342b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af08a33ae50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af08a33ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a339610"/>
        <function-ref name="write" scoped="" ref="0x2af08a3397a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af08a3307a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af08a3307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a330b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a330cb0"/>
        <function-ref name="write" scoped="" ref="0x2af08a330e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a32f020"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a32f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af08a31bc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a31bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31a210"/>
        <function-ref name="write" scoped="" ref="0x2af08a31a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af08a326da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af08a326da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a325180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af08a31fb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a31fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31e020"/>
        <function-ref name="write" scoped="" ref="0x2af08a31e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af08a319670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a319670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3199f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a319b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af08a378e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af08a378e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a377210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af08a319e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af08a319e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a318210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af08a36b2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af08a36b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36b670"/>
        <function-ref name="write" scoped="" ref="0x2af08a36b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af08a36d2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a36d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36d670"/>
        <function-ref name="write" scoped="" ref="0x2af08a36d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af08a324120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af08a324120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3244a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af08a373670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af08a373670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3739f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a373b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af08a36f2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a36f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36f670"/>
        <function-ref name="write" scoped="" ref="0x2af08a36f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af08a31ec60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af08a31ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31d020"/>
        <function-ref name="write" scoped="" ref="0x2af08a31d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af08a31dc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af08a31dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31b020"/>
        <function-ref name="write" scoped="" ref="0x2af08a31b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af08a379670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af08a379670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3799f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a379b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af08a37be50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af08a37be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a37a210"/>
        <function-ref name="write" scoped="" ref="0x2af08a37a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af08a318670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af08a318670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3189f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a318b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af08a327760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a327760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af08a327ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af08a327c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af08a327e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af08a322aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a322aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a322e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af08a321120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af08a321120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3215a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af08a372a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a372a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a372df0"/>
        <function-ref name="write" scoped="" ref="0x2af08a371020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af08a321870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af08a321870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a321bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af08a36fad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a36fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36fe50"/>
        <function-ref name="write" scoped="" ref="0x2af08a36d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af08a324dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a324dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a322180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af08a374e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af08a374e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a373210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af08a31d480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a31d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31d800"/>
        <function-ref name="write" scoped="" ref="0x2af08a31d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af08a31e480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a31e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31e800"/>
        <function-ref name="write" scoped="" ref="0x2af08a31e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af08a326750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af08a326750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a326ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af08a376e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a376e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a374210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af08a377670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af08a377670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3779f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a377b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af08a374670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a374670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3749f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a374b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af08a36cad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af08a36cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36ce50"/>
        <function-ref name="write" scoped="" ref="0x2af08a36b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af08a36dad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a36dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36de50"/>
        <function-ref name="write" scoped="" ref="0x2af08a36c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af08a37a670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af08a37a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a37a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a37ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af08a377e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af08a377e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a376210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af08a370ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af08a370ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a370e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a36f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af08a37d670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af08a37d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a37d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a37db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af08a36bad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af08a36bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a36be50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a36a020"/>
        <function-ref name="write" scoped="" ref="0x2af08a36a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a36a340"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a36a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af08a326100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a326100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a326480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af08a31f370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af08a31f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31f6f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a31f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af08a31b480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a31b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31b800"/>
        <function-ref name="write" scoped="" ref="0x2af08a31b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af08a379e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af08a379e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a378210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af08a318e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af08a318e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a37d210"/>
        <function-ref name="write" scoped="" ref="0x2af08a37d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af08a378670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af08a378670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3789f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a378b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af08a31a670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af08a31a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a31a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a31ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af08a325450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af08a325450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3257d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af08a31ae50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a31ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a319210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a3289e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a3289e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a328d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a327020"/>
        <function-ref name="request" scoped="" ref="0x2af08a3271b0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a327340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a3274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af08a320020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af08a320020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af08a320cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af08a320cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a31f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af08a3702f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af08a3702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a370670"/>
        <function-ref name="write" scoped="" ref="0x2af08a370800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af08a371ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af08a371ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a371e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a370020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af08a322450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a322450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3227d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af08a3712f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a3712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a371670"/>
        <function-ref name="write" scoped="" ref="0x2af08a371800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af08a36c2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af08a36c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a36c670"/>
        <function-ref name="write" scoped="" ref="0x2af08a36c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af08a37ae50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a37ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a379210"/>
        <function-ref name="write" scoped="" ref="0x2af08a3793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af08a376670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af08a376670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3769f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a376b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af08a325aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af08a325aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a325e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af08a324770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af08a324770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a324af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af08a37de50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af08a37de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a37b210"/>
        <function-ref name="write" scoped="" ref="0x2af08a37b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af08a320670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af08a320670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a3209f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af08a37b670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af08a37b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a37b9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a37bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af08a373e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af08a373e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a372610"/>
        <function-ref name="write" scoped="" ref="0x2af08a3727a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af08a36a7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af08a36a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a36ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a36acb0"/>
        <function-ref name="write" scoped="" ref="0x2af08a36ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a369020"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a3691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2af08a362b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af08a362b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af08a35f020"/>
        <function-ref name="changed" scoped="" ref="0x2af08a35f1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af08a35f340"/>
        <function-ref name="setAddress" scoped="" ref="0x2af08a35f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2af08a361d30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af08a361d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af08a3b00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2af08a3ac310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af08a3ac310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af08a3ac690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2af08a3a98c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af08a3a98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3a9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2af08a39f020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af08a39f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a39f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2af08a395cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af08a395cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3980a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a398230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2af08a3985b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2af08a3985b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08a398930"/>
        <function-ref name="stop" scoped="" ref="0x2af08a398ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2af08a399210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af08a399210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a399590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2af08a384020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af08a384020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a3843a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a384530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2af08a3848c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2af08a3848c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a384c40"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a384dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a383020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a3831b0"/>
        <function-ref name="get" scoped="" ref="0x2af08a383340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a3834d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a383660"/>
        <function-ref name="clr" scoped="" ref="0x2af08a3837f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2af08a3e3b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af08a3e3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af08a3e5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2af08a382490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af08a382490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a382810"/>
        <function-ref name="write" scoped="" ref="0x2af08a3829a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2af08a382d30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2af08a382d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a37f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a37f270"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a37f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a37f590"/>
        <function-ref name="get" scoped="" ref="0x2af08a37f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a37f8b0"/>
        <function-ref name="set" scoped="" ref="0x2af08a37fa40"/>
        <function-ref name="clr" scoped="" ref="0x2af08a37fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2af08a3c3020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af08a3c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af08a3c3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2af08a3c0d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af08a3c0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af08a41ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08a419260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08a419260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a418090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a418a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a418550"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a417020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2af08a415890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af08a415890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a4126e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a411090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a412ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a411550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af08a40c190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08a40c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a40c510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08a40c6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08a40c830"/>
        <function-ref name="get" scoped="" ref="0x2af08a40c9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08a40cb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a40cce0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08a40ce70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a40b030"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a40b1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08a40b350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08a40b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af08a40f060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08a40f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af0891b3ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2af0891b1240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a40fe70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a40e820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a40e360"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a40ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2af08a3855a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2af08a3855a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a385920"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a385ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a385c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a385dd0"/>
        <function-ref name="get" scoped="" ref="0x2af08a407020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a4071b0"/>
        <function-ref name="set" scoped="" ref="0x2af08a407340"/>
        <function-ref name="clr" scoped="" ref="0x2af08a4074d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af08a405c50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af08a405c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a404020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a4041b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af08a404340"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a4044d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a404660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af08a4047f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a404980"/>
        <function-ref name="get" scoped="" ref="0x2af08a404b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af08a404ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af08a404e30"/>
        <function-ref name="set" scoped="" ref="0x2af08a403020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af08a4031b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af08a403340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af08a4035d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a403760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af08a4069e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af08a4069e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a406d60"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a405020"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a4051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a405340"/>
        <function-ref name="get" scoped="" ref="0x2af08a4054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a405660"/>
        <function-ref name="set" scoped="" ref="0x2af08a4057f0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a405980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08a408a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08a408a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08a408da0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a3fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af08a3efcb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a3efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af08a3ed0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af08a3ed230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af08a3ed3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af08a3ed550"/>
        <function-ref name="setCca" scoped="" ref="0x2af08a3ed6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af08a3ed870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2af08a3ea9f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2af08a3ea9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af08a3ead70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2af08a3ef020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2af08a3ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a3ef3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a3ef530"/>
        <function-ref name="modify" scoped="" ref="0x2af08a3ef6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a3ef850"/>
        <function-ref name="resend" scoped="" ref="0x2af08a3ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08a3f26d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08a3f26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08a3f2a50"/>
        <function-ref name="stop" scoped="" ref="0x2af08a3f2be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2af08a3ec190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2af08a3ec190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af08a3ec510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af08a453650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a453650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af08a4539d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af08a453b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af08a453cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af08a453e80"/>
        <function-ref name="setCca" scoped="" ref="0x2af08a452030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af08a4521c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2af08a44b7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af08a44b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a449d50"/>
        <function-ref name="clear" scoped="" ref="0x2af08a4484c0"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a449620"/>
        <function-ref name="set" scoped="" ref="0x2af08a448bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2af08a432020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a432020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4323a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a432530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2af08a432890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a432890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a432c10"/>
        <function-ref name="write" scoped="" ref="0x2af08a432da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2af08a4525e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2af08a4525e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af08a452960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2af08a435530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af08a435530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4358b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2af08a445880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2af08a445880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af08a445c00"/>
        <function-ref name="disable" scoped="" ref="0x2af08a445d90"/>
        <function-ref name="captured" scoped="" ref="0x2af08a443020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af08a4431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2af08a4517f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2af08a4517f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a44d090"/>
        <function-ref name="fired" scoped="" ref="0x2af08a44e090"/>
        <function-ref name="startAt" scoped="" ref="0x2af08a44ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a44e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08a44d550"/>
        <function-ref name="start" scoped="" ref="0x2af08a4506a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a450bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af08a44da00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a44da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af08a44dd80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af08a44c020"/>
        <function-ref name="getRssi" scoped="" ref="0x2af08a44c1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af08a44c340"/>
        <function-ref name="getPower" scoped="" ref="0x2af08a44c4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af08a44c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2af08a438550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a438550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4388d0"/>
        <function-ref name="write" scoped="" ref="0x2af08a438a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2af08a438e00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af08a438e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4371c0"/>
        <function-ref name="write" scoped="" ref="0x2af08a437350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2af08a42cd40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a42cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a42f0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af08a42f270"/>
        <function-ref name="sfd" scoped="" ref="0x2af08a42f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a3e68c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a3e68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a3e6c40"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a3e6dd0"/>
        <function-ref name="modify" scoped="" ref="0x2af08a453020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a4531b0"/>
        <function-ref name="resend" scoped="" ref="0x2af08a453340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2af08a43ad10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a43ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af08a4390e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af08a439270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af08a439400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2af08a435c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a435c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a434020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af08a43d820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af08a43d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a43dba0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a43dd30"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a43c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a43c1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08a43c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a43c4d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a43c660"/>
        <function-ref name="clr" scoped="" ref="0x2af08a43c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a3e7820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a3e7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a3e7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a44c9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a44c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a44cd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a44b020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a44b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2af08a43eb30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a43eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a445020"/>
        <function-ref name="isSet" scoped="" ref="0x2af08a4451b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a445340"/>
        <function-ref name="set" scoped="" ref="0x2af08a4454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2af08a4343e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a4343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a434960"/>
        <function-ref name="write" scoped="" ref="0x2af08a434af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af08a43a020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af08a43a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a43a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a43a530"/>
        <function-ref name="request" scoped="" ref="0x2af08a43a6c0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a43a850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a43a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2af08a443500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2af08a443500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a443980"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a443b10"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a443ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a443e30"/>
        <function-ref name="get" scoped="" ref="0x2af08a43d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a43d1b0"/>
        <function-ref name="set" scoped="" ref="0x2af08a43d340"/>
        <function-ref name="clr" scoped="" ref="0x2af08a43d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2af08a431130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a431130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4314b0"/>
        <function-ref name="write" scoped="" ref="0x2af08a431640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2af08a4319c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af08a4319c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a431d40"/>
        <function-ref name="write" scoped="" ref="0x2af08a430020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2af08a4376d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a4376d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a437a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2af08a43cb40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2af08a43cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a43b020"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a43b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a43b340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a43b4d0"/>
        <function-ref name="get" scoped="" ref="0x2af08a43b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a43b7f0"/>
        <function-ref name="set" scoped="" ref="0x2af08a43b980"/>
        <function-ref name="clr" scoped="" ref="0x2af08a43bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08a42f6c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08a42f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08a42fa40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08a42fbd0"/>
        <function-ref name="led1On" scoped="" ref="0x2af08a42fd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08a42e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08a42e1b0"/>
        <function-ref name="get" scoped="" ref="0x2af08a42e340"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08a42e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08a42eb10"/>
        <function-ref name="set" scoped="" ref="0x2af08a42e660"/>
        <function-ref name="led0On" scoped="" ref="0x2af08a42e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2af08a42e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2af08a4335e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a4335e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a433960"/>
        <function-ref name="write" scoped="" ref="0x2af08a433af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08a3e6020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08a3e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08a3e63a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a3e6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2af08a439780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af08a439780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a439b00"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a439c90"/>
        <function-ref name="write" scoped="" ref="0x2af08a439e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a438020"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a4381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2af08a437de0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af08a437de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a435180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2af08a434e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af08a434e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a433220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2af08a452d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2af08a452d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af08a451180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af08a4d2c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a4d2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d1210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af08a4dc020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af08a4dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af08a4d6c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a4d6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d5020"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af08a4d0670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a4d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d09f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af08a4c9e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af08a4c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c8210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af08a4d0e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af08a4d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4cf210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af08a5292f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af08a5292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a529670"/>
        <function-ref name="write" scoped="" ref="0x2af08a529800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af08a4bf2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a4bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4bf670"/>
        <function-ref name="write" scoped="" ref="0x2af08a4bf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af08a4db370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af08a4db370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4db6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af08a4c4670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af08a4c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c49f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af08a4c02f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a4c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c0670"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af08a4d5c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af08a4d5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d4020"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af08a4d4c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af08a4d4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d2020"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af08a4ca670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af08a4ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4ca9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af08a4cde50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af08a4cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4cb210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af08a4cf670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af08a4cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4cf9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af08a4de8f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a4de8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af08a4dec70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af08a4dee00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af08a4dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af08a4dad00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a4dad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4d80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af08a4d8370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af08a4d8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af08a4c3a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a4c3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c3df0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af08a4d8ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af08a4d8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4d8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af08a4c0ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a4c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c0e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a4bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af08a4da060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a4da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4da3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af08a4c6e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af08a4c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c4210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af08a4d4480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a4d4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d4800"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af08a4d5480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a4d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d5800"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af08a4dd940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af08a4dd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4ddcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af08a4c7e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a4c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c6210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af08a4c8670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af08a4c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c89f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af08a4c6670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a4c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c69f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af08a52aad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af08a52aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a52ae50"/>
        <function-ref name="write" scoped="" ref="0x2af08a529020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af08a4bfad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a4bfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4bfe50"/>
        <function-ref name="write" scoped="" ref="0x2af08a52a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af08a4cb670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af08a4cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4cb9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af08a4c8e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af08a4c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c7210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af08a4c1ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af08a4c1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c1e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af08a4ce670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af08a4ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4ce9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af08a529ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af08a529ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a529e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a528020"/>
        <function-ref name="write" scoped="" ref="0x2af08a5281b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a528340"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a5284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af08a4dd2f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a4dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4dd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af08a4d6490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af08a4d6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d6810"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af08a4d2480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a4d2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d2800"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af08a4cae50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af08a4cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c9210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af08a4cfe50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af08a4cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4ce210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af08a4c9670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af08a4c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c99f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af08a4d1670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af08a4d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d19f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af08a4dc670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af08a4dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4dc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af08a4d1e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a4d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4d0210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a4dfc30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a4dfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a4de020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a4de1b0"/>
        <function-ref name="request" scoped="" ref="0x2af08a4de340"/>
        <function-ref name="granted" scoped="" ref="0x2af08a4de4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a4de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af08a4d7160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af08a4d7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4d74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af08a4d7e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af08a4d7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4d61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af08a4c12f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af08a4c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c1670"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af08a4c2ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af08a4c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c2e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af08a4da6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a4da6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4daa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af08a4c22f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a4c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c2670"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af08a52a2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af08a52a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a52a670"/>
        <function-ref name="write" scoped="" ref="0x2af08a52a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af08a4cbe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a4cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4ca210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af08a4c7670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af08a4c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c79f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af08a4dccc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af08a4dccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4db0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af08a4db9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af08a4db9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4dbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af08a4cee50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af08a4cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4cd210"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af08a4d77b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af08a4d77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4d7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af08a4cd670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af08a4cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4cd9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af08a4c4e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af08a4c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4c3610"/>
        <function-ref name="write" scoped="" ref="0x2af08a4c37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af08a5287a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af08a5287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a528b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a528cb0"/>
        <function-ref name="write" scoped="" ref="0x2af08a528e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a527020"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a5271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2af08a51cdf0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a51cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a5191c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af08a519350"/>
        <function-ref name="sfd" scoped="" ref="0x2af08a5194e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a5197c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a5197c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a519b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2af08a518020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2af08a518020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af08a5183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08a51c5c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08a51c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08a51c940"/>
        <function-ref name="stop" scoped="" ref="0x2af08a51cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2af08a510380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2af08a510380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a510700"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a510890"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a510a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a510bb0"/>
        <function-ref name="get" scoped="" ref="0x2af08a510d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a50f020"/>
        <function-ref name="set" scoped="" ref="0x2af08a50f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a50f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2af08a509b90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af08a509b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af08a508020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af08a5081b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af08a508340"/>
        <function-ref name="syncDone" scoped="" ref="0x2af08a5084d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af08a508660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af08a5087f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af08a508980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af08a508b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af08a508ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af08a508e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af08a507020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af08a5071b0"/>
        <function-ref name="sync" scoped="" ref="0x2af08a507340"/>
        <function-ref name="getChannel" scoped="" ref="0x2af08a5075d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af08a507760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2af08a5609d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2af08a5609d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a560d50"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a55f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2af08a507d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af08a507d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a505330"/>
        <function-ref name="clear" scoped="" ref="0x2af08a505a60"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a506ba0"/>
        <function-ref name="set" scoped="" ref="0x2af08a503210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2af08a50f6b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2af08a50f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a50fa30"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a50fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a50fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a50e020"/>
        <function-ref name="get" scoped="" ref="0x2af08a50e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a50e340"/>
        <function-ref name="set" scoped="" ref="0x2af08a50e4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af08a50e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2af08a502cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a502cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a5010a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a501230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2af08a501590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a501590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a501910"/>
        <function-ref name="write" scoped="" ref="0x2af08a501aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2af08a5006d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af08a5006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a500a50"/>
        <function-ref name="write" scoped="" ref="0x2af08a500be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af08a50a330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a50a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af08a50a6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af08a50a840"/>
        <function-ref name="getRssi" scoped="" ref="0x2af08a50a9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af08a50ab60"/>
        <function-ref name="getPower" scoped="" ref="0x2af08a50acf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af08a50ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2af08a514550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af08a514550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a5148d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af08a514a60"/>
        <function-ref name="sfd" scoped="" ref="0x2af08a514bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2af08a50b3a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af08a50b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a50b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af08a511020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af08a511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af08a5113a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af08a511530"/>
        <function-ref name="toggle" scoped="" ref="0x2af08a5116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af08a511850"/>
        <function-ref name="get" scoped="" ref="0x2af08a5119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af08a511b70"/>
        <function-ref name="set" scoped="" ref="0x2af08a511d00"/>
        <function-ref name="clr" scoped="" ref="0x2af08a510020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2af08a4ff020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a4ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a4ff3a0"/>
        <function-ref name="write" scoped="" ref="0x2af08a4ff530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a515620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a515620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a5159a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a5091e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a5091e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a509560"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a5096f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a509880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a513020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a513020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a5133a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af08a50d6e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af08a50d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a50da60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a50dbf0"/>
        <function-ref name="request" scoped="" ref="0x2af08a50dd80"/>
        <function-ref name="granted" scoped="" ref="0x2af08a50c020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a50c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2af08a501e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a501e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a5001c0"/>
        <function-ref name="write" scoped="" ref="0x2af08a500350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2af08a50c530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af08a50c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a50c8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a50ca40"/>
        <function-ref name="write" scoped="" ref="0x2af08a50cbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a50cd60"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a50b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2af08a4ff8b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a4ff8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a4ffe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2af08a5137c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2af08a5137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af08a513b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08a4fe150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08a4fe150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08a4fe4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08a4fe660"/>
        <function-ref name="led1On" scoped="" ref="0x2af08a4fe7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08a4fe980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08a4feb10"/>
        <function-ref name="get" scoped="" ref="0x2af08a4feca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08a4fee30"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08a4fd4d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a4fd020"/>
        <function-ref name="led0On" scoped="" ref="0x2af08a4fd1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af08a4fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2af08a5023e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a5023e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a502760"/>
        <function-ref name="write" scoped="" ref="0x2af08a5028f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2af08a503b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af08a503b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a502020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2af08a50ea50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af08a50ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af08a50edd0"/>
        <function-ref name="disable" scoped="" ref="0x2af08a50d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af08a50d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af08a50d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2af08a50bad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a50bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a50a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af08a515ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af08a515ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af08a5140a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a514230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af08a56ea70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af08a56ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af08a56edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af08a572670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a572670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af08a5729f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af08a572b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2af08a572d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af08a56f020"/>
        <function-ref name="getPower" scoped="" ref="0x2af08a56f1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af08a56f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af08a56d550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a56d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a56cb00"/>
        <function-ref name="clear" scoped="" ref="0x2af08a56b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a56c3d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a56b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2af08a56e0c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a56e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a56e440"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a56e5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a56e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2af08a565480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a565480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a565800"/>
        <function-ref name="isSet" scoped="" ref="0x2af08a565990"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a565b20"/>
        <function-ref name="set" scoped="" ref="0x2af08a565cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af08a569660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a569660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a568ce0"/>
        <function-ref name="clear" scoped="" ref="0x2af08a567460"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a5685b0"/>
        <function-ref name="set" scoped="" ref="0x2af08a567b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08a56f6e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08a56f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08a56fa60"/>
        <function-ref name="noAck" scoped="" ref="0x2af08a56fbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08a56fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af08a5cf020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af08a5cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af08a5cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af08a564d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a564d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af08a5d10e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af08a5d1270"/>
        <function-ref name="getRssi" scoped="" ref="0x2af08a5d1400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af08a5d1590"/>
        <function-ref name="getPower" scoped="" ref="0x2af08a5d1720"/>
        <function-ref name="getLqi" scoped="" ref="0x2af08a5d18b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2af08a5c64a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08a5c64a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a5c6820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a5c69b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a5c6b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a5c6cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a5c6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af08a5cfa80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a5cfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a5cd020"/>
        <function-ref name="clear" scoped="" ref="0x2af08a5cd750"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a5ce8d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a5cde80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2af08a5d0640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a5d0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a5d09c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a5d0b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a5d0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2af08a5c78b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a5c78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a5c7c30"/>
        <function-ref name="isSet" scoped="" ref="0x2af08a5c7dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a5c6020"/>
        <function-ref name="set" scoped="" ref="0x2af08a5c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2af08a5c2820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2af08a5c2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a5c44c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2af08a5c4b80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af08a5c4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a5c17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af08a5cbaf0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a5cbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a5c90d0"/>
        <function-ref name="clear" scoped="" ref="0x2af08a5c9800"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a5ca970"/>
        <function-ref name="set" scoped="" ref="0x2af08a5c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08a5d1c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08a5d1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08a5d0020"/>
        <function-ref name="noAck" scoped="" ref="0x2af08a5d01b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08a5d0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af08a5e14e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af08a5e14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a5d8150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08a5d87c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08a5d87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a5d7620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a5d5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a5d7ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a5d54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af08a641020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2af08a641020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a63d630"/>
        <function-ref name="fired" scoped="" ref="0x2af08a640a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a63f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a63f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a63c020"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a63dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a63f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a641c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a63d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a640110"/>
        <function-ref name="stop" scoped="" ref="0x2af08a6405e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af08a63c610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af08a63c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a63a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a642130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a642130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a6424b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08a60d870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08a60d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a67c090"/>
        <function-ref name="fired" scoped="" ref="0x2af08a60b090"/>
        <function-ref name="startAt" scoped="" ref="0x2af08a60ba10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a60b550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08a67c550"/>
        <function-ref name="start" scoped="" ref="0x2af08a60c6a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a60cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a60d020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a60d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a60d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b449260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b449260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b447b30"/>
        <function-ref name="fired" scoped="" ref="0x2af08b448a60"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b4474e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b447020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b446020"/>
        <function-ref name="start" scoped="" ref="0x2af08b448090"/>
        <function-ref name="stop" scoped="" ref="0x2af08b4485a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b44a9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b44a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b44ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af08b431a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b431a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08b431e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08b430020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08b4301b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08b430340"/>
        <function-ref name="fired" scoped="" ref="0x2af08b4304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af08b433020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b433020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b4333a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b433530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b4336c0"/>
        <function-ref name="get" scoped="" ref="0x2af08b433850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b4339e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b433b70"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b433d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b432020"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b4321b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08b432340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08b4324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af08b432760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b432760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08b432ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2af08b432c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b432e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08b431020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08b4311b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b431340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08b4314d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08b431660"/>
        <function-ref name="setControl" scoped="" ref="0x2af08b4317f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af08b427760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b427760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08b427ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08b427c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08b427e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08b426020"/>
        <function-ref name="fired" scoped="" ref="0x2af08b4261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af08b42add0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b42add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b429180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b429310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b4294a0"/>
        <function-ref name="get" scoped="" ref="0x2af08b429630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b4297c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b429950"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b429ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b429c70"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b429e00"/>
        <function-ref name="setMode" scoped="" ref="0x2af08b428020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08b4281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b42ebf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b42ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b42a4e0"/>
        <function-ref name="fired" scoped="" ref="0x2af08b42c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b42ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b42c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b42a9a0"/>
        <function-ref name="start" scoped="" ref="0x2af08b42da80"/>
        <function-ref name="stop" scoped="" ref="0x2af08b42c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b42e360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b42e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b42e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af08b428440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b428440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08b4287c0"/>
        <function-ref name="getControl" scoped="" ref="0x2af08b428950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b428ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08b428c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08b428e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b427020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08b4271b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08b427340"/>
        <function-ref name="setControl" scoped="" ref="0x2af08b4274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af08a62cb70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08a62cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a6299b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a628360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a629e70"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a628820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2af08a622b90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2af08a622b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a6209d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a61f4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a61f020"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a61f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af08a624610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08a624610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a6235b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a622020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a623a70"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a6224e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b4445f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b4445f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b441e50"/>
        <function-ref name="fired" scoped="" ref="0x2af08b443e00"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b441800"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b441340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b440340"/>
        <function-ref name="start" scoped="" ref="0x2af08b443430"/>
        <function-ref name="stop" scoped="" ref="0x2af08b443940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af08b43ed20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af08b43ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b43a670"/>
        <function-ref name="fired" scoped="" ref="0x2af08b43b550"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b43a020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b43ba10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b43ab30"/>
        <function-ref name="start" scoped="" ref="0x2af08b43cb60"/>
        <function-ref name="stop" scoped="" ref="0x2af08b43b090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08b4409b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08b4409b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08b43f7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b43e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b43fca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b43e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af08a64a9c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2af08a64a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a64ad40"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a649020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af08a64e850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08a64e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a64a090"/>
        <function-ref name="fired" scoped="" ref="0x2af08a64b090"/>
        <function-ref name="startAt" scoped="" ref="0x2af08a64ba10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a64b550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08a64a550"/>
        <function-ref name="start" scoped="" ref="0x2af08a64d6a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a64dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af08a6532f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08a6532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a64f870"/>
        <function-ref name="fired" scoped="" ref="0x2af08a652e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a650c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a650780"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a64e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a64fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a650300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a652020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a64f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a6524f0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a6529c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af08a6e0a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2af08a6e0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a6e0d80"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a6de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af08a6e5640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2af08a6e5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a6e1c40"/>
        <function-ref name="fired" scoped="" ref="0x2af08a6e21e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a6e1020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a6e2ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a6e0590"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a6e0110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a6e2660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a6e4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a6e1630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a6e4860"/>
        <function-ref name="stop" scoped="" ref="0x2af08a6e4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af08a6eb150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08a6eb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a6e6700"/>
        <function-ref name="fired" scoped="" ref="0x2af08a6e9c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a6e8a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a6e85b0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a6e5090"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a6e6ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a6e8110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a6ebd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a6e60d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a6e92a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a6e9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af08a6dc2b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af08a6dc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a6db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08a6db690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08a6db690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a6da5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08a6d9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08a6daa70"/>
        <function-ref name="overflow" scoped="" ref="0x2af08a6d94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af08a6d28c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08a6d28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a6becf0"/>
        <function-ref name="fired" scoped="" ref="0x2af08a6c0320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a6be0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a6c0c20"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a6bd660"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a6bd1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a6c07a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a6c14e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a6be6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a6c19b0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a6c1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af08a6c92c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2af08a6c92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a6c5870"/>
        <function-ref name="fired" scoped="" ref="0x2af08a6c8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a6c7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a6c7780"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a6c41e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a6c5cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a6c7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a6c8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a6c5260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a6c84f0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a6c89c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af08a722c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af08a722c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a721210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af08a6b7020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af08a6b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a6b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af08a725c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af08a725c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a724020"/>
        <function-ref name="write" scoped="" ref="0x2af08a7241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af08a720670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af08a720670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7209f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a720b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af08a719e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af08a719e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a717210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af08a720e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af08a720e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71e210"/>
        <function-ref name="write" scoped="" ref="0x2af08a71e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af08a70c2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af08a70c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70c670"/>
        <function-ref name="write" scoped="" ref="0x2af08a70c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af08a70e2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af08a70e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70e670"/>
        <function-ref name="write" scoped="" ref="0x2af08a70e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af08a72a370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af08a72a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a72a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af08a714670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af08a714670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7149f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a714b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af08a70f2f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af08a70f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70f670"/>
        <function-ref name="write" scoped="" ref="0x2af08a70f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af08a724c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af08a724c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a723020"/>
        <function-ref name="write" scoped="" ref="0x2af08a7231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af08a723c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af08a723c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a722020"/>
        <function-ref name="write" scoped="" ref="0x2af08a7221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af08a71a670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af08a71a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a71ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af08a71ce50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af08a71ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71b210"/>
        <function-ref name="write" scoped="" ref="0x2af08a71b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af08a71e670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af08a71e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a71eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af08a6b9970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af08a6b9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af08a6b9cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af08a6b9e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af08a6b8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af08a729d00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af08a729d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a7280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af08a728370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af08a728370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a7287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af08a713a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af08a713a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a713df0"/>
        <function-ref name="write" scoped="" ref="0x2af08a712020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af08a728ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af08a728ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a728e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af08a70fad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af08a70fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70fe50"/>
        <function-ref name="write" scoped="" ref="0x2af08a70e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af08a729060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af08a729060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a7293e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af08a715e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af08a715e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a714210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af08a723480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af08a723480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a723800"/>
        <function-ref name="write" scoped="" ref="0x2af08a723990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af08a724480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af08a724480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a724800"/>
        <function-ref name="write" scoped="" ref="0x2af08a724990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af08a6b8950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af08a6b8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a6b8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af08a716e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af08a716e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a715210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af08a717670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af08a717670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7179f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a717b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af08a715670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af08a715670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7159f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a715b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af08a70dad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af08a70dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70de50"/>
        <function-ref name="write" scoped="" ref="0x2af08a70c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af08a70ead0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af08a70ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70ee50"/>
        <function-ref name="write" scoped="" ref="0x2af08a70d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af08a71b670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af08a71b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71b9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a71bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af08a717e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af08a717e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a716210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af08a710ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af08a710ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a710e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a70f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af08a71d670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af08a71d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a71db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af08a70cad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af08a70cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a70ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a70b020"/>
        <function-ref name="write" scoped="" ref="0x2af08a70b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a70b340"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a70b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af08a6b8300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af08a6b8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a6b8680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af08a725490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af08a725490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a725810"/>
        <function-ref name="write" scoped="" ref="0x2af08a7259a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af08a722480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af08a722480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a722800"/>
        <function-ref name="write" scoped="" ref="0x2af08a722990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af08a71ae50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af08a71ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a719210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af08a71ee50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af08a71ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71d210"/>
        <function-ref name="write" scoped="" ref="0x2af08a71d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af08a719670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af08a719670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7199f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a719b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af08a721670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af08a721670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7219f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a721b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af08a6b7670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af08a6b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a6b79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af08a721e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af08a721e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a720210"/>
        <function-ref name="write" scoped="" ref="0x2af08a7203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a6bad00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a6bad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a6b90a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a6b9230"/>
        <function-ref name="request" scoped="" ref="0x2af08a6b93c0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a6b9550"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a6b96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af08a727160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af08a727160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a7274e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af08a727e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af08a727e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a7251c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af08a7102f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af08a7102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a710670"/>
        <function-ref name="write" scoped="" ref="0x2af08a710800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af08a712ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af08a712ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a712e50"/>
        <function-ref name="write" scoped="" ref="0x2af08a710020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af08a7296b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af08a7296b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a729a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af08a7122f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af08a7122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a712670"/>
        <function-ref name="write" scoped="" ref="0x2af08a712800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af08a70d2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af08a70d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a70d670"/>
        <function-ref name="write" scoped="" ref="0x2af08a70d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af08a71be50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af08a71be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71a210"/>
        <function-ref name="write" scoped="" ref="0x2af08a71a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af08a716670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af08a716670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a7169f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a716b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af08a6b7cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af08a6b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a72a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af08a72a9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af08a72a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a72ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af08a71de50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af08a71de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71c210"/>
        <function-ref name="write" scoped="" ref="0x2af08a71c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af08a7277b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af08a7277b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af08a727b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af08a71c670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af08a71c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a71c9f0"/>
        <function-ref name="write" scoped="" ref="0x2af08a71cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af08a714e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af08a714e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af08a713610"/>
        <function-ref name="write" scoped="" ref="0x2af08a7137a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af08a70b7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af08a70b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af08a70bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af08a70bcb0"/>
        <function-ref name="write" scoped="" ref="0x2af08a70be40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af08a709020"/>
        <function-ref name="readDone" scoped="" ref="0x2af08a7091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2af08a759a20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af08a759a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af08a759da0"/>
        <function-ref name="rand32" scoped="" ref="0x2af08a756020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2af08a757920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2af08a757920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a759560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a75d9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a75d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a75dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2af08a752a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af08a752a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af08a752da0"/>
        <function-ref name="rand32" scoped="" ref="0x2af08a751020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2af08a753940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2af08a753940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a752560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a753080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a753080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a753400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a75baa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a75baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a75be20"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a754020"/>
        <function-ref name="isState" scoped="" ref="0x2af08a7541b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a754340"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a7544d0"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a754660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a73a020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a73a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a73a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a73a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a73a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a73a850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a73a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a73b220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a73b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a73b5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a73b730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a73b8c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a73ba50"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a73bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a736e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a736e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a734210"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7343a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a734530"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7346c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a734850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a739a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a739a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a739da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a736020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7361b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a736340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2af08a7338f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af08a7338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af08a733c70"/>
        <function-ref name="rand32" scoped="" ref="0x2af08a733e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a736750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a736750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a736ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a732170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a732170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7324f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a732680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a732810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2af08a734ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a734ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a734e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a733020"/>
        <function-ref name="isState" scoped="" ref="0x2af08a7331b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a733340"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a7334d0"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a733660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a737690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a737690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a737a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a737ba0"/>
        <function-ref name="isState" scoped="" ref="0x2af08a737d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a79a020"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a79a1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a79a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a794950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a794950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a794cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a797aa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a797aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a797e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2af08a794200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2af08a794200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a794580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a78f3f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a78f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a78f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a790b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a790b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a78f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a793e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a793e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7901e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a78fa70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a78fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a78fdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a78e020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a78e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2af08a790570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2af08a790570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7908f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a7d8020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a7d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a7d86b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a7d86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7d8a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7d8bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7d8d50"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7d7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a7dd960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a7dd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7ddce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7dde70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7dc030"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7dc1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7dc350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af08a7dcca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af08a7dcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7da0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7da230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7da3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7da550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7da6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a7dc5f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a7dc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7dc970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a7decb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a7decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a7dd0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a7dd230"/>
        <function-ref name="request" scoped="" ref="0x2af08a7dd3c0"/>
        <function-ref name="granted" scoped="" ref="0x2af08a7dd550"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a7dd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af08a7daa50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af08a7daa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7dadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af08a7d9170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af08a7d9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a7d94f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a7d9680"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7d9810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7d99a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a7d9b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a7cfd70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a7cfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7cd180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7cd310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7cd4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7cd630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a7cdb10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a7cdb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2af08a818db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2af08a818db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a817180"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a817310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af08a7cc2f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a7cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af08a7cc670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af08a7cc800"/>
        <function-ref name="getRssi" scoped="" ref="0x2af08a7cc990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af08a7ccb20"/>
        <function-ref name="getPower" scoped="" ref="0x2af08a7cccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af08a7cce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af08a7d1a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af08a7d1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7d1da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7d0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7d01b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7d0340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af08a7cbb70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af08a7cbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af08a7ca020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af08a7ca1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af08a7ca340"/>
        <function-ref name="dequeue" scoped="" ref="0x2af08a7ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a7cb170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a7cb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7cb4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a7cb680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a7cb810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2af08a7d1370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2af08a7d1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7d16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af08a7d37b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af08a7d37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a7d3b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a7d3cc0"/>
        <function-ref name="request" scoped="" ref="0x2af08a7d3e50"/>
        <function-ref name="granted" scoped="" ref="0x2af08a7d2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a7d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2af08a7d24d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2af08a7d24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7d2850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7d29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7d2b70"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7d2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af08a7d0840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af08a7d0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7d0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af08a7cf020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af08a7cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a7cf3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a7cf530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7cf6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7cf850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a7cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08a7f8dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08a7f8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08a7f7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af08a7f7410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af08a7f7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af08a7f7790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af08a7f7920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af08a7f7ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af08a7f7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af08a7ecb80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af08a7ecb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af08a7eb020"/>
        <function-ref name="stopDone" scoped="" ref="0x2af08a7eb1b0"/>
        <function-ref name="start" scoped="" ref="0x2af08a7eb340"/>
        <function-ref name="stop" scoped="" ref="0x2af08a7eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a7ea860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a7ea860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7eabe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7ead70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7e8020"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7e81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a7e8690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a7e8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7e8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a7f0cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a7f0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a7ed0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a7ed230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a7ed3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a7ed550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a7ed6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af08a7ec080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a7ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af08a7ec400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af08a7ec590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af08a7ec720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af08a7ec8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2af08a7eb800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2af08a7eb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a7ebb80"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a7ebd10"/>
        <function-ref name="isState" scoped="" ref="0x2af08a7ea020"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a7ea1b0"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a7ea340"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a7ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2af08a7e8d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2af08a7e8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af08a7e7180"/>
        <function-ref name="stopDone" scoped="" ref="0x2af08a7e7310"/>
        <function-ref name="start" scoped="" ref="0x2af08a7e74a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08a7e7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a7ed980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a7ed980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a7edd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af08a7e42d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a7e42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af08a7e4650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af08a7e47e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af08a7e4970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af08a7e4b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a7e6580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a7e6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a7e6900"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a7e6a90"/>
        <function-ref name="isState" scoped="" ref="0x2af08a7e6c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a7e6db0"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a7e5020"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a7e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a851d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a851d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a850180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a850310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a8504a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a850630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a8507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a8522a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a8522a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a852620"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a8527b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a852940"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a852ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a852c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af08a851020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af08a851020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af08a8513a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2af08a851530"/>
        <function-ref name="getRetries" scoped="" ref="0x2af08a8516c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af08a851850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af08a8519e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a84cdd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a84cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a84b180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a84b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a84b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a84b630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a84b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2af08a8402a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2af08a8402a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08a840620"/>
        <function-ref name="runTask" scoped="" ref="0x2af08a8407b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2af08a849650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2af08a849650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a845c40"/>
        <function-ref name="fired" scoped="" ref="0x2af08a8461e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a845020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a846ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a844590"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a844110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a846660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a848390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a845630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a848860"/>
        <function-ref name="stop" scoped="" ref="0x2af08a848d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08a84f3b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08a84f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a84f730"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a84f8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a84fa50"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a84fbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a84fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2af08a84baf0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2af08a84baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a84be70"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a84a030"/>
        <function-ref name="isState" scoped="" ref="0x2af08a84a1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a84a350"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a84a4e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a84a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a844a30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a844a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a844db0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a843020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a8431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2af08a84a9a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af08a84a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08a84ad20"/>
        <function-ref name="noAck" scoped="" ref="0x2af08a849020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08a8491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af08a84c080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af08a84c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af08a84c400"/>
        <function-ref name="setRetries" scoped="" ref="0x2af08a84c590"/>
        <function-ref name="getRetries" scoped="" ref="0x2af08a84c720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af08a84c8b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af08a84ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af08a891350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af08a891350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af08a8916d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af08a891860"/>
        <function-ref name="isState" scoped="" ref="0x2af08a8919f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af08a891b80"/>
        <function-ref name="requestState" scoped="" ref="0x2af08a891d10"/>
        <function-ref name="forceState" scoped="" ref="0x2af08a890020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af08a88f750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08a88f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08a88bc40"/>
        <function-ref name="fired" scoped="" ref="0x2af08a88c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08a88b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08a88cae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08a88a590"/>
        <function-ref name="gett0" scoped="" ref="0x2af08a88a110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08a88c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08a88e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08a88b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08a88e860"/>
        <function-ref name="stop" scoped="" ref="0x2af08a88ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a86f690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a86f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a86fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a870860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a870860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a870be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a870d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a86f020"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a86f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a86f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2af08a86d610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af08a86d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af08a86d990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af08a86db20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af08a86dcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2af08a86de40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af08a86c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af08a86c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af08a86c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af08a86c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af08a86c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af08a86c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af08a86c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af08a86cb10"/>
        <function-ref name="sync" scoped="" ref="0x2af08a86cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2af08a86b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af08a86b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af08a871830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af08a871830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af08a871bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af08a871d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af08a870020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af08a8701b0"/>
        <function-ref name="setCca" scoped="" ref="0x2af08a870340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af08a8704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2af08a873b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2af08a873b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2af08a871020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2af08a86a1f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2af08a86a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af08a86a570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af08a86a700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af08a86a890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af08a86aa20"/>
        <function-ref name="setCca" scoped="" ref="0x2af08a86abb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af08a86ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08a8748f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08a8748f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a874c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a874e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a873020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a8731b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a873340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08a878da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08a878da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a877180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a877310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a8774a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a877630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a8777c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af08a876c00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af08a876c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a875020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af08a86fce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af08a86fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af08a86e0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af08a86e230"/>
        <function-ref name="getRssi" scoped="" ref="0x2af08a86e3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af08a86e550"/>
        <function-ref name="getPower" scoped="" ref="0x2af08a86e6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af08a86e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2af08a86b4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af08a86b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af08a86b950"/>
        <function-ref name="changed" scoped="" ref="0x2af08a86bae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af08a86bc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2af08a86be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af08a86eb70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af08a86eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af08a86d020"/>
        <function-ref name="getHeader" scoped="" ref="0x2af08a86d1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af08a86d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a876020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a876020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a8763a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08a869d30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08a869d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08a8680e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08a868270"/>
        <function-ref name="led1On" scoped="" ref="0x2af08a868400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08a868590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08a868720"/>
        <function-ref name="get" scoped="" ref="0x2af08a8688b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08a868a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08a8671b0"/>
        <function-ref name="set" scoped="" ref="0x2af08a868bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2af08a868d60"/>
        <function-ref name="led2On" scoped="" ref="0x2af08a867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08a8752d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08a8752d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08a875650"/>
        <function-ref name="source" scoped="" ref="0x2af08a8757e0"/>
        <function-ref name="address" scoped="" ref="0x2af08a875970"/>
        <function-ref name="destination" scoped="" ref="0x2af08a875b00"/>
        <function-ref name="setSource" scoped="" ref="0x2af08a875c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08a875e20"/>
        <function-ref name="type" scoped="" ref="0x2af08a874020"/>
        <function-ref name="setType" scoped="" ref="0x2af08a8741b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08a874340"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08a8744d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08a874660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2af08a8690f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2af08a8690f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af08a869470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af08a869600"/>
        <function-ref name="request" scoped="" ref="0x2af08a869790"/>
        <function-ref name="granted" scoped="" ref="0x2af08a869920"/>
        <function-ref name="isOwner" scoped="" ref="0x2af08a869ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af08a955580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af08a955580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af08a955900"/>
        <function-ref name="stopDone" scoped="" ref="0x2af08a955a90"/>
        <function-ref name="start" scoped="" ref="0x2af08a955c20"/>
        <function-ref name="stop" scoped="" ref="0x2af08a955db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2af08a940060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af08a940060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af08a940e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2af08a93f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08a9517e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08a9517e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a951b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a951cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a951e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a950030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a9501c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af08a9511d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af08a9511d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a951550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af08a94e640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af08a94e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af08a94e9c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af08a94eb50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af08a94ece0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af08a94ee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2af08a946e50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af08a946e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a944c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a942590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a942110"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a943580"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a943a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a9525c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a9525c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a952940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af08a94fb20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af08a94fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08a94e020"/>
        <function-ref name="noAck" scoped="" ref="0x2af08a94e1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08a94e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2af08a94daa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af08a94daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a94b890"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a9491e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a94ad10"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a94a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a94a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08a950470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08a950470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08a9507f0"/>
        <function-ref name="source" scoped="" ref="0x2af08a950980"/>
        <function-ref name="address" scoped="" ref="0x2af08a950b10"/>
        <function-ref name="destination" scoped="" ref="0x2af08a950ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08a950e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08a94f020"/>
        <function-ref name="type" scoped="" ref="0x2af08a94f1b0"/>
        <function-ref name="setType" scoped="" ref="0x2af08a94f340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08a94f4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08a94f660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08a94f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2af08a949c50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af08a949c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af08a947a40"/>
        <function-ref name="eventTime" scoped="" ref="0x2af08a946020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af08a926e60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af08a926e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a925210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af08a929a00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af08a929a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a929d80"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a928020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a9281b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a928340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a9284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2af08a92d910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af08a92d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af08a92c740"/>
        <function-ref name="eventTime" scoped="" ref="0x2af08a92cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2af08a9364d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af08a9364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a935390"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a933c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a933800"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a935c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a9331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08a932340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08a932340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a9326c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a932850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a9329e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a932b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a932d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af08a9292c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af08a9292c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a929640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2af08a928800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2af08a928800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08a928b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08a928d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a927020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a9271b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08a927340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2af08a924130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af08a924130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a923750"/>
        <function-ref name="clear" scoped="" ref="0x2af08a923e80"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a923020"/>
        <function-ref name="set" scoped="" ref="0x2af08a9215d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2af08a9276a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2af08a9276a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08a927a20"/>
        <function-ref name="source" scoped="" ref="0x2af08a927bb0"/>
        <function-ref name="address" scoped="" ref="0x2af08a927d40"/>
        <function-ref name="destination" scoped="" ref="0x2af08a926020"/>
        <function-ref name="setSource" scoped="" ref="0x2af08a9261b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08a926340"/>
        <function-ref name="type" scoped="" ref="0x2af08a9264d0"/>
        <function-ref name="setType" scoped="" ref="0x2af08a926660"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08a9267f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08a926980"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08a926b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08a92a6b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08a92a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a92aa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2af08a91c020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af08a91c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a91c3a0"/>
        <function-ref name="isSet" scoped="" ref="0x2af08a91c530"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a91c6c0"/>
        <function-ref name="set" scoped="" ref="0x2af08a91c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2af08a91cd30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2af08a91cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a91b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af08a9960f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af08a9960f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af08a996470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af08a996600"/>
        <function-ref name="led1On" scoped="" ref="0x2af08a996790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af08a996920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af08a996ab0"/>
        <function-ref name="get" scoped="" ref="0x2af08a996c40"/>
        <function-ref name="led1Off" scoped="" ref="0x2af08a996dd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af08a9954d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a995020"/>
        <function-ref name="led0On" scoped="" ref="0x2af08a9951b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af08a995340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2af08a91a060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af08a91a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08a91ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2af08a93bc10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af08a93bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08a93aa40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08a9384a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08a938020"/>
        <function-ref name="cancel" scoped="" ref="0x2af08a939350"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08a939860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08a931020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08a931020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08a9313a0"/>
        <function-ref name="source" scoped="" ref="0x2af08a931530"/>
        <function-ref name="address" scoped="" ref="0x2af08a9316c0"/>
        <function-ref name="destination" scoped="" ref="0x2af08a931850"/>
        <function-ref name="setSource" scoped="" ref="0x2af08a9319e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08a931b70"/>
        <function-ref name="type" scoped="" ref="0x2af08a931d00"/>
        <function-ref name="setType" scoped="" ref="0x2af08a930020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08a9301b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08a930340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08a9304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2af08a930b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af08a930b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af08a92f990"/>
        <function-ref name="eventTime" scoped="" ref="0x2af08a92d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2af08a925550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2af08a925550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08a9259d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2af08a920270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af08a920270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af08a91f800"/>
        <function-ref name="clear" scoped="" ref="0x2af08a91d020"/>
        <function-ref name="isValid" scoped="" ref="0x2af08a91f0d0"/>
        <function-ref name="set" scoped="" ref="0x2af08a91d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08aa29020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08aa29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa293a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa29530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa296c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa29850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa299e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aa29c30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa29c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa28020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa281b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa28340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa284d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa28660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aa288b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa288b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa28c30"/>
        <function-ref name="source" scoped="" ref="0x2af08aa28dc0"/>
        <function-ref name="address" scoped="" ref="0x2af08aa27020"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa271b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa27340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa274d0"/>
        <function-ref name="type" scoped="" ref="0x2af08aa27660"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa277f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa27980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa27b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa27ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08aa26020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08aa26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08aa263a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af08aa26530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08aa266c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b4afcb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b4afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b4ae0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b4ae230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b4ae3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b4ae550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b4ae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08b4ae930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08b4ae930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b4aecb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08b4aee40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b4ac020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b4ac1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08b4ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08b4ac590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b4ac590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b4ac910"/>
        <function-ref name="source" scoped="" ref="0x2af08b4acaa0"/>
        <function-ref name="address" scoped="" ref="0x2af08b4acc30"/>
        <function-ref name="destination" scoped="" ref="0x2af08b4acdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b4ab020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b4ab1b0"/>
        <function-ref name="type" scoped="" ref="0x2af08b4ab340"/>
        <function-ref name="setType" scoped="" ref="0x2af08b4ab4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b4ab660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b4ab7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b4ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08b4abc10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08b4abc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08b4aa020"/>
        <function-ref name="noAck" scoped="" ref="0x2af08b4aa1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08b4aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b559660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b559660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b5599e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b559b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b559d00"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b558020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b5581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af08b558460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08b558460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b5587e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b558970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b558b00"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b558c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b558e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af08b5570e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b5570e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b557460"/>
        <function-ref name="source" scoped="" ref="0x2af08b5575f0"/>
        <function-ref name="address" scoped="" ref="0x2af08b557780"/>
        <function-ref name="destination" scoped="" ref="0x2af08b557910"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b557aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b557c30"/>
        <function-ref name="type" scoped="" ref="0x2af08b557dc0"/>
        <function-ref name="setType" scoped="" ref="0x2af08b556020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b5561b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b556340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b5564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08aa0a940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08aa0a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa0acc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa0ae50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa07020"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa071b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa07340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2af08aa3e400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08aa3e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa3e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa3e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa3eac0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa3ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa3ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af08aa3f4b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08aa3f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa3f850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa3f9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa3fb70"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa3fd00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2af08aa3b720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa3b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa3baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa3bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa3bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa3a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2af08aa3a480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2af08aa3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08aa3a800"/>
        <function-ref name="runTask" scoped="" ref="0x2af08aa3a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2af08aa3ac60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2af08aa3ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08aa39020"/>
        <function-ref name="runTask" scoped="" ref="0x2af08aa391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af08aa3d060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa3d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa3d3e0"/>
        <function-ref name="source" scoped="" ref="0x2af08aa3d570"/>
        <function-ref name="address" scoped="" ref="0x2af08aa3d700"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa3d890"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa3da20"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa3dbb0"/>
        <function-ref name="type" scoped="" ref="0x2af08aa3dd40"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa3b020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa3b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa3b340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa3b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af08aa22830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af08aa22830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08aa204c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08aa20b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08aa20b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08aa1f970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08aa1e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08aa1fe30"/>
        <function-ref name="overflow" scoped="" ref="0x2af08aa1e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af08aa1de60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af08aa1de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194460"/>
            <typename><typedef-ref name="TMilli" ref="0x2af0891947d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08aa1aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08aa8dcc0" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08aa8dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa8c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa8c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa8c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa8c550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa8c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aa8c930" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa8c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa8ccb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa8ce40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa8a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa8a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aa8a590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa8a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa8a910"/>
        <function-ref name="source" scoped="" ref="0x2af08aa8aaa0"/>
        <function-ref name="address" scoped="" ref="0x2af08aa8ac30"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa8adc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa89020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa891b0"/>
        <function-ref name="type" scoped="" ref="0x2af08aa89340"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa894d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa89660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa897f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa89980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08aa89c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08aa89c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08aa88020"/>
        <function-ref name="noAck" scoped="" ref="0x2af08aa881b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08aa88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b50dcb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b50dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b50b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b50b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b50b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b50b550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b50b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08b50b930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08b50b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b50bcb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08b50be40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b50a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b50a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08b50a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08b50a590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b50a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b50a910"/>
        <function-ref name="source" scoped="" ref="0x2af08b50aaa0"/>
        <function-ref name="address" scoped="" ref="0x2af08b50ac30"/>
        <function-ref name="destination" scoped="" ref="0x2af08b50adc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b509020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b5091b0"/>
        <function-ref name="type" scoped="" ref="0x2af08b509340"/>
        <function-ref name="setType" scoped="" ref="0x2af08b5094d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b509660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b5097f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b509980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08b509c10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08b509c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08b508020"/>
        <function-ref name="noAck" scoped="" ref="0x2af08b5081b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08b508340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b5aee30" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b5aee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b5ad1e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b5ad370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b5ad500"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b5ad690"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b5ad820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af08b5adad0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08b5adad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b5ade50"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b5ac020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b5ac1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b5ac340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b5ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af08b5ac720" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b5ac720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b5acaa0"/>
        <function-ref name="source" scoped="" ref="0x2af08b5acc30"/>
        <function-ref name="address" scoped="" ref="0x2af08b5acdc0"/>
        <function-ref name="destination" scoped="" ref="0x2af08b5ab020"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b5ab1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b5ab340"/>
        <function-ref name="type" scoped="" ref="0x2af08b5ab4d0"/>
        <function-ref name="setType" scoped="" ref="0x2af08b5ab660"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b5ab7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b5ab980"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b5abb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aa80dd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa80dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa7f180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa7f310"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa7f4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa7f630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa7f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08aa80800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08aa80800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08aa80b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aa7fa10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa7fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa7fd90"/>
        <function-ref name="source" scoped="" ref="0x2af08aa7d020"/>
        <function-ref name="address" scoped="" ref="0x2af08aa7d1b0"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa7d340"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa7d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa7d660"/>
        <function-ref name="type" scoped="" ref="0x2af08aa7d7f0"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa7d980"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa7db10"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa7dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa7de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08aa7a530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08aa7a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa7a8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa7aa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa7abd0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa7ad60"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aa79270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa79270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa795f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa79780"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa79910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa79aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa79c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aa79e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa79e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa78220"/>
        <function-ref name="source" scoped="" ref="0x2af08aa783b0"/>
        <function-ref name="address" scoped="" ref="0x2af08aa78540"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa786d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa78860"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa789f0"/>
        <function-ref name="type" scoped="" ref="0x2af08aa78b80"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa78d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa77020"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa771b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08aa775d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08aa775d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08aa77950"/>
        <function-ref name="noAck" scoped="" ref="0x2af08aa77ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08aa77c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b590140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b590140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b5904c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b590650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b5907e0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b590970"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b590b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08b590d50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08b590d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b58f100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08b58f290"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b58f420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b58f5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08b58f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08b58f990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b58f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b58fd10"/>
        <function-ref name="source" scoped="" ref="0x2af08b58d020"/>
        <function-ref name="address" scoped="" ref="0x2af08b58d1b0"/>
        <function-ref name="destination" scoped="" ref="0x2af08b58d340"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b58d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b58d660"/>
        <function-ref name="type" scoped="" ref="0x2af08b58d7f0"/>
        <function-ref name="setType" scoped="" ref="0x2af08b58d980"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b58db10"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b58dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b58de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08b58c120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08b58c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08b58c4a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af08b58c630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08b58c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b582390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b582390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b582710"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b5828a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b582a30"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b582bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b582d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af08b581060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08b581060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b5813e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b581570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b581700"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b581890"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b581a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af08b581c70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b581c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b580020"/>
        <function-ref name="source" scoped="" ref="0x2af08b5801b0"/>
        <function-ref name="address" scoped="" ref="0x2af08b580340"/>
        <function-ref name="destination" scoped="" ref="0x2af08b5804d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b580660"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b5807f0"/>
        <function-ref name="type" scoped="" ref="0x2af08b580980"/>
        <function-ref name="setType" scoped="" ref="0x2af08b580b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b580ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b580e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b57f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aa74710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa74710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa74a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa74c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa74db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa73020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08aa74140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08aa74140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08aa744c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aa73400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa73400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa73780"/>
        <function-ref name="source" scoped="" ref="0x2af08aa73910"/>
        <function-ref name="address" scoped="" ref="0x2af08aa73aa0"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa73c30"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa73dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa72020"/>
        <function-ref name="type" scoped="" ref="0x2af08aa721b0"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa72340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa724d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa72660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08aa70e60" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08aa70e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08aa6f210"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa6f3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa6f530"/>
        <function-ref name="cancel" scoped="" ref="0x2af08aa6f6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08aa6f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aa6faa0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aa6faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aa6fe20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aa6e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aa6e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aa6e340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aa6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aa6e720" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aa6e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aa6eaa0"/>
        <function-ref name="source" scoped="" ref="0x2af08aa6ec30"/>
        <function-ref name="address" scoped="" ref="0x2af08aa6edc0"/>
        <function-ref name="destination" scoped="" ref="0x2af08aa6c020"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aa6c1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aa6c340"/>
        <function-ref name="type" scoped="" ref="0x2af08aa6c4d0"/>
        <function-ref name="setType" scoped="" ref="0x2af08aa6c660"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aa6c7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aa6c980"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aa6cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08aa6cda0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08aa6cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08aa6b180"/>
        <function-ref name="noAck" scoped="" ref="0x2af08aa6b310"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08aa6b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b5654c0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b5654c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b565840"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b5659d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b565b60"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b565cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b565e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08b5640f0" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08b5640f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b564470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08b564600"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b564790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b564920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08b564ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08b564d00" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b564d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b5630a0"/>
        <function-ref name="source" scoped="" ref="0x2af08b563230"/>
        <function-ref name="address" scoped="" ref="0x2af08b5633c0"/>
        <function-ref name="destination" scoped="" ref="0x2af08b563550"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b5636e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b563870"/>
        <function-ref name="type" scoped="" ref="0x2af08b563a00"/>
        <function-ref name="setType" scoped="" ref="0x2af08b563b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b563d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b562020"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b5621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af08b562440" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af08b562440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af08b5627c0"/>
        <function-ref name="noAck" scoped="" ref="0x2af08b562950"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af08b562ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af08b608640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af08b608640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b6089c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b608b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b608ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b608e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b607030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af08b6072e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af08b6072e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af08b607660"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08b6077f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08b607980"/>
        <function-ref name="cancel" scoped="" ref="0x2af08b607b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af08b607ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af08b605020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08b605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08b6053a0"/>
        <function-ref name="source" scoped="" ref="0x2af08b605530"/>
        <function-ref name="address" scoped="" ref="0x2af08b6056c0"/>
        <function-ref name="destination" scoped="" ref="0x2af08b605850"/>
        <function-ref name="setSource" scoped="" ref="0x2af08b6059e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08b605b70"/>
        <function-ref name="type" scoped="" ref="0x2af08b605d00"/>
        <function-ref name="setType" scoped="" ref="0x2af08b604020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08b6041b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08b604340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08b6044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2af08aae0120" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af08aae0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2af08aadf020"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af08aae0630"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af08aae07c0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08aae0950"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af08aae0ae0"/>
        <function-ref name="start" scoped="" ref="0x2af08aae0c70"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af08aae0e00"/>
        <function-ref name="stop" scoped="" ref="0x2af08aae04a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2af08b5e8e70" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2af08b5e8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b5e2390"/>
        <function-ref name="fired" scoped="" ref="0x2af08b5e5970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08b5e4720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08b5e42a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08b5e2c90"/>
        <function-ref name="gett0" scoped="" ref="0x2af08b5e2810"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5e5df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08b5e6a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08b5e4d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08b5e5020"/>
        <function-ref name="stop" scoped="" ref="0x2af08b5e54f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2af08b5ec9f0" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2af08b5ec9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b5e8020"/>
        <function-ref name="fired" scoped="" ref="0x2af08b5ea510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08b5e9300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08b5eae10"/>
        <function-ref name="getdt" scoped="" ref="0x2af08b5e8920"/>
        <function-ref name="gett0" scoped="" ref="0x2af08b5e84a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5ea990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08b5eb670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08b5e9910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08b5ebb40"/>
        <function-ref name="stop" scoped="" ref="0x2af08b5ea090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2af08b5f15c0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2af08b5f15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b5eea80"/>
        <function-ref name="fired" scoped="" ref="0x2af08b5ef090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08b5efe10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08b5ef990"/>
        <function-ref name="getdt" scoped="" ref="0x2af08b5ec4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08b5ec020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5ef510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08b5f0200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08b5ee470"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08b5f06d0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b5f0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2af08b5f2200" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af08b5f2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af08b5f11b0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af08b5f2710"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af08b5f28a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5f2a30"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af08b5f2bc0"/>
        <function-ref name="start" scoped="" ref="0x2af08b5f2d50"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af08b5f1020"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2af08b5f2580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af08b5df4d0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5df4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b5dca20"/>
        <function-ref name="fired" scoped="" ref="0x2af08b5dd020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08b5ddda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08b5dd920"/>
        <function-ref name="getdt" scoped="" ref="0x2af08b5da4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08b5da020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5dd4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08b5de110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08b5dc410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08b5de5e0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b5deab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af08aa9fe30" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af08aa9fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08ab1d390"/>
        <function-ref name="fired" scoped="" ref="0x2af08aa9b970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08aa99720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08aa992a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08ab1dc90"/>
        <function-ref name="gett0" scoped="" ref="0x2af08ab1d810"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08aa9bdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08aa9ca80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08aa99d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08aa9b020"/>
        <function-ref name="stop" scoped="" ref="0x2af08aa9b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08ab1a6b0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08ab1a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08ab17020"/>
        <function-ref name="fired" scoped="" ref="0x2af08ab18020"/>
        <function-ref name="startAt" scoped="" ref="0x2af08ab189a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08ab184e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08ab174e0"/>
        <function-ref name="start" scoped="" ref="0x2af08ab195b0"/>
        <function-ref name="stop" scoped="" ref="0x2af08ab19ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08ab1be40" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08ab1be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08ab1a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b6604f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b6604f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b65edb0"/>
        <function-ref name="fired" scoped="" ref="0x2af08b65fda0"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b65e760"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b65e2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b65d2a0"/>
        <function-ref name="start" scoped="" ref="0x2af08b65f3d0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b65f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b662b90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b662b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b660020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af08b648da0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b648da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08b647180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08b647310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08b6474a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08b647630"/>
        <function-ref name="fired" scoped="" ref="0x2af08b6477c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af08b64a450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b64a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b64a7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b64a960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b64aaf0"/>
        <function-ref name="get" scoped="" ref="0x2af08b64ac80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b64ae10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b649020"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b6491b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b649340"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b6494d0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08b649660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08b6497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af08b649a80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b649a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08b649e00"/>
        <function-ref name="getControl" scoped="" ref="0x2af08b648020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b6481b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08b648340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08b6484d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b648660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08b6487f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08b648980"/>
        <function-ref name="setControl" scoped="" ref="0x2af08b648b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af08b63ea80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af08b63ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af08b63ee00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af08b63d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af08b63d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af08b63d340"/>
        <function-ref name="fired" scoped="" ref="0x2af08b63d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af08b640190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af08b640190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08b640510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af08b6406a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b640830"/>
        <function-ref name="get" scoped="" ref="0x2af08b6409c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b640b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b640ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2af08b640e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b63f030"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b63f1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2af08b63f350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af08b63f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b644020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b641870"/>
        <function-ref name="fired" scoped="" ref="0x2af08b643840"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b641220"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b643d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b641d30"/>
        <function-ref name="start" scoped="" ref="0x2af08b644e30"/>
        <function-ref name="stop" scoped="" ref="0x2af08b643380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af08b645660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af08b645660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af08b6459e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af08b63f770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af08b63f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af08b63faf0"/>
        <function-ref name="getControl" scoped="" ref="0x2af08b63fc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af08b63fe10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af08b63e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af08b63e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af08b63e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af08b63e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af08b63e660"/>
        <function-ref name="setControl" scoped="" ref="0x2af08b63e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af08b65b890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08b65b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b6570d0"/>
        <function-ref name="fired" scoped="" ref="0x2af08b6580d0"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b658a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b658590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b657590"/>
        <function-ref name="start" scoped="" ref="0x2af08b65a6e0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b65abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af08b6540a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af08b6540a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b651b30"/>
        <function-ref name="fired" scoped="" ref="0x2af08b6529f0"/>
        <function-ref name="startAt" scoped="" ref="0x2af08b6514e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b651020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08b650020"/>
        <function-ref name="start" scoped="" ref="0x2af08b652020"/>
        <function-ref name="stop" scoped="" ref="0x2af08b652530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af08b657c00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af08b657c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af08b656a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af08b6554e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af08b655020"/>
        <function-ref name="overflow" scoped="" ref="0x2af08b6559a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af08ab0b950" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2af08ab0b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08ab0bcd0"/>
        <function-ref name="runTask" scoped="" ref="0x2af08ab0be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af08ab0f690" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af08ab0f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08ab0b020"/>
        <function-ref name="fired" scoped="" ref="0x2af08ab0d020"/>
        <function-ref name="startAt" scoped="" ref="0x2af08ab0d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08ab0d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af08ab0b4e0"/>
        <function-ref name="start" scoped="" ref="0x2af08ab0e5b0"/>
        <function-ref name="stop" scoped="" ref="0x2af08ab0eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af08ab14180" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08ab14180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08ab10630"/>
        <function-ref name="fired" scoped="" ref="0x2af08ab13bf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08ab12990"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08ab12510"/>
        <function-ref name="getdt" scoped="" ref="0x2af08ab0f020"/>
        <function-ref name="gett0" scoped="" ref="0x2af08ab10ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08ab12090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08ab14d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08ab10020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08ab132a0"/>
        <function-ref name="stop" scoped="" ref="0x2af08ab13770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af08aafc490" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2af08aafc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af08aafc810"/>
        <function-ref name="runTask" scoped="" ref="0x2af08aafc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af08ab010a0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2af08ab010a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08aafd630"/>
        <function-ref name="fired" scoped="" ref="0x2af08ab00b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08aafe920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08aafe4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af08aafc020"/>
        <function-ref name="gett0" scoped="" ref="0x2af08aafdab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08aafe020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08ab01c90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08aafd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08ab001b0"/>
        <function-ref name="stop" scoped="" ref="0x2af08ab00680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af08ab08a70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af08ab08a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08ab02170"/>
        <function-ref name="fired" scoped="" ref="0x2af08ab05570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08ab044c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08ab04020"/>
        <function-ref name="getdt" scoped="" ref="0x2af08ab02ab0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08ab02610"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08ab05a10"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08ab076b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08ab04af0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08ab07ba0"/>
        <function-ref name="stop" scoped="" ref="0x2af08ab050d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af08b5d9d00" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5d9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b5d4220"/>
        <function-ref name="fired" scoped="" ref="0x2af08b5d77c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08b5d6590"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08b5d6110"/>
        <function-ref name="getdt" scoped="" ref="0x2af08b5d4b20"/>
        <function-ref name="gett0" scoped="" ref="0x2af08b5d46a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5d7c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08b5d8940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08b5d6ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08b5d8e10"/>
        <function-ref name="stop" scoped="" ref="0x2af08b5d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af08b5d24d0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af08b5d24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08b5cea20"/>
        <function-ref name="fired" scoped="" ref="0x2af08b5d0020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08b5d0da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08b5d0920"/>
        <function-ref name="getdt" scoped="" ref="0x2af08b5cd4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08b5cd020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08b5d04a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08b5d1110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08b5ce410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08b5d15e0"/>
        <function-ref name="stop" scoped="" ref="0x2af08b5d1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af08aadd5f0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af08aadd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af08aadd970"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af08aaddb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2af08aaddc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af08aadde20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af08aadc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af08aadd020" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af08aadd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af08aadd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af08aadc270" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af08aadc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af08aadc5f0"/>
        <function-ref name="source" scoped="" ref="0x2af08aadc780"/>
        <function-ref name="address" scoped="" ref="0x2af08aadc910"/>
        <function-ref name="destination" scoped="" ref="0x2af08aadcaa0"/>
        <function-ref name="setSource" scoped="" ref="0x2af08aadcc30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af08aadcdc0"/>
        <function-ref name="type" scoped="" ref="0x2af08aadb020"/>
        <function-ref name="setType" scoped="" ref="0x2af08aadb1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af08aadb340"/>
        <function-ref name="setGroup" scoped="" ref="0x2af08aadb4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af08aadb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af08ab573f0" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af08ab573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af089194c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2af0891b3a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af08ab54870"/>
        <function-ref name="fired" scoped="" ref="0x2af08ab56e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af08ab55c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af08ab55780"/>
        <function-ref name="getdt" scoped="" ref="0x2af08ab521e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af08ab54cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af08ab55300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af08ab56020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af08ab54260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af08ab564f0"/>
        <function-ref name="stop" scoped="" ref="0x2af08ab569c0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af0891a2dd0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af0891a2480" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af0891a2800" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0891a2b30" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af08919d620" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08919d020" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af08919d350" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af08919c6d0" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af08919f2a0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08919f020" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af08919e7f0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08919e210" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af08919e560" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2af08917b5d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2af089179ab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af089179830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2af089176020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af089177d30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af08917dcb0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af089177350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af0891b1840" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af0891b1840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af0891aa7c0" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af0891ae020" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2af0891acda0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af0891ac7d0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af0891acb10" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2af0891ac020" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2af0891a98a0" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2af0891a9020" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af0891ae800" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2af0891b03f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af0891b0170" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2af0891abdc0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af0891ab7f0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af0891abb30" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2af0891af020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af0891b0c30" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af0891af820" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2af0891986e0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
              <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089175d20" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2af0891980d0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af089198400" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2af089187b90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af089187910" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2af089192810" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af089192590" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2af08917cc50" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2af089193740" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af0891934c0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2af089190130" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af08918eb20" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2af08918ee70" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2af08918fc00" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af08918f620" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2af08918f970" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2af08918b600" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af08918b380" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2af08918a970" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af08918a3c0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2af08918a6e0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af0891711b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2af08918c390" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af08918c110" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2af0891880c0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af089186a60" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2af089186db0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2af089184020" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af0891ce030" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2af089205b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2af0891e6de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2af089205420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2af0891e6700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2af0891e55a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2af0891e9900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2af0891e6020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2af0891e5cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2af088d92b70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2af088d4ac00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2af08923a020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2af08923bcc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2af08923d390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af0891fd910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af0891fc390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2af08923a890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2af08925a7b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2af08923b560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2af08925a020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2af08923db30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2af08923c350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2af08923cda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af0891fd910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af0891fc390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af08923cb20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af0891fd910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af0891fc390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2af08924e0e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2af08924c630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2af08924c3b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2af08924a2a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af08924a020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af08924dbe0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af08924d3e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2af08924ea90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2af08924e810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2af0892553e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2af089255d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af089255ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2af089254790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2af089254510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2af0892532a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2af089253020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af089253990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af089243810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2af0892412a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2af089241020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2af089242020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af089228ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2af089242760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af0892469b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2af089243120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af089246270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af0892450e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2af0892459f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af089245770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2af089241cb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2af089241a30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af08926f9f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2af0890dc2b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2af088ed0420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af088c8c020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2af088c8b020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2af088c8c790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2af088c9e020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2af088c9e870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af0893c3280" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af0893c3280"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af0893c34c0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0893c34c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2af0893c2ac0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0893c34c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af0893c3d90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af0893c2150" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0893c2480" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2af0893c2810" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0893c34c0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af0893bd660" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893bd060" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0893bd390" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af0893be790" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af0893c1c10" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893c1990" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af0893bfde0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893bf800" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af0893bfb50" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2af0893ba780" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af0893ba780"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af0893ba9c0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0893ba9c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2af0893b7570" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893b72f0" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2af0893b52a0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0893ba9c0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893b5020" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2af08939f650" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08939f3d0" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2af0893a3730" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893a3110" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2af0893a34a0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2af0893a0630" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893a03b0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2af0893a2b30" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0893a2510" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2af0893a28a0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2af08939e630" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08939e3b0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2af0893d4860" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2af0893d2970" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2af0893d26f0" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2af0893d2020" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af0893d5020" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2af0893d4110" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2af0893d5e60" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af0893d68a0" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2af0893d62a0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2af0893d6610" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2af0893d1350" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2af0893d10d0" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af0893d5710" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2af0894500e0" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af0894508f0" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2af0894440b0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2af08944add0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af089449400" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af089449180" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2af0894482b0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af089449c70" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2af089448020" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af0894612b0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af089464b80" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af089461020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2af08945c020" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af08945ece0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2af08945cdf0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af08945c820" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af08945cb60" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2af08945dbc0" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2af089459720" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af08945adc0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af089459130" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af089459480" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2af08945e510" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af089460bb0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af089460280" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0894605c0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af089460910" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2af0894da270" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2af0894daba0" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2af0894d9d30" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af0894a5450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af0894a5870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2af0894b19c0" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2af0894b2990" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2af0894b2020" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2af0894b11f0" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2af0894b0470" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2af0894cf3e0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2af0894d2b80" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2af0894c7d70" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af0894c7af0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2af0894c7350" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2af0894fc390" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2af089508020" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2af0894e9de0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af08947e3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2af08947ebf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af0894e9b60" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af08947e3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2af08947ebf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2af0894dc0e0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2af0894e42a0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af089479360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2af089479ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af0894e4020" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af089479360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2af089479ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2af089501750" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2af0894ffcf0" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2af0894e5830" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af08947b290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2af08947ba20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2af0894e4a90" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af089479360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2af089479ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2af0894e0830" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2af0894e05b0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2af0894e1e40" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2af089501020" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2af0894e5040" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af08947b290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2af08947ba20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af0894e6da0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af08947b290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2af08947ba20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2af0894e3c80" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2af089501e80" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2af0894e1690" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2af0894e1410" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2af0894de190" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2af0894de910" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2af089503070" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2af089505020" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2af0894db070" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2af0895037b0" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2af089508800" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2af0895005c0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2af0894df070" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2af089462330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2af089480a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2af089500d60" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2af0894fdbd0" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2af0894e34d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2af0894e3250" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2af0894fcd30" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af0894fcab0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2af0894e6600" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af08947e3b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2af08947ebf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2af0894dc850" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2af089506020" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2af089504800" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af0894a5450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af0894a5870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af089504580" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af0894a5450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af0894a5870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2af089505af0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af08948d420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af08948d840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af089505870" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af08948d420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af08948d840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2af0894fb730" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2af0894ff570" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2af0894df880" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2af0894fd480" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2af089506790" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2af0894db850" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af0894f7ce0" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af0894f7ce0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af0894f4020" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0894f4020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af0894f4940" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af0894f4020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af0894f2a50" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af0894f21f0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af08951f1f0" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2af0895185b0" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2af089518d60" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2af0895175a0" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2af089516510" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2af089514c60" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af0895134d0" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2af089517d30" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af0895120b0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2af089513dc0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2af089519df0" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2af089516cf0" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2af0895144b0" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2af089592860" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af0895910e0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af08957fa50" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af08957e1f0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2af0895aab10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af0895aa890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af0895802d0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af08957d0e0" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2af0895a9490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af08957e930" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af08957f2b0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2af0895ab7c0" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2af089580a70" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af089582420" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2af08957d860" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2af0895aa020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2af0895ab070" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af089582b50" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af089847020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af089847750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af0898480e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af0898455e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af0898487e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af089847e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af0898492b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af089849980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2af0898a0460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2af0898a0cc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af0898c9a40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2af0898eae00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2af0898e7020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2af0898ea570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2af0898e86d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2af0898e7950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2af0898db020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af0898e3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af0898dcd20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af0898e3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2af0898dd020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2af0898ddb20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af0898e3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af0898dd8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af0898e3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2af0898dc470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2af0898e3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2af089966770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af08998e7a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08998e520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2af08998d840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08998d5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af0899c8d30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899c8730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0899c8a60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af0899cbda0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2af0899cace0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899ca720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0899caa50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2af0899c32e0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899c3060" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2af0899c2510" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899c2290" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2af0899c0680" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899c0400" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af0899b35e0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899b3020" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0899b3350" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af0899aebb0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899ae5b0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af0899ae8e0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af0899b2d20" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af0899b1900" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899b1680" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af0899afe00" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af0899af820" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af0899afb70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2af089a11b00" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089a114f0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2af089a11870" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2af089a15c80" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2af089a12b60" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089a12560" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2af089a128d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2af089a34190" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2af089a379f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2af089a3d2b0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2af089a3c720" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2af089a39390" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089a39110" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2af089a3b020" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2af089a3de20" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089a3dba0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2af089a39bf0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2af089a3b8d0" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2af089a46d70" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2af089a45750" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2af089a46400" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2af089a46180" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2af089a44350" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af089a440d0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2af089a41020" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2af089a41c40" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089a419c0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2af089a40730" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2af089a404b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2af089bcd7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af089bcd7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af089bcd9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089bcd9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2af089bc8840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089bcd9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bc85c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2af089bc69d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bc6750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2af089bca5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bca370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af089bc5d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089bcd9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bc5710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2af089bc5a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089bcd9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2af089bbae30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bba810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2af089bbaba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2af089bb7020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bb8d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2af089bba020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2af089bbb560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2af089bbb2e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2af089bd9430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bd91b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2af089bdc720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bdc4a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2af089bdedc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2af089bdeb40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2af089bde2a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2af089bde020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2af089bdd880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2af089bdd600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2af089bda5e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089bda360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2af089bd4630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2af089bd4020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af089bd43a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2af089be80c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089be9aa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2af089be9df0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2af089be46d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089be40d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2af089be4440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2af089be8ba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2af0885ae110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089be8920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2af089be5600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089be5380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2af089be92a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089be9020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2af089be6720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089be64a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2af089be00b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089beade0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af089bf8360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089c01d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2af089bf80d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af089bf76a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2af089bf4e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af089bf4060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2af089bf48a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af089bf4bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af089bf5840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af089bf5260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af089bf55b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2af089bf8df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2af089bf8b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2af089c3a0e0" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2af089bf9870" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2af089c342e0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089c34020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2af089c35710" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2af089135ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2af089132c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089c35410" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2af089c33620" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2af0891317c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2af08912f660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af089c33320" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2af089bfe070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2af089bfb0e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2af089bfd8f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2af089c00730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2af089bff7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2af089bfe8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2af089bfd120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2af089bff020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2af089c2ed00" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2af089c2f350" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2af089c2e530" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2af089c2e2b0" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2af089c2fac0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2af089c30020" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2af089c37c90" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2af089c30ad0" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2af089c30850" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2af089c67870" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2af089c67290" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2af089c675e0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2af089c681f0" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2af089c6a880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2af089c6a210" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2af089c6a5f0" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2af089c70c10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af089c70990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2af089c68a70" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2af089c6c730" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2af089c6c4b0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2af089c6fd30" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2af089c6fab0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2af089c66ae0" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2af089c6b9c0" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2af089c6b740" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2af089c662b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2af089c6d4d0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2af089bb5360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2af089bb5ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2af089c6dcc0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2af089c701f0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2af089c6f390" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2af089c6b020" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2af089c644b0" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af089c644b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2af089c64d70" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2af089cacae0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af089c644b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2af089cac530" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2af089cac850" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af089c644b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af089ccfc10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089ccf990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af089ccd710" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089ccd490" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2af089ca2c60" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2af089bb5360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2af089bb5ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af089c9e020" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af089c9e020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af089c9e260" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af089c9ae00" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af089c9de40" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2af089c9a460" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af089c9ce60" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          </variable>
          <variable name="dt" ref="0x2af089c9a1d0" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af089c9c640" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2af089c99620" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af089c9edc0" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af089c9eb40" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af089c9e260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af089c9d680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2af089c8b560" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2af089c8a4f0" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2af089c8bd40" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2af089c8ccd0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2af089c8c6f0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af089171590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2af089c8ca40" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af089171970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2af089cc9e50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af089c88e80" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af089c88020" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2af089c88890" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089c88be0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af089cd1610" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af089cd2770" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2af089cd1020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089cd1370" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af089c8fc30" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af089c8f470" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2af089c90ce0" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2af089c90420" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2af089e8a030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af089e891f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2af089e8a9d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af089e8a750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2af089e8b7a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af089e66020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af089e65ac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af089e687c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2af089e652a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2af089e65020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2af089e68020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2af089e66820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2af089fac2b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2af089facb00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2af089faa390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2af089fdcb60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089fdc580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089fdc8d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2af089fd7dd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089fd7490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089fd77e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af089fd7b30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af089fd86b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089fd80d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089fd8420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2af089fde730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af089136090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089fde150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089fde4a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2af089fda2c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af089fdb930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af089fdbc80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af089fda020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af089fbccf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2af089fbc380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2af089fbc710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af089fbca50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af08a0133c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2af08a0116a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2af08a011a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af08a011d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af08a013110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2af089fc0c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2af089fc0a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2af08a08d120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af08948d420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af08948d840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2af08a095d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af08a095af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2af08a0902a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af08a090020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2af08a091610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af08a090d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af08a090ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2af08a1009d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2af08a112420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2af08a106620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af08a1063a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2af08a11baf0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2af08a104c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2af08a10b5e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2af08a113540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2af08a1112d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2af08a114500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2af08a114280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2af08a117a10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2af08a10e070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2af08a105550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2af08a100270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2af08a108c30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2af08a0fb350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2af08a1559d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2af08a11a980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2af08a10f8b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2af08a10d1f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2af08a114dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2af08a11c8c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2af08a108460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af08a1081e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2af08a11c190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2af08a1044d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2af08a0ff190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2af08a0fab00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2af08a155270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2af08a103b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2af08a0ff8c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2af08a106db0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2af08a0fc390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2af08a1180e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2af08a10a7e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2af08a0fd7b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2af08a101ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2af08a10dde0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2af08a10db60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2af08a0f92d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2af08a109a60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2af08a103420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2af08a11b390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af0894be240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2af0894be660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af08a11b110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af0894be240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2af0894be660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2af08a10f190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2af08a1172a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af08a117020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2af08a10e9d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af08a10e750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2af08a0fcb60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2af08a116b50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2af08a118850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2af08a1092a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2af08a109020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af0885af520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2af08a11a270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2af08a0fd020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2af08a101350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2af08a105cc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2af08a10a020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2af08a10bd30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2af08a1119f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2af08a113c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2af08a0f9a40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2af08a1163c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af08a116140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2af08a0fbb10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2af08a112b50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2af08a0fa350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af08a3a9620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af08a3a93a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af08a396bc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2af08a396280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2af08a3965f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af08a396920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af08a395960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af08a3953a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af08a3956d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af08a37e730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af08a37e730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af08a37e970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af08a37e970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2af08a3e34d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af08a37e970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af08a3e3250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af08a37e970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2af08a3ea5e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2af08a42c9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2af08a42c020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2af08a42c750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2af08a42d7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2af08a42d020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af08a430d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2af08a4412a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af0885af160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08a441020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2af08a4422a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af088c84090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08a442020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af08a43e2a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08a43e020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af08a4402a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af08a440020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af0891833c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af089182a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af08a5c5910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af08a5c5910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af08a5c2270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af0885af920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2af08a75a600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af08a75a600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2af08a7572a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af088c93980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af08a75a600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2af08a757020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af08a75a600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
