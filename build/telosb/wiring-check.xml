<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af8e45d79a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af8e4582cd0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af8e4582cd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af8e47cf590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="TDMALink" scoped="" ref="0x2af8e45d2540"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e462b550"/></to>
    </wire>
    <wire loc="61:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2af8e462b550"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e4803640"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="TDMALinkSnd" scoped="" ref="0x2af8e45e71a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e4809ae0"/></to>
    </wire>
    <wire loc="58:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e4809ae0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e4802490"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="TDMALinkRcv" scoped="" ref="0x2af8e45e2b50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e4809490"/></to>
    </wire>
    <wire loc="55:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e4809490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5f9f1b0"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2af8e45f1240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5f920a0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5f920a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e45f27e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5030020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5cb6dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5bd4b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5bf3750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5b95080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5a86130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5959620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5895820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e51bb7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e676ba40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e549f020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e50f2d60"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4ea0e60"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4e27780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e64a0ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e48b7c80"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af8e47cfc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af8e40e73a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af8e40e73a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af8e453d140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2af8e47ed6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e46260f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e46260f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4622360"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e47eddc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2af8e4622a70"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2af8e4623910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2af8e4623910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4644850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2af8e4621190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e463b4a0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2af8e4621870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4cdec40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e4644850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e46707e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af8e465ede0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af8e466f020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2af8e4294080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2af8e466e360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2af8e46b15a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e477f6d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2af8e46c2020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e4778b30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2af8e46a8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e475e160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2af8e46d4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e4784cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2af8e46afaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e475f480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2af8e46da020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e4784020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2af8e46d0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e4793cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2af8e46bd5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e47a4220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2af8e46b3b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e471c9d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2af8e46d6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e476d2f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2af8e46b83e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e476e610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2af8e46c15a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e476f220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2af8e46a7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e477d7a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2af8e46d3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e47a12f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2af8e46c0be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e478e6d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2af8e46aa890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e477eac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2af8e46a1060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e4707c80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2af8e46dada0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e47a3610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2af8e46970c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e4761020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2af8e46bca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e479c6d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2af8e46c6690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e4767a90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2af8e46d5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e478b7a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2af8e46abcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e4768de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2af8e46b71f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e478dac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2af8e46d2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e479a7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2af8e46be0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e4786b30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2af8e46d9b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e479bac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2af8e46d7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e4775cb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2af8e46d8a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e4793020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2af8e46b9570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af8e4775020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2af8e46ba020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af8e4795b30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2af8e4704c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47045b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2af8e47032f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2af8e47b3aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2af8e4703940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2af8e47b0260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e4766930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e4707c80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e4764020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47045b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e475d020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e4707c80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e475c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47045b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e477c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e4707c80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e477bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47045b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2af8e4721c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2af8e47202f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2af8e47b09f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2af8e4720940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2af8e47af240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e4774b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e47722f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e4792160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e47917a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e478a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e4789c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e4783b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e47812f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e47a0160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e479f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e4799610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e4798c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e47b7b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af8e47b52f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e453b040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2af8e45385d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2af8e41572d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5f9f1b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5013210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e4800800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2af8e4821470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e5015020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e5015020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e5035680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af8e4819880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af8e5c95020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af8e5c95020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af8e5c90080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2af8e4832de0"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af8e5d8bc50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af8e5d8bc50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af8e5df2b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2af8e4820290"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af8e5d8faa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2af8e480e0b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5d945c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRandom" scoped="" ref="0x2af8e482dca0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af8e5b9ba20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af8e5b9ba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af8e5b93a20"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2af8e4830710"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ecf680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ecf680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2af8e4829a70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e5f18b30"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e5f18b30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6a1b3b0"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2af8e4828820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5f0b800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5f0b800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5013210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2af8e4827020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e5f06530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e5f06530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6aa1920"/></to>
    </wire>
    <wire loc="43:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2af8e4827d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5eff140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5eff140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5013210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2af8e4826400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e5efa020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e5efa020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6a75140"/></to>
    </wire>
    <wire loc="51:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e4847d40"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e5fa2390"/></to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e5fa2390"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e6b07de0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af8e48bad10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e48b74f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2af8e48b8020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e48b96a0"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af8e48b96a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e4df87a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af8e48b4bd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af8e48d0e10"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af8e48d0e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af8e4dfa060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2af8e4e28430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2af8e48db7f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af8e4dfa060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af8e493d850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af8e48f3e10"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af8e4dfb0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af8e4dfb0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af8e493e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e4dfa800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e4df5080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e4df56f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e4dfdc00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e4dfdc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e49468d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4dfc8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e6142c70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e6142c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4d122c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e493ba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e4dfa800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e613cd70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4941450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af8e493c690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e6142020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e6142020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e4d13020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e4938020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e613c5d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e613c5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af8e4d141d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4941450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e49ecdc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af8e493d850"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af8e49ea890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af8e493e1d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af8e49eb6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e49468d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e49ec020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e49e8020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e493ba40"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af8e49e9230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2af8e493c690"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e49e3290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e4938020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2af8e49e8690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e4a068b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e4a068b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af8e49fc020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e49e3c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e4cb49a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e4cb49a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af8e4cae9d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e49e1dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cca2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e4a003b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af8e49f8dc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e4a06080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e49ff710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af8e4a1b860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2af8e4af03f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2af8e4af03f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bea100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2af8e49f5800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2af8e4aee3f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2af8e4aee3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4be6d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af8e4a19800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2af8e4aec3f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2af8e4aec3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4be0740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2af8e4a17800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2af8e4b1c3f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2af8e4b1c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bab740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2af8e4a15800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2af8e4aea3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2af8e4aea3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bb0d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2af8e4a90cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b64d10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2af8e4aaecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4ba0740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2af8e4afe3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b92740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2af8e4b0d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c1cd10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2af8e4afc3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b8d100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2af8e4aaacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b97d10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2af8e4ac7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bd4740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2af8e4ae7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bdb100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2af8e4ad6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c25740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2af8e4af63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bb9740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2af8e4b1a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c01d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2af8e4b053f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c17740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2af8e4a8acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b56d10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2af8e4af43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bb4100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2af8e4a86cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b82100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2af8e4aa4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b89d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2af8e4ac1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bc5740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2af8e4ae1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c05100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2af8e4ad0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c17740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2af8e4a94cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b38740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2af8e4ab2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b73260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2af8e4a9dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bb0d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2af8e4b003f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b92740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2af8e4b143e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c2ad10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2af8e4b073e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c17740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2af8e4acccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4ba63f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2af8e4ab7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4be6d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2af8e4ada020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bf7100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2af8e4b113e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c25740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2af8e4af23e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bef740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2af8e4a8ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b5f740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2af8e4aaccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b9b100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2af8e4adf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c01d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2af8e4aa8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b92740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2af8e4ac5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bce100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2af8e4ae5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c0fd10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2af8e4ad4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c20100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2af8e4a9ae10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b413f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2af8e4a84cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b7ed10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2af8e4aa1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bb9740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2af8e4abf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bc0100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2af8e4b183e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bfc740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2af8e4b0b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c17740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2af8e4abb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bef740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2af8e4a92cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b69100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2af8e4ab0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b6fd10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2af8e4acecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bab740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2af8e4b0f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c20100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2af8e4ac9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bd9e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2af8e4ae9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4be0740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2af8e4ad8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c2ad10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2af8e4a8ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b5a100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2af8e4add020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bfc740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2af8e4a88cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b87740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2af8e4aa6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b8d100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2af8e4ac3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bcad10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2af8e4ae3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c0a740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2af8e4ad2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c1cd10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2af8e4a96cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b3de00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2af8e4ab4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b79740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2af8e4a9fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bb4100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2af8e4abd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bf4d10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2af8e4af83d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b89d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2af8e4b163e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bf7100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2af8e4afa3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b89d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2af8e4ab9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4bea100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2af8e4b093e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c1cd10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2af8e4b373f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4c05100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2af8e4b02060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af8e4b97d10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af8e4cae9d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e4ca7b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e4cd4c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e4cdec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4ccdc40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2af8e4cc2910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2af8e4ce1360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2af8e4ce1360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e4cdb710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2af8e4cc8b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2af8e4ce06a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2af8e4ce06a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e4d021d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2af8e4cc7e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2af8e4cdf9c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2af8e4cdf9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e4cfed70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e4d06930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2af8e4ae7020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e4d01480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2af8e4ae5020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e4cfc020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2af8e4ae3020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e6141be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e4a068b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6141440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4d12ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4d12ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4db1400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4d118a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e613cd70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4d122c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4db2020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4db2020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e654b3a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2af8e4d141d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af8e4d4ab60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e4d13020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e4db3210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e4db3210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e649d540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4db1400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e654a8b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2af8e4d49c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e4a003b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4db1cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4d118a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4d37a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4db1400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e4dd59d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e4db27a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e4db27a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e654bb20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e4dacb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e4a06080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e6548210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4db1cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af8e65489d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af8e649f330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2af8e6546c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e65163a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e4dacb20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af8e6516b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af8e4dd5400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e65150f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e4dd59d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6515d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4dd4720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2af8e4e27de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2af8e4e28430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af8e4e1d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af8e4582cd0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2af8e4e1d740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e15320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e15320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e9d4e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e9d4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e8b2f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e4e14370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e4e3db40"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e4e12020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e4ea4720"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e4e13530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e4ea69e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e4e419f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e4ea3400"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e4e12c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e4ea5020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e4ea0e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e4e8ec30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e4e99940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4e47490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e4ea3d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e4e9b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e4ea2a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e4e9c4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af8e4e99020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2af8e50286c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e4e9b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e4fc5830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e4e9c4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e4fc5110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2af8e4fc4760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af8e4e99020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e4eca8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4e99940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e4fc2590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4e99940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e5001c80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4e99940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af8e4fc30e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af8e4ec35c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2af8e4fc39d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2af8e4ec7130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2af8e4ebd8e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2af8e5005b70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2af8e4ebc060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e48b96a0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af8e5002ca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af8e48f3e10"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2af8e4eefe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2af8e4ee3d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2af8e4ef2400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2af8e4f2f0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2af8e4fc1c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2af8e4fc0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e5035680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e505a340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e5014050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e50347f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e50347f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e5cbcda0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af8e5013df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af8e5031880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af8e5031880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af8e5cbac00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e502f760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e502f760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5d348f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e504d9e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a21550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a21550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a13a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e50418a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e506cbb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e506cbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5053700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5013210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5033b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5033b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5cba020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5010800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e502d810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e502d810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5054670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5030020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5cb92d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e504caf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5a1d660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5a1d660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5a0faf0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e505a340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e5caab80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5064d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5d32830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2af8e5061500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2af8e5d33b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e506f970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5055740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5055740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5053700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5caa080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5054670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e5a246e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af8e5063790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af8e50522e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af8e50522e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af8e5c95020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e506ba80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5053080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5053080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5a22a70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2af8e5d290f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5059430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5d31860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5056350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5056350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5c20ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5d2f690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e50550f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e50550f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e5c1fa50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e5d2b4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e580cb30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5d2fce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a18d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5d2eb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a14640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af8e5d2d610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af8e50f5550"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af8e50f5550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af8e50eb1a0"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2af8e5d2a1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5097990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5097990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5090020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e5d29d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e5caab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2af8e5ca7d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5a22a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5a13020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5c20ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5c15a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5caa080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5ca32d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2af8e5058e70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5c205f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5c205f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2af8e5c15370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e5a246e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e5a15c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5059430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5c22cb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5c22cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5c177b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2af8e5058160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5c21960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e5c21960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2af8e5c164d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2af8e5057560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2af8e5c1e170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2af8e5c1e170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2af8e5c13020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e5c1fa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e5c14840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af8e5ca7d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e50519f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e50519f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e5092690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5c1d6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5bf8220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e5bf8220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5bf6a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5bf7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5c962a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e5c962a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5c933b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5c95d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5caecf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e5caecf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af8e5ca8860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5ca8860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e504e600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e504e600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e50912e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5c1d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5cab980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5cab980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af8e5ca7690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5ca7690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5bdbaa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5bdbaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5bd7e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5bd8950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5097300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5097300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e595d7c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e595d7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5957020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5090e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5103020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5103020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e50ec470"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2af8e50873f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2af8e51014b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2af8e51014b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2af8e50e9020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af8e508e6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e58a06d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af8e508e6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e59605c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af8e59605c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e5959ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af8e58a06d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e5893020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2af8e507f2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2af8e589d020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2af8e589d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e58938c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2af8e5086060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e589dcb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e589dcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5892650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e507ee20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5076430"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af8e5086e80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af8e5b9ba20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2af8e50bbbc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e5b9daa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e5b9daa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e5085670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2af8e50b65d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2af8e50b7660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2af8e50b8730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2af8e50f0890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2af8e50e8500"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2af8e5128790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b8220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b8220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b22e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af8e51279d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af8e52b8370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af8e52b8370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52ab1b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2af8e5125ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2af8e52b5ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2af8e52b5ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e529c710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2af8e5123020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2af8e52b2380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2af8e52b2380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52e6d70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2af8e511ec00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2af8e52cf210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2af8e52cf210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2af8e540da30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af8e510bb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5761e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5761e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af8e510abb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2af8e575d7b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af8e575d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af8e510c3b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2af8e575cae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af8e575cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af8e510b440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2af8e575ead0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af8e575ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e510cae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e575b160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e575b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5110420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5753870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5753870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5110cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5750880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5750880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af8e51185d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2af8e574f0a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af8e574f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e510f020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5757e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5757e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e510f8f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5756670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5756670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af8e5113e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2af8e5742500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af8e5742500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af8e51134a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5743ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5743ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e510e1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5754e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5754e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af8e510ea80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2af8e5756e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af8e5756e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e510d3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5755e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5755e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2af8e5154880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5798a80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5798a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2af8e5109a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e57d29e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e57d29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e5119390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e580cb30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e50e4970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e580bd30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e580bd30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e57f1310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2af8e51482f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2af8e514a410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e51bb7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e51b3a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e51b3a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e65ba8e0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b22e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e65b9180"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e65ba8e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e65b3a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e65b9180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e65ac5f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e65b3a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e6635510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af8e65a6d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e65b22a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e65b22a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e6635da0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e65a99b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5232020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e5232020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e522c5f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6631020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e659c1b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e659c1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e6630760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e659b8f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e659b8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e662ea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e6638c10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e6638c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2af8e46c2020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2af8e46b9570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2af8e46c0be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2af8e46b71f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2af8e46be0c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2af8e46da020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2af8e46bd5a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2af8e46dada0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2af8e46bca50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2af8e46d9b80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2af8e46ba020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2af8e46d8a20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2af8e5260950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af8e4cae9d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2af8e52b76a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52a7d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2af8e52b69d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52a1b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2af8e52b90e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52b0710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2af8e52b3020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52971b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52af930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af8e4a90cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52aa480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2af8e4ac7020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52a4020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2af8e4a92cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52a0de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af8e4a9ae10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e529b930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2af8e4abf020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e5296480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2af8e4ac9020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52e4020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2af8e4ac1020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2af8e52cb5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af8e530c020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af8e52cfe30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2af8e53fea70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e530cae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2af8e46c15a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2af8e530bda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2af8e46d6a20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2af8e530ac20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2af8e4ac9020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2af8e540c610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af8e52fbc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2af8e52fbc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af8e533ba30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2af8e53fd610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af8e52fde70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2af8e52fde70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af8e52ee9d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2af8e52f1bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2af8e5331bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2af8e52f8bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2af8e5338a30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2af8e52f6bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2af8e5336a30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2af8e5301d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2af8e533da30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2af8e52f3bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2af8e5333a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2af8e52fabc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2af8e533aa30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2af8e52f0bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2af8e5330bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2af8e52f5bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2af8e5335a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2af8e52fcc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2af8e533ca30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2af8e52f2c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2af8e5332bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2af8e52f9bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2af8e5339a30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2af8e52f7bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2af8e5337a30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2af8e5302dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2af8e533ea30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2af8e52f4bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2af8e5334a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af8e575d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5751880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af8e57490a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af8e57500a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af8e57a5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e5740500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af8e575c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af8e5746880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e5741500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af8e574b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af8e574d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5760a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5468930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e575be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af8e575a490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e5744c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af8e575abe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5741ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af8e57460a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e5755670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e57470a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af8e5749880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e5747880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af8e573fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e5740ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af8e574d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af8e57480a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af8e5742ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af8e574f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af8e57a5ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e575e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af8e5757670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e5754670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af8e574a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af8e574a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e57510a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af8e57582f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af8e5757020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e575b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e5743500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af8e573f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e574b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af8e5748880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af8e575de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af8e574e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af8e5758940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af8e574e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af8e57440a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af8e57a49b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e5463bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e5461020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e5461db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5465810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5460ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2af8e545b020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e54a7770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e54a7770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af8e545e400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e54e1c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e54e1c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e669de70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af8e545c080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af8e54e08f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af8e54e08f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af8e669a2c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5453680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5721020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5721020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af8e6699440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e545bdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2af8e544e120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e549fb70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af8e6699440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af8e54cb850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af8e669a2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af8e54cc020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e669de70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e54cf430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e669baf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e66905d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e66905d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e566c2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af8e54cc020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af8e5528a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e669a8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e54cc6a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e54cc6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e5583060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e5525a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e6699be0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e672da80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e54cd6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af8e5526690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e6691860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e6691860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e566d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e55242a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e6734020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e6734020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af8e566f4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e54cd6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e5528250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af8e54cb850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5583c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e54cf430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5529470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e55813e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e5525a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af8e55825b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2af8e5526690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e557c480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e55242a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2af8e5581a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e5572020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e5572020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af8e556cc70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e557cc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2af8e557a2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af8e556d5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e5563150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e556ed10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af8e5565780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af8e5594bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2af8e4b003f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2af8e5592b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2af8e4afc3f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af8e5590b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2af8e4afa3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2af8e558eb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2af8e4af43f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2af8e558cb20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2af8e4af63f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2af8e5599d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2af8e564c430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af8e67347c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e566e3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af8e6734dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af8e5659540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af8e5659540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2af8e564c430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e668f5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e5572020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6690d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e566cad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e566cad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e5662c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e566b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e672da80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e566c2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e5663850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e5663850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e6767020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2af8e566f4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af8e5668060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e566d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5664a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5664a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e6768270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e566e3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e5668990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e5662c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6766400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e5660570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e566b8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e5667e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e5662c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2af8e5667060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e556ed10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af8e5667840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af8e556d5e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e5662020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e67677a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e6766cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e5660570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af8e6764500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af8e676a0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2af8e67627a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2af8e5645250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af8e556cc70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af8e56a3d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2af8e4b003f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af8e56a1cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2af8e4afa3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e578bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af8e5796da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e578fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5789670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af8e5782e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af8e5789e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af8e57752f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e57772f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af8e5793120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af8e577d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e57782f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af8e578dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e578cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af8e5783670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af8e5785e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5788670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5797760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e5792aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af8e5791120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e577ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af8e5791870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5778ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e5793dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af8e577ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e578c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e578d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af8e5796750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e577fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af8e5781670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e577e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af8e5776ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e5777ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af8e5784670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af8e5781e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af8e577aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af8e5786670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af8e5775ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e5796100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af8e578f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e578b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af8e5783e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af8e5788e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af8e5782670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af8e578a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af8e5795450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e578ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af8e5790020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af8e5790cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af8e577a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af8e577bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e5792450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e577b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af8e57762f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e5784e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af8e577f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af8e5795aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af8e5793770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af8e5786e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af8e5790670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af8e5785670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af8e577de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af8e57747a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e57c5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af8e57cfda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e57c8b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e57c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af8e57bbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af8e57c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af8e57ae2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e57b12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af8e57cd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af8e57b6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e57b22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af8e57c7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e57c6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af8e57bc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af8e57bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af8e57c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e57d0760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e57ccaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af8e57cb120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e57b5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af8e57cb870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e57b2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e57cddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af8e57b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e57c6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e57c7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af8e57cf750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e57b9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af8e57ba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e57b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af8e57b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e57b1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af8e57be670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af8e57bae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af8e57b3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af8e57c0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af8e57aead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e57cf100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af8e57c8370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e57c5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af8e57bce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af8e57c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af8e57bb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af8e57c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af8e57ce450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e57c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af8e57c9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af8e57c9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af8e57b32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af8e57b4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e57cc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e57b42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af8e57b02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e57bee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af8e57b9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af8e57ceaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af8e57cd770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af8e57c0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af8e57c9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af8e57bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af8e57b6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af8e57ad7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2af8e57ee8c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2af8e57e3020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2af8e57e3020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2af8e57dd210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2af8e5841cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2af8e5831020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2af8e5831020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2af8e582e490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2af8e57dc5b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af8e584ca20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2af8e58318c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2af8e58325a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2af8e58325a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af8e584a9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2af8e5827b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2af8e5870020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2af8e5870020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2af8e586ed20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2af8e582ed30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2af8e58318c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e585d260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af8e585a890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af8e585a890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5853060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e5850190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2af8e46a1060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e5849c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2af8e4ab2cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2af8e58999f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2af8e58915e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2af8e589a190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2af8e5891d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2af8e58907f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b8220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2af8e5884500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2af8e52b90e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af8e587d820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af8e52b8370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2af8e587cb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2af8e52b3020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2af8e5885880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2af8e52cb5a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af8e587a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5924c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5924c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e587ad10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e59238f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e59238f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e58776d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2af8e59212f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e59212f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af8e5877de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2af8e5920cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af8e5920cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af8e58e4530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2af8e591f370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af8e591f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e58e4c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e591ed00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e591ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5878e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5985c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5985c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af8e5879780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2af8e596c7a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af8e596c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e5878550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e59712f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e59712f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e58e33e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5986480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5986480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e58e15e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e5982e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e5982e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e58e0020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5981670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5981670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af8e58e3e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2af8e591b7b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af8e591b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af8e58df9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2af8e596fad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af8e596fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e58e0890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2af8e59702f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e59702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e58df130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2af8e5970ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e5970ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e58dad40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e5960df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e5960df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e5958550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e588ca00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e588b9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af8e588a7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a21550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e587eb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5a19480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5a19480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5a0b8b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e58dd6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5984c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af8e5920020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5987c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af8e597ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af8e5981e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af8e596d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af8e5976670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af8e5986c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af8e597b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af8e597ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5980670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af8e591d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e5974a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af8e591dac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5971ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e591e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af8e5977e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e5985480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af8e5921940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e5978e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af8e5979670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e5977670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af8e597d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af8e5979e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af8e5972ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af8e597f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af8e596dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af8e5987490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e5984480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af8e597be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af8e5980e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af8e597a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5982670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af8e5920670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af8e591b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af8e591be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af8e59722f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5973ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e591e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e59732f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af8e596f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e597de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af8e5978670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af8e591f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af8e597fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af8e597e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af8e5976e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2af8e595c020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2af8e59577c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e59b0150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af8e5956020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af8e52b8370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2af8e5955380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2af8e52b76a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2af8e59546b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2af8e52b69d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af8e5953a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af8e52cfe30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af8e59526e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5b73d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af8e5b73d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af8e59be530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2af8e5b50ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af8e5b50ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e59bdad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e5b6d6b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e5b6d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af8e59bd3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2af8e5b6c370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af8e5b6c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e59bc330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e59bb1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af8e59b9d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a21550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af8e59bbb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af8e50f5550"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e59b43e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e5b65e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e5b65e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e59b4cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5b64670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5b64670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af8e59b5b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2af8e5b6b160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af8e5b6b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af8e59b26d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2af8e5b502f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af8e5b502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e59b3590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2af8e5b522f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af8e5b522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e59b3e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2af8e5b52ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af8e5b52ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e59b1020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5b53ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5b53ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e59b18b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2af8e5b71300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af8e5b71300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2af8e59a49d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e5a8d7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5232020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2af8e5a06820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af8e5a964e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af8e5a08b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af8e5a80610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af8e5a80610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af8e5b212b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5a85020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e5b2f150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e5a86130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5ac3020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e5ac3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e68809d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af8e5b29640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e5b0a2f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e5b05850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e5ac3870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e5ac3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e687a5f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e5b1f690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5a71b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e5a71b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5a69610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e68809d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e6864360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af8e6874d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e687f260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e687f260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e6864bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e68769b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5a71b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6860dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6869020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6869020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e685e440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e6868760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e6868760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e685d760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e6867a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e6867a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2af8e5ad8b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af8e4cae9d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2af8e5b019c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af8e5b24a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e5b168c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5b822c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5b822c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5a85020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5b66c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af8e5b70020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5b6ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af8e5b5de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af8e5b64e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af8e5b6f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af8e5b58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e5b532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af8e5b68c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5b67c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af8e5b5e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af8e5b60e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5b63670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5b72970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e5b6dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e5b57a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af8e5b6cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e5b6d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af8e5b59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e5b67480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5b68480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af8e5b71950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e5b5ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af8e5b5c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e5b59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af8e5b51ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af8e5b5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af8e5b5ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af8e5b55ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af8e5b61670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af8e5b6a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e5b66480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af8e5b5ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af8e5b63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af8e5b5d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5b65670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af8e5b70670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af8e5b6be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af8e5b552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5b56ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e5b562f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af8e5b512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e5b5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af8e5b5a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af8e5b70cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af8e5b6f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af8e5b61e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af8e5b6b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af8e5b60670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af8e5b58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af8e5b4f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2af8e5b98920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2af8e5b95940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e5b9f9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e5b95080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5bf3e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af8e5bf7020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e5bf2ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e5bf4690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e5bf4690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af8e5bf18f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af8e5b9ba20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5bf0170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2af8e5bd8200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2af8e5bd4570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5bd33f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af8e5bd8950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5bd3a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5c13d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af8e5c1d6b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5c12b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af8e5c1d020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5c112f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5c10170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af8e5c10b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af8e5cb5410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2af8e5c5cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2af8e5ca9800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e5ca4580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e5ca4580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5c90dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af8e5c95d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2af8e5c8faf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e5cd5350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af8e5cd5350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2af8e5c8d650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e5cd3750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af8e5cd3750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5b822c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5c8e9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e5a246e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5c88a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2af8e5c852a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af8e5d97580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af8e5035680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af8e5d82060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af8e5def910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5d937e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5d74340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af8e5d931d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af8e5deb2c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5d90640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e506cbb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af8e5d88e50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af8e5d784d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af8e5d945c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5ded6b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5d91b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e502d810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af8e5d8faa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af8e5d7ec10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5d92470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5d73020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af8e5deba00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e5eef020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e5eef020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e699fcb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2af8e5de96a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5eee8b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5eee8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e699c590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2af8e5dea800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5eefc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5eefc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e699e930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5de6130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a21550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5de2270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5a1d660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5dde020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5a19480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e5ee7b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5232020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2af8e5dded30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af8e5ee8830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af8e5ddc060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af8e5ee3e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af8e5ee3e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af8e5a80610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af8e5ddb0f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af8e5de8e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af8e5013210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2af8e5de7550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af8e5013df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e699fcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6991660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e699e930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e699c590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e5eec020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e699bc10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e699bc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5010800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e6990460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5e4e940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e698f0e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e5e4e940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5e834b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e5e82400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e5014050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5e81060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5e80720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2af8e5e7f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2af8e5e7fc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e5f30d70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af8e5f293b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af8e5eb9470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e5eb4b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e5ebfa00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e5ebfa00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e69eb890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e5ebf1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e69f2b10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af8e69f2b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af8e69d5660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af8e69e40a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e69f14f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af8e69f14f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af8e69d4020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af8e69e7c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af8e5232020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e69d0190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e69da450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e69da450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e69cf770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e69d9a80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e69d9a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e69cea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e69d8da0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e69d8da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2af8e5f33cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af8e5f24650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e6a1b3b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6abf640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5f178b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e6a1a020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e6a1a020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f16590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a1ac30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a1ac30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e5f15c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e6a182b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e6a182b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5010800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e6abd2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5e4e940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e6abc020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5f0bdd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f0aa10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e6aa1920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6a94b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5f05270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e6aa0590"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e6aa0590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f05e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a9f270"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a9f270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e5f035d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e6a9e8f0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e6a9e8f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5010800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e6a93910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5e4e940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a92590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5eff710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5efe400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af8e6a75140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af8e6b1b390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5efac30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e6a75d50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e6a75d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5ef98b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a74990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a74990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e5ef7020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af8e6a72120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af8e6a72120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5010800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af8e6b1a060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af8e5e4e940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e6b1ac70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
    <wire loc="9:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2af8e6b050a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6af3220"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6af3220"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2af8e6b00570"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6aed8b0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6aed8b0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2af8e6afb9f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6ae5020"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6ae5020"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af8e5f9f780"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f9e400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="7:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="21:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqDelayTimer" loc="2(TDMALinkC.JoinReqDelayTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:3276">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="4">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2af8e46cb230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2af8e46cb5d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2af8e46cb980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2af8e46cbd00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2af8e46ca0d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2af8e46ca440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2af8e46ca7d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2af8e46cab60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2af8e46c9020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2af8e471e960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2af8e471ed30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2af8e4b32890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2af8e4b32c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2af8e4b31020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2af8e4b313d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2af8e4b31740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2af8e4ca8ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2af8e4ca8ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2af8e4d315b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2af8e4d615b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2af8e4d85d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2af8e52159d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2af8e52159d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2af8e522ebb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2af8e522ebb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2af8e522b3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2af8e522b3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2af8e522b7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2af8e522b7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2af8e522a020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2af8e522a020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2af8e522a3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2af8e522abf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2af8e522abf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2af8e525cdd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2af8e525cdd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2af8e5259600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2af8e5259600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2af8e52599f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2af8e52599f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2af8e5258210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2af8e5258210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2af8e52585e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e586c400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e586c400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e586cb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e586cb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e5a98a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e5a98a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e5abfcd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e5abfcd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e5afc230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e5afc230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2af8e5afc560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2af8e5df3a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2af8e5e6c6b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2af8e5e62320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2af8e5e4ac80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2af8e5f10060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2af8e5ef59f0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2af8e5ef5d60" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2af8e5f73060" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2af8e5f733d0" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2af8e45d79a0" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af8e45d79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af8e45d7d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2af8e45f1240" loc="13:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2af8e45f1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e46026e0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e45f0c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e4603a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e46035f0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e4600020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e4602b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e4603170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e45f1e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e46020d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e45f0340"/>
        <function-ref name="stop" scoped="" ref="0x2af8e45f0810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkSnd" ref="0x2af8e45e71a0" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkSnd" scoped="" ref="0x2af8e45e71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e45e7520"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e45e76b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e45e7840"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e45e79d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e45e7b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALink" ref="0x2af8e45d2540" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALink" scoped="" ref="0x2af8e45d2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af8e45d81b0"/>
        <function-ref name="startDone" scoped="" ref="0x2af8e45d2a50"/>
        <function-ref name="startSlave" scoped="" ref="0x2af8e45d2be0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e45d2d70"/>
        <function-ref name="startMaster" scoped="" ref="0x2af8e45d8020"/>
        <function-ref name="isMaster" scoped="" ref="0x2af8e45d28c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkRcv" ref="0x2af8e45e2b50" loc="11:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkRcv" scoped="" ref="0x2af8e45e2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e45d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e45f27e0" loc="12:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e45f27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e45f2b60"/>
        <function-ref name="source" scoped="" ref="0x2af8e45f2cf0"/>
        <function-ref name="address" scoped="" ref="0x2af8e45f2e80"/>
        <function-ref name="destination" scoped="" ref="0x2af8e45e6030"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e45e61c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e45e6350"/>
        <function-ref name="type" scoped="" ref="0x2af8e45e64e0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e45e6670"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e45e6800"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e45e6990"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e45e6b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af8e4627210" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e4627210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4627590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af8e4582cd0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af8e4582cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af8e462a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e46260f0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e46260f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4626470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2af8e4621190" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2af8e4621190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4621510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e4622360" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4622360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e46226e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2af8e4622a70" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2af8e4622a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4622df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2af8e4621870" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2af8e4621870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4621bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e463b4a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e463b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e463b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2af8e4623910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2af8e4623910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4623c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2af8e465ede0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af8e465ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af8e4640c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af8e4640310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af8e46404a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af8e4640630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af8e4640180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af8e46407c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af8e4640950"/>
        <function-ref name="initClocks" scoped="" ref="0x2af8e4640ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e4644850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4644850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4644bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2af8e466f020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af8e466f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af8e466e020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af8e466f530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af8e466f6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af8e466f850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af8e466f3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af8e466f9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af8e466fb70"/>
        <function-ref name="initClocks" scoped="" ref="0x2af8e466fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2af8e466e360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af8e466e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af8e466e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e46707e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e46707e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4670b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2af8e46b15a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2af8e46b15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46b1920"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46b1ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46b1c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46b1dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46b0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46b01b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46b0340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46b04d0"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2af8e46c2020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2af8e46c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46c23a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46c2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46c26c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46c2850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46c29e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46c2b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46c2d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46c1020"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2af8e46a8700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2af8e46a8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46a8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46a8c10"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46a8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46a7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46a71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2af8e46d4a20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2af8e46d4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46d3020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46d31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46d3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46d34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2af8e46afaa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2af8e46afaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46afe20"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46aa020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46aa1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46aa340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2af8e46da020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2af8e46da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46da3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46da530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46da6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46da850"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46da9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2af8e46d0a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2af8e46d0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46cf020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46cf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46cf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46cf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2af8e46bd5a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2af8e46bd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46bd920"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46bdab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46bdc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46bddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46bc020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46bc1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46bc340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46bc4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2af8e46b3b10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2af8e46b3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e4699020"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46991b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4699340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46994d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e4699660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46997f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e4699980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e4699b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e4699ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2af8e46d6a20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2af8e46d6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46d5020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46d51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46d5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46d54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2af8e46b83e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2af8e46b83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46b8760"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46b88f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46b8a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46b8c10"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2af8e46c15a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2af8e46c15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46c1a20"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46c1bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46c1d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46c0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46c01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46c0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46c04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46c0660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2af8e46a7700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2af8e46a7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46a7a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46a7c10"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46a7da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46c4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46c41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2af8e46d3a20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2af8e46d3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46d2020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46d21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46d2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46d24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2af8e46c0be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2af8e46c0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46bf020"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46bf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46bf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46bf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46bf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46bf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46bf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46bfb10"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46bfca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2af8e46aa890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2af8e46aa890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46aac10"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46aada0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46a9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46a91b0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2af8e46a1060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2af8e46a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e46a13e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e46a1570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46a1700"/>
        <function-ref name="get" scoped="" ref="0x2af8e46a1890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46a1a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46a1bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e46a1d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46a0020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e46a01b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e46a0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e46a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2af8e46dada0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2af8e46dada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d9180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46d9310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46d94a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46d9630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2af8e46970c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2af8e46970c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e4697440"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46975d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4697760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46978f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e4697a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4697c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e4697da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46b1020"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2af8e46bca50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2af8e46bca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46bcdd0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46bb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46bb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46bb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46bb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46bb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46bb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46bb980"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2af8e46c6690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2af8e46c6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46c6a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46c6ba0"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46c6d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46a8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46a81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2af8e46d5a20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2af8e46d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46d4020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46d41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46d4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46d44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2af8e46abcf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2af8e46abcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46af0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46af230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46af3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46af550"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46af6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2af8e46b71f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2af8e46b71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46b7570"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46b7700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46b7890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46b7a20"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46b7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2af8e46d2a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2af8e46d2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46d0020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46d01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46d0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46d04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2af8e46be0c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2af8e46be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46be440"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46be5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46be760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46be8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46bea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46bec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46beda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46bd020"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2af8e46c46c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2af8e46c46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e46c4a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e46c4bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46c4d60"/>
        <function-ref name="get" scoped="" ref="0x2af8e46c3020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46c31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46c3340"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e46c34d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46c3660"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e46c37f0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e46c3980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e46c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2af8e46d9b80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2af8e46d9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d8020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46d81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46d8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46d84d0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2af8e46d7a20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2af8e46d7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e46d6020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e46d61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e46d6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e46d64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e46d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2af8e46d8a20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2af8e46d8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46d7020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46d71b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46d7340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46d74d0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2af8e46b9570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2af8e46b9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e46b98f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e46b9a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e46b9c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e46b9da0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e46b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2af8e46ba020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2af8e46ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e46ba3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e46ba530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e46ba6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e46ba850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e46ba9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e46bab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e46bad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e46b9020"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e46b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2af8e47032f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2af8e47032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4703670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2af8e4704c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2af8e4704c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4703020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2af8e4703940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2af8e4703940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4703cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2af8e47045b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e47045b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4704950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e4707c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e4707c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e47050a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e4705230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47053c0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4705550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47056e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4705870"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4705a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4705b90"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4705d20"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4704020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e47041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2af8e47202f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2af8e47202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4720670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2af8e4721c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2af8e4721c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4720020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2af8e4720940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2af8e4720940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4720cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2af8e47215b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e47215b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4721950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e46ffc80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e46ffc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e47220a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e4722230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47223c0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4722550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47226e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4722870"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4722a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4722b90"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4722d20"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4721020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e47211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e4767a90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e4767a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e4767e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e4766020"/>
        <function-ref name="captured" scoped="" ref="0x2af8e47661b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4766340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47664d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e4766660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e471c9d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e471c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e471cd50"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e4768020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47681b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e4768340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e47684d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4768660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e47687f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e4768980"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e4768b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e4764020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e4764020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e47643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e4768de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e4768de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e4767180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e4767310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e47674a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e4767630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e47677c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e4766930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e4766930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4766cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e4766e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4765020"/>
        <function-ref name="get" scoped="" ref="0x2af8e47651b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4765340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47654d0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4765660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47657f0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4765980"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4765b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e4765ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e475e160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e475e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e475e4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e475e670"/>
        <function-ref name="captured" scoped="" ref="0x2af8e475e800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e475e990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e475eb20"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e475ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e4761020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e4761020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e47613a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e4761530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47616c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e4761850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e47619e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4761b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e4761d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e475f020"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e475f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e475c7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e475c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e475cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e475f480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e475f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e475f800"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e475f990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e475fb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e475fcb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e475fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e475d020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e475d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e475d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e475d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e475d6c0"/>
        <function-ref name="get" scoped="" ref="0x2af8e475d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e475d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e475db70"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e475dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e475c020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e475c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e475c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e475c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e477d7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e477d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e477db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e477dcb0"/>
        <function-ref name="captured" scoped="" ref="0x2af8e477de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e477c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e477c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e477c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e477f6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e477f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e477fa50"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e477fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e477fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e477e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e477e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e477e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e477e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e477e660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e477e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e477bc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e477bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e477a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e477eac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e477eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e477ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e477d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e477d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e477d340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e477d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e477c610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e477c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e477c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e477cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e477ccb0"/>
        <function-ref name="get" scoped="" ref="0x2af8e477ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e477b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e477b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e477b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e477b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e477b660"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e477b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e477b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e4775cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e4775cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47740a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e4774230"/>
        <function-ref name="captured" scoped="" ref="0x2af8e47743c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4774550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47746e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e4774870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e4778b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e4778b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e4776020"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e47761b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4776340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e47764d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e4776660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47767f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e4776980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e4776b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e4776ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e47722f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e47722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4772670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e4775020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e4775020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47753a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e4775530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e47756c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e4775850"/>
        <function-ref name="fired" scoped="" ref="0x2af8e47759e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e4774b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e4774b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4773020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e47731b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4773340"/>
        <function-ref name="get" scoped="" ref="0x2af8e47734d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4773660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47737f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4773980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4773b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4773ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4773e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e4772020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e476d2f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e476d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e476d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e476d800"/>
        <function-ref name="captured" scoped="" ref="0x2af8e476d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e476db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e476dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e476de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e476f220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e476f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e476f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e476f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e476f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e476fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e476fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e476fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e476e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e476e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e476e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e47917a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e47917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4791b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e476e610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e476e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e476e990"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e476eb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e476ecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e476ee40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e476d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e4792160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e4792160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e47924e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e4792670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4792800"/>
        <function-ref name="get" scoped="" ref="0x2af8e4792990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4792b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4792cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4792e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4791020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e47911b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4791340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e47914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e478b7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e478b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e478bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e478bcb0"/>
        <function-ref name="captured" scoped="" ref="0x2af8e478be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e478a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e478a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e478a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e478e6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e478e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e478ea50"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e478ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e478ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e478d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e478d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e478d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e478d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e478d660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e478d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e4789c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e4789c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4788020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e478dac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e478dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e478de40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e478b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e478b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e478b340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e478b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e478a610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e478a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e478a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e478ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e478acb0"/>
        <function-ref name="get" scoped="" ref="0x2af8e478ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4789020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47891b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4789340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47894d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4789660"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e47897f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e4789980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e4784cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e4784cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47830a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e4783230"/>
        <function-ref name="captured" scoped="" ref="0x2af8e47833c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4783550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47836e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e4783870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e4786b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e4786b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e4785020"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e47851b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4785340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e47854d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e4785660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47857f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e4785980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e4785b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e4785ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e47812f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e47812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4781670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e4784020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e4784020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47843a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e4784530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e47846c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e4784850"/>
        <function-ref name="fired" scoped="" ref="0x2af8e47849e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e4783b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e4783b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4782020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e47821b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4782340"/>
        <function-ref name="get" scoped="" ref="0x2af8e47824d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4782660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47827f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4782980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4782b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4782ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4782e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e4781020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e47a12f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e47a12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47a1670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e47a1800"/>
        <function-ref name="captured" scoped="" ref="0x2af8e47a1990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47a1b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47a1cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e47a1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e47a4220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e47a4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e47a45a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e47a4730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47a48c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e47a4a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e47a4be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47a4d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e47a3020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e47a31b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e47a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e479f7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e479f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e479fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e47a3610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e47a3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47a3990"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e47a3b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e47a3cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e47a3e40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e47a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e47a0160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e47a0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e47a04e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e47a0670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47a0800"/>
        <function-ref name="get" scoped="" ref="0x2af8e47a0990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47a0b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47a0cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e47a0e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e479f020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e479f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e479f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e479f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e479a7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e479a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e479ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e479acb0"/>
        <function-ref name="captured" scoped="" ref="0x2af8e479ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4799020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47991b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e4799340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e479c6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e479c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e479ca50"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e479cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e479cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e479b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e479b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e479b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e479b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e479b660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e479b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e4798c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e4798c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e479bac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e479bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e479be40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e479a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e479a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e479a340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e479a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e4799610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e4799610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4799990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e4799b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4799cb0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4799e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4798020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47981b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4798340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47984d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4798660"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e47987f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e4798980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e4793cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e4793cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47b70a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e47b7230"/>
        <function-ref name="captured" scoped="" ref="0x2af8e47b73c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47b7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47b76e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e47b7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e4795b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e4795b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e4794020"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e47941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4794340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e47944d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e4794660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47947f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e4794980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e4794b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e4794ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af8e47b52f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af8e47b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e47b5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af8e4793020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af8e4793020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e47933a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e4793530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e47936c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e4793850"/>
        <function-ref name="fired" scoped="" ref="0x2af8e47939e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af8e47b7b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e47b7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e47b6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e47b61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e47b6340"/>
        <function-ref name="get" scoped="" ref="0x2af8e47b64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e47b6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e47b67f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e47b6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e47b6b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e47b6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e47b6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e47b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2af8e47af240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2af8e47af240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e47af5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2af8e47b3aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2af8e47b3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e47b3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2af8e47b0260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2af8e47b0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e47b05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2af8e47b09f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2af8e47b09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e47b0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2af8e4294080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af8e4294080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af8e4294400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2af8e41572d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2af8e41572d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af8e4157650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2af8e432c7d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2af8e432c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2af8e432cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2af8e4642b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af8e4642b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af8e47f9b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af8e47f91b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af8e47f9340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af8e47f94d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af8e47f9020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af8e47f9660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af8e47f97f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2af8e47f9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af8e47eddc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2af8e47eddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e47ec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af8e47cf590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af8e47cf590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af8e47cf910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2af8e47ed6c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2af8e47ed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e47eda40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2af8e47cfc00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af8e47cfc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e47ed020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af8e47ed1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af8e47ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af8e407d1d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2af8e407d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e407d550"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e407d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af8e40e73a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af8e40e73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e40e7720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af8e40e78b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af8e40e7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af8e453b040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2af8e453b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e453b3c0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e453b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2af8e45385d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2af8e45385d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af8e4538950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af8e453d140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af8e453d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e453d4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af8e453d650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af8e453d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e4809ae0" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e4809ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4809e60"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4808020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e48081b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4808340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e48084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e4809490" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e4809490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4809810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e462b550" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e462b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af8e48091b0"/>
        <function-ref name="startDone" scoped="" ref="0x2af8e462ba60"/>
        <function-ref name="startSlave" scoped="" ref="0x2af8e462bbf0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e462bd80"/>
        <function-ref name="startMaster" scoped="" ref="0x2af8e4809020"/>
        <function-ref name="isMaster" scoped="" ref="0x2af8e462b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2af8e4821470" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2af8e4821470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e48217f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e4821980"/>
        <function-ref name="start" scoped="" ref="0x2af8e4821b10"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4821ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2af8e4827d30" loc="42:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2af8e4827d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e48260e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e4802490" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e4802490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4802810"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e48029a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4802b30"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4802cc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4802e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2af8e4820290" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2af8e4820290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4818090"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4810970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e48104f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4818960"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4818e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRandom" ref="0x2af8e482dca0" loc="35:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRandom" scoped="" ref="0x2af8e482dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af8e48300a0"/>
        <function-ref name="rand32" scoped="" ref="0x2af8e4830230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2af8e4829a70" loc="38:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2af8e4829a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4829df0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4828020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e48281b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4828340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e48284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqDelayTimer" ref="0x2af8e4830710" loc="36:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2af8e4830710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e482ac40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e482b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e482a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e482bae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e4829590"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e4829110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e482b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e482e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e482a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e482e860"/>
        <function-ref name="stop" scoped="" ref="0x2af8e482ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2af8e4826400" loc="44:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2af8e4826400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4826780"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4826910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4826aa0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4826c30"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4826dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e4800170" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e4800170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e48004f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2af8e480e0b0" loc="32:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2af8e480e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e480e430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af8e4803640" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af8e4803640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af8e48021c0"/>
        <function-ref name="startDone" scoped="" ref="0x2af8e4803b50"/>
        <function-ref name="startSlave" scoped="" ref="0x2af8e4803ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e4803e70"/>
        <function-ref name="startMaster" scoped="" ref="0x2af8e4802030"/>
        <function-ref name="isMaster" scoped="" ref="0x2af8e48039c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2af8e4832de0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2af8e4832de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af8e4835c60"/>
        <function-ref name="eventTime" scoped="" ref="0x2af8e48311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2af8e4828820" loc="39:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2af8e4828820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4828ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2af8e4827020" loc="41:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2af8e4827020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e48273a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4827530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e48276c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4827850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e48279e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2af8e4819880" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af8e4819880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af8e4819c00"/>
        <function-ref name="setRetries" scoped="" ref="0x2af8e4819d90"/>
        <function-ref name="getRetries" scoped="" ref="0x2af8e47fc020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af8e47fc1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af8e47fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e4800800" loc="27:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e4800800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e4800b80"/>
        <function-ref name="source" scoped="" ref="0x2af8e4800d10"/>
        <function-ref name="address" scoped="" ref="0x2af8e47ff020"/>
        <function-ref name="destination" scoped="" ref="0x2af8e47ff1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e47ff340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e47ff4d0"/>
        <function-ref name="type" scoped="" ref="0x2af8e47ff660"/>
        <function-ref name="setType" scoped="" ref="0x2af8e47ff7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e47ff980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e47ffb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e47ffca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2af8e4847d40" loc="46:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e4847d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af8e4824bd0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af8e4824270"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af8e4824400"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e4824590"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af8e4824720"/>
        <function-ref name="start" scoped="" ref="0x2af8e48248b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af8e4824a40"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2af8e48240e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e48bad10" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e48bad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e48bd0e0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e48bd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2af8e48db7f0" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af8e48db7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af8e48dbb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2af8e48b4bd0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af8e48b4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e48b7020"/>
        <function-ref name="receive" scoped="" ref="0x2af8e48b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e48b7c80" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e48b7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e48de0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2af8e48b8020" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2af8e48b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e48b83a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e48b8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e48b74f0" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e48b74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e48b7870"/>
        <function-ref name="stop" scoped="" ref="0x2af8e48b7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af8e48d0e10" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af8e48d0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e48cf1c0"/>
        <function-ref name="receive" scoped="" ref="0x2af8e48cf350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af8e48f3e10" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af8e48f3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e48d01c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af8e48d0350"/>
        <function-ref name="receive" scoped="" ref="0x2af8e48d04e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af8e48d0670"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af8e48d0800"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af8e48d0990"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e48d0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e48b96a0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e48b96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e48b9a20"/>
        <function-ref name="stop" scoped="" ref="0x2af8e48b9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e4dfc8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4dfc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e4dfcc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e4dfce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af8e4dfa060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af8e4dfa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4dfa3e0"/>
        <function-ref name="receive" scoped="" ref="0x2af8e4dfa570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af8e4dfa800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e4dfa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e4dfab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af8e4dfb0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af8e4dfb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4dfb440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af8e4dfb5d0"/>
        <function-ref name="receive" scoped="" ref="0x2af8e4dfb760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af8e4dfb8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af8e4dfba80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af8e4dfbc10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4dfbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e4dfdc00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e4dfdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4dfc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e4dfc1b0"/>
        <function-ref name="request" scoped="" ref="0x2af8e4dfc340"/>
        <function-ref name="granted" scoped="" ref="0x2af8e4dfc4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4dfc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af8e4941450" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4941450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e49417d0"/>
        <function-ref name="configure" scoped="" ref="0x2af8e4941960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af8e493d850" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af8e493d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e493dbd0"/>
        <function-ref name="receive" scoped="" ref="0x2af8e493dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af8e493ba40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e493ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e493bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af8e493e1d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af8e493e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e493e550"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af8e493e6e0"/>
        <function-ref name="receive" scoped="" ref="0x2af8e493e870"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af8e493ea00"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af8e493eb90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af8e493ed20"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e493d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af8e493c690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af8e493c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e493ca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e493cba0"/>
        <function-ref name="request" scoped="" ref="0x2af8e493cd30"/>
        <function-ref name="granted" scoped="" ref="0x2af8e493b020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e493b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e49468d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e49468d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4946c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e4946de0"/>
        <function-ref name="request" scoped="" ref="0x2af8e4942020"/>
        <function-ref name="granted" scoped="" ref="0x2af8e49421b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4942340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af8e4938020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e4938020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e49383a0"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e4938530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af8e49ecdc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e49ecdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e49eb180"/>
        <function-ref name="configure" scoped="" ref="0x2af8e49eb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af8e49ea890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af8e49ea890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e49eac30"/>
        <function-ref name="receive" scoped="" ref="0x2af8e49eadc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af8e49e8020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e49e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e49e83c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2af8e49e8690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af8e49e8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e49e8a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e49e8ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e49e8d30"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e49e7020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e49e71b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e49e7340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e49e74d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e49e7660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e49e77f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e49e7980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e49e7b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e49e7ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e49e7e30"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e49e6120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e49e62b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e49e6440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e49e65d0"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e49e6760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e49e68f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e49e6a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e49e6c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e49e6da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e49e5020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e49e51b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e49e5340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e49e56d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e49e5860"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e49e59f0"/>
        <function-ref name="tx" scoped="" ref="0x2af8e49e5b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e49e5d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e49e4020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e49e41b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e49e4340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e49e44d0"/>
        <function-ref name="rx" scoped="" ref="0x2af8e49e4660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e49e47f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e49e4980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e49e4b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e49e4ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e49e4e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af8e49eb6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af8e49eb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e49eba70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af8e49ebc00"/>
        <function-ref name="receive" scoped="" ref="0x2af8e49ebd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af8e49ea020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af8e49ea1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af8e49ea340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e49ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e49e3c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e49e3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e49e2ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e49e14e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e49e1020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e49e19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af8e49e9230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af8e49e9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e49e95d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e49e9760"/>
        <function-ref name="request" scoped="" ref="0x2af8e49e98f0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e49e9a80"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e49e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e49ec020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e49ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e49ec3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e49ec550"/>
        <function-ref name="request" scoped="" ref="0x2af8e49ec6e0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e49ec870"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e49eca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af8e49e3290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e49e3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e49e3630"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e49e37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e49e1dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e49e1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e49df180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e49df310"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e49df4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e49df630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e49df7c0"/>
        <function-ref name="get" scoped="" ref="0x2af8e49df950"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e49dfae0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e49de1b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e49dfe00"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e49dfc70"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e49de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af8e4a003b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e4a003b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e4a00730"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e4a008c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2af8e4a06080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e4a06080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e4a06400"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4a06590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af8e4a068b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e4a068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e4a06c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e4a06dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e4a05020"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e4a051b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e4a05340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e4a054d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e4a05660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e4a057f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e4a05980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e4a05b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e4a05ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e4a05e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e4a03020"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e4a032b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e4a03440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e4a035d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e4a03760"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e4a038f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e4a03a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e4a03c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e4a03da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e4a02020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e4a021b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e4a02340"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4a024d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e4a02860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e4a029f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e4a02b80"/>
        <function-ref name="tx" scoped="" ref="0x2af8e4a02d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e4a01020"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e4a011b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e4a01340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e4a014d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e4a01660"/>
        <function-ref name="rx" scoped="" ref="0x2af8e4a017f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e4a01980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e4a01b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e4a01ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e4a01e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e4a00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af8e4a19800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af8e4a19800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a19b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a19d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a18020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a18340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a18660"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a18980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a18b10"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a18ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a18e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a17020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a172b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a17440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af8e49f8dc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af8e49f8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e49f7180"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e49f7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2af8e4a17800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2af8e4a17800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a17b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a17d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a16020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a16340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a16660"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a16980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a16b10"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a16ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a16e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a15020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a152b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a15440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2af8e4a15800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2af8e4a15800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a15b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a15d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a13020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a13340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a13660"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a13980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a13b10"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a13ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a13e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a12020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a122b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a12440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2af8e49fc020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af8e49fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e49fc3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e49fc530"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e49fc6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e49fc850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e49fc9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e49fcb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e49fcd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e49fb020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e49fb1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e49fb340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e49fb4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e49fb660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e49fb7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e49fba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e49fbc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e49fbda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e49fa020"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e49fa1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e49fa340"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e49fa4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e49fa660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e49fa7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e49fa980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e49fab10"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e49faca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e49f9220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e49f93b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e49f9540"/>
        <function-ref name="tx" scoped="" ref="0x2af8e49f96d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e49f9860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e49f99f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e49f9b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e49f9d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e49f8020"/>
        <function-ref name="rx" scoped="" ref="0x2af8e49f81b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e49f8340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e49f84d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e49f8660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e49f87f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e49f8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2af8e49ff710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e49ff710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e49ffa90"/>
        <function-ref name="stop" scoped="" ref="0x2af8e49ffc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2af8e49f5800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2af8e49f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e49f5b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e49f5d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a1a020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a1a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a1a340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a1a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a1a660"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a1a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a1a980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a1ab10"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a1aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a1ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a19020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a192b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a19440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af8e4a1b860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af8e4a1b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a1bbe0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a1bd70"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e49f6020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e49f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e49f6340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e49f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e49f6660"/>
        <function-ref name="get" scoped="" ref="0x2af8e49f67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e49f6980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e49f6b10"/>
        <function-ref name="set" scoped="" ref="0x2af8e49f6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e49f6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e49f5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e49f52b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e49f5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af8e4a90cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af8e4a90cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a8f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a8f230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a8f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a8f550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a8f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a8f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a8fa00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a8fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a8fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a8e020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a8e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a8e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a8e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a8e760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a8e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af8e4aaecc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af8e4aaecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aad230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aad550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aada00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aadb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aadd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aac020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aac760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2af8e4afe3d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2af8e4afe3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4afe750"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4afe8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4afea70"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4afec00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4afed90"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4afd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4afd1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4afd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4afd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4afd660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4afd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4afd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4afdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4afdda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4afc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2af8e4b0d3e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2af8e4b0d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b0d760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b0d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b0da80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b0dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b0dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b0c1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b0c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b0c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b0c660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b0c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b0c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b0cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b0cda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2af8e4afc3f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2af8e4afc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4afc770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4afc900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4afca90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4afcc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4afcdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4afb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4afb1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4afb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4afb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4afb660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4afb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4afb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4afbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4afbda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4afa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2af8e4aaacc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2af8e4aaacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aa90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aa9230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aa93c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aa9550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aa96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aa9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aa9a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aa9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aa9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aa8020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aa81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aa8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aa84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aa8760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aa88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2af8e4ac7020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2af8e4ac7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ac73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ac7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ac76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ac7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ac79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ac7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ac7d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ac6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ac61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ac6340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ac64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ac6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ac67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ac6a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ac6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2af8e4ae7020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2af8e4ae7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ae73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ae7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ae76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ae7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ae79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ae7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ae7d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ae6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ae61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ae6340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ae64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ae6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ae67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ae6a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ae6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2af8e4ad6020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2af8e4ad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ad63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ad6530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ad66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ad6850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ad69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ad6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ad6d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ad5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ad51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ad5340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ad54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ad5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ad57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ad5a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ad5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2af8e4af63f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2af8e4af63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4af6770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4af6900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4af6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4af6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4af6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4af5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4af51b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4af5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4af54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4af5660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4af57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4af5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4af5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4af5da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4af4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2af8e4b1a3e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2af8e4b1a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b1a760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b1a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b1aa80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b1ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b1ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b19020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b191b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b19340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b194d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b19660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b197f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b19980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b19b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b19da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2af8e4b053f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2af8e4b053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b05770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b05900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b05a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b05c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b05db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b04020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b041b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b04340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b044d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b04660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b047f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b04980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b04b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b04da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af8e4a8acc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af8e4a8acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a890a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a89230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a893c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a89550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a896e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a89870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a89a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a89b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a89d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a88020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a88340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a88760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2af8e4af43f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2af8e4af43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4af4770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4af4900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4af4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4af4c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4af4db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4af3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4af31b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4af3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4af34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4af3660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4af37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4af3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4af3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4af3da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4af2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af8e4a86cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af8e4a86cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a850a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a85230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a853c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a85550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a856e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a85870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a85a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a85b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a85d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a84020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a84340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a84760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2af8e4aa4cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2af8e4aa4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aa20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aa2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aa23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aa2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aa26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aa2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aa2a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aa2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aa2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aa1020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aa11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aa1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aa14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aa1760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aa18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2af8e4ac1020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2af8e4ac1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ac13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ac1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ac16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ac1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ac19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ac1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ac1d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ac0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ac01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ac0340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ac04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ac0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ac07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ac0a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ac0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2af8e4ae1020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2af8e4ae1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ae13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ae1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ae16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ae1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ae19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ae1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ae1d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ae0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ae01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ae0340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ae04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ae0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ae07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ae0a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ae0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2af8e4ad0020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2af8e4ad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ad03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ad0530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ad06c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ad0850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ad09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ad0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ad0d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b03020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b031b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b03340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b034d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b03660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b037f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b03a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b03c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af8e4a94cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af8e4a94cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a930a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a93230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a933c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a93550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a936e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a93870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a93a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a93b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a93d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a92020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a92340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a92760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af8e4ab2cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af8e4ab2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ab1180"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ab1310"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ab14a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ab1630"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ab17c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ab1950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ab1ae0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ab1c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ab1e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ab0020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ab01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ab0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ab04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ab0760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ab08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2af8e4a9dcc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2af8e4a9dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4acf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4acf230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4acf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4acf550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4acf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4acf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4acfa00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4acfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4acfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ace020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ace1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ace340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ace4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ace760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ace8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2af8e4b003f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2af8e4b003f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b00770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b00900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b00a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b00c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b00db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aff1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aff340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aff660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aff7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aff980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4affb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4affda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4afe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2af8e4b143e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2af8e4b143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b14760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b148f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b14a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b14c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b14da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b121b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b12340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b124d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b12660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b127f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b12980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b12b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b12da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2af8e4b073e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2af8e4b073e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b07760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b078f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b07a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b07c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b07da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b06020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b061b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b06340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b064d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b06660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b067f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b06980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b06b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b06da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2af8e4aec3f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2af8e4aec3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aec770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aec900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aeca90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aecc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aecdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aeb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aeb1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aeb340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aeb4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aeb660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aeb7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aeb980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aebb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aebda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2af8e4acccc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2af8e4acccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4acb410"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4acb5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4acb730"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4acb8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4acba50"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4acbbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4acbd70"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aca340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4acaa80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4acac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2af8e4ab7020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2af8e4ab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ab73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ab7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ab76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ab7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ab79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ab7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ab7d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ab6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ab61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ab6340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ab64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ab6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ab67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ab6a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ab6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2af8e4ada020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2af8e4ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ada3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ada530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ada6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ada850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ada9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4adab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4adad00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ad9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ad91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ad9340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ad94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ad9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ad97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ad9a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ad9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2af8e4b113e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2af8e4b113e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b11760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b118f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b11a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b11c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b11da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b10020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b101b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b10340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b104d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b10660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b107f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b10980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b10b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b10da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2af8e4af23e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2af8e4af23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4af2760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4af28f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4af2a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4af2c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4af2da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4af1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4af11b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4af1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4af14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4af1660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4af17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4af1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4af1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4af1da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4af0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af8e4a8ecc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af8e4a8ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a8d230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a8d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a8d550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a8d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a8d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a8da00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a8db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a8dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a8c020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a8c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a8c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a8c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a8c760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a8c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af8e4aaccc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af8e4aaccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aab230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aab550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aaba00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aabb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aabd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aaa020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aaa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aaa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aaa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aaa760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aaa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2af8e4adf020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2af8e4adf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4adf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4adf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4adf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4adf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4adf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4adfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4adfd00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ade020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ade1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ade340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ade4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ade660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ade7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4adea80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4adec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2af8e4aa8cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2af8e4aa8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aa70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aa7230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aa73c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aa7550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aa76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aa7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aa7a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aa7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aa7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aa6020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aa61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aa6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aa64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aa6760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aa68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2af8e4ac5020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2af8e4ac5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ac53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ac5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ac56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ac5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ac59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ac5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ac5d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ac4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ac41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ac4340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ac44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ac4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ac47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ac4a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ac4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2af8e4ae5020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2af8e4ae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ae53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ae5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ae56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ae5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ae59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ae5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ae5d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ae4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ae41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ae4340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ae44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ae4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ae47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ae4a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ae4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2af8e4ad4020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2af8e4ad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ad43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ad4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ad46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ad4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ad49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ad4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ad4d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ad3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ad31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ad3340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ad34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ad3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ad37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ad3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ad3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2af8e4aee3f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2af8e4aee3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aee770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aee900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aeea90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aeec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aeedb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aed1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aed340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aed4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aed660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aed7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aed980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aedb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aedda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af8e4a9ae10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af8e4a9ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a971c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a97350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a974e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a97670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a97800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a97990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a97b20"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a97cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a97e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a96020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a96340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a96760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af8e4a84cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af8e4a84cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ab50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ab5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ab53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ab5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ab56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ab5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ab5a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ab5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ab5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ab4020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ab41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ab4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ab44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ab4760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ab48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2af8e4aa1cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2af8e4aa1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aa00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aa0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aa03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aa0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aa06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aa0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aa0a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aa0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aa0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a9f020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a9f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a9f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a9f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a9f760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a9f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2af8e4abf020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2af8e4abf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4abf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4abf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4abf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4abf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4abf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4abfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4abfd00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4abe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4abe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4abe340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4abe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4abe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4abe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4abea80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4abec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2af8e4aea3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2af8e4aea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aea770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aea900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aeaa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aeac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aeadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b1d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b1d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b1d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b1d660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b1d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b1d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b1db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b1dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2af8e4b183e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2af8e4b183e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b18760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b188f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b18a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b18c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b18da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b171b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b17340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b174d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b17660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b177f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b17980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b17b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b17da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2af8e4b0b3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2af8e4b0b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b0b760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b0b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b0ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b0bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b0bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b0a1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b0a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b0a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b0a660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b0a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b0a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b0ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b0ada0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2af8e4abb020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2af8e4abb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4abb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4abb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4abb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4abb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4abb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4abbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4abbd00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aba340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4abaa80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4abac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2af8e4b1c3f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2af8e4b1c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b1c770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b1c900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b1ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b1cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b1cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b1b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b1b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b1b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b1b660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b1b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b1b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b1bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b1bda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af8e4a92cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af8e4a92cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a910a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a91230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a913c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a91550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a916e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a91870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a91a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a91b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a91d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a90020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a90340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a90760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af8e4ab0cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af8e4ab0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aaf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aaf230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aaf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aaf550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aaf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aaf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aafa00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aafb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aafd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aae020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aae760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2af8e4acecc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2af8e4acecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4acd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4acd230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4acd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4acd550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4acd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4acd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4acda00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4acdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4acdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4acc020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4acc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4acc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4acc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4acc760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4acc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2af8e4af03f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2af8e4af03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4af0770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4af0900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4af0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4af0c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4af0db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aef1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aef340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aef4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aef660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aef7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aef980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aefb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aefda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2af8e4b0f3e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2af8e4b0f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b0f760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b0f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b0fa80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b0fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b0fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b0e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b0e1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b0e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b0e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b0e660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b0e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b0e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b0eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b0eda0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2af8e4ac9020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2af8e4ac9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ac93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ac9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ac96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ac9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ac99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ac9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ac9d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ac8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ac81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ac8340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ac84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ac8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ac87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ac8a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ac8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2af8e4ae9020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2af8e4ae9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ae93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ae9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ae96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ae9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ae99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ae9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ae9d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ae8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ae81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ae8340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ae84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ae8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ae87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ae8a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ae8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2af8e4ad8020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2af8e4ad8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ad83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ad8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ad86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ad8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ad89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ad8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ad8d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ad7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ad71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ad7340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ad74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ad7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ad77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ad7a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ad7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af8e4a8ccc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af8e4a8ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a8b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a8b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a8b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a8b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a8b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a8b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a8ba00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a8bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a8bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a8a020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a8a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a8a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a8a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a8a760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a8a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2af8e4add020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2af8e4add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4add3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4add530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4add6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4add850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4add9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4addb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4addd00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4adc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4adc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4adc340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4adc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4adc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4adc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4adca80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4adcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af8e4a88cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af8e4a88cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a870a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a87230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a873c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a87550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a876e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a87870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a87a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a87b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a87d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a86020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a86340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a86760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2af8e4aa6cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2af8e4aa6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4aa50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4aa5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4aa53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4aa5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4aa56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4aa5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4aa5a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4aa5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4aa5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4aa4020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4aa41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4aa4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4aa44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4aa4760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4aa48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2af8e4ac3020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2af8e4ac3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ac33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ac3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ac36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ac3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ac39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ac3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ac3d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ac2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ac21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ac2340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ac24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ac2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ac27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ac2a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ac2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2af8e4ae3020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2af8e4ae3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ae33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ae3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ae36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ae3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ae39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ae3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ae3d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ae2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ae21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ae2340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ae24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ae2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ae27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ae2a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ae2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2af8e4ad2020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2af8e4ad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ad23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ad2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ad26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ad2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ad29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ad2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ad2d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ad1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ad11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ad1340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ad14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ad1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ad17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ad1a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ad1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af8e4a96cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af8e4a96cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a950a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a95230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a953c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a95550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a956e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a95870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a95a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a95b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a95d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a94020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a94340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a94760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af8e4ab4cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af8e4ab4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ab30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ab3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ab33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ab3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ab36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ab3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ab3a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ab3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ab3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ab2020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ab21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ab2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ab24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ab2760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ab28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2af8e4a9fcc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2af8e4a9fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4a9e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4a9e230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4a9e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4a9e550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4a9e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4a9e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4a9ea00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4a9eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4a9ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4a9d020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4a9d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4a9d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4a9d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4a9d760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4a9d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2af8e4abd020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2af8e4abd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4abd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4abd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4abd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4abd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4abd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4abdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4abdd00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4abc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4abc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4abc340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4abc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4abc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4abc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4abca80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4abcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2af8e4af83d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2af8e4af83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4af8750"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4af88e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4af8a70"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4af8c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4af8d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4af7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4af71b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4af7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4af74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4af7660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4af77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4af7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4af7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4af7da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4af6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2af8e4b163e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2af8e4b163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b16760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b168f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b16a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b16c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b16da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b15020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b151b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b15340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b154d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b15660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b157f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b15980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b15b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b15da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2af8e4afa3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2af8e4afa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4afa770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4afa900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4afaa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4afac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4afadb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4af9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4af91b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4af9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4af94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4af9660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4af97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4af9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4af9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4af9da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4af8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2af8e4ab9020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2af8e4ab9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ab93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ab9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ab96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ab9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ab99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ab9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ab9d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ab8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ab81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ab8340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ab84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ab8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ab87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ab8a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ab8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2af8e4b093e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2af8e4b093e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b09760"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b098f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b09a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b09c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b09da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b08020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b081b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b08340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b084d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b08660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b087f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b08980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b08b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b08da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2af8e4b373f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2af8e4b373f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b37770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b37900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b37a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b37c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b37db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b36020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b361b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b36340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b364d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b36660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b367f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b36980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b36b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b36da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2af8e4b02060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2af8e4b02060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b027e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b02970"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b02b00"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b02c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b02e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b011b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b01340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b014d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b01660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b017f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b01980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b01b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b01da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b413f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b413f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b41770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b41900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b41a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b41c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b41db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b40020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b401b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b40340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b404d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b40660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b407f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b40980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b40b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b40da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b3de00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b3de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b3c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b3c350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b3c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b3c670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b3c800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b3c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b3cb20"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b3ccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b3ce40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b3b020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b3b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b3b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b3b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b3b760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b3b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b38740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b38740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b38ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b38c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b38de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b6d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b6d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b6d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b6d4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b6d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b6d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b6d980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b6db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b6dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b6de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b6c120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b6c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b69100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b69100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b69480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b69610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b697a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b69930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b69ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b69c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b69de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b68020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b68340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b68660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b68a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b68c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b64d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b64d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b630e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b63270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b63400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b63590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b63720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b638b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b63a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b63bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b63d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b62020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b62340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b62760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b5f740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b5f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b5fac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b5fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b5fde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b5e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b5e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b5e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b5e4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b5e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b5e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b5e980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b5eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b5eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b5ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b5d120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b5d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b5a100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b5a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b5a480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b5a610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b5a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b5a930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b5aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b5ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b5ade0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b59020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b59340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b59660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b59a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b59c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b56d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b56d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b550e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b55270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b55400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b55590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b55720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b55a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b55bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b55d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b54020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b54340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b54760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b87740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b87740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b87ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b87c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b87de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b86020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b86340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b864d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b86660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b867f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b86980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b86b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b86ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b86e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b85120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b82100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b82100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b82480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b82610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b827a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b82930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b82ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b82c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b82de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b81020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b81340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b81660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b81a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b81c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b7ed10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b7ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b7d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b7d270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b7d400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b7d590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b7d720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b7d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b7da40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b7dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b7dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b7c020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b7c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b7c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b7c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b7c760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b7c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b79740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b79740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b79ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b79c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b79de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b77020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b771b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b774d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b77660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b777f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b77980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b77b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b77ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b77e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b76120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b73260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b73260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b735e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b73770"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b73900"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b73a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b73c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b73db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b72020"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b72340"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b724d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b72660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b727f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b72980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b72c10"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b72da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b6fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b6fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b6e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b6e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b6e400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b6e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b6e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b6e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b6ea40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b6ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b6ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ba3020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ba31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ba3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ba34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ba3760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ba38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4ba0740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4ba0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ba0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ba0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ba0de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b9f4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b9f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b9f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b9f980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b9fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b9fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b9fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b9e120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b9b100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b9b480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b9b610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b9b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b9b930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b9bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b9bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b9bde0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b9a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b9a340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b9a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b9a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b9a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b9aa80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b9ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b97d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b97d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b960e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b96270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b96400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b96590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b96720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b96a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b96bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b96d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b95020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b95340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b95760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b92740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b92740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b92ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b92c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b92de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b91020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b91340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b914d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b91660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b91980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b91b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b91ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b91e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b90120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b8d100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b8d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4b8d480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4b8d610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4b8d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4b8d930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4b8dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4b8dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4b8dde0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4b8c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4b8c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4b8c340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4b8c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4b8c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4b8c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4b8ca80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4b8cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4b89d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4b89d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bbd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bbd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bbd400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bbd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bbd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bbd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bbda40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bbdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bbdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bbc020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bbc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bbc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bbc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bbc760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bbc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bb9740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bb9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bb9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bb9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bb9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bb8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bb81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bb8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bb84d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bb8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bb87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bb8980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bb8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bb8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bb8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bb7120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bb72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bb4100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bb4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bb4480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bb4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bb47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bb4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bb4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bb4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bb4de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bb3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bb31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bb3340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bb34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bb3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bb37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bb3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bb3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bb0d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bb0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4baf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4baf270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4baf400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4baf590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4baf720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4baf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bafa40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bafbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bafd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bae020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bae760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bab740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4babac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4babc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4babde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4baa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4baa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4baa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4baa4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4baa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4baa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4baa980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4baab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4baaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4baae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ba9120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ba92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4ba63f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4ba63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ba6770"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ba6900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4ba6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ba6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ba6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4ba5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ba51b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ba5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4ba54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4ba5660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ba57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4ba5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4ba5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4ba5da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ba4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bd9e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bd9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bd81c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bd8350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bd84e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bd8670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bd8800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bd8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bd8b20"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bd8cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bd8e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bd7020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bd71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bd7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bd74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bd7760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bd78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bd4740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bd4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bd4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bd4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bd4de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bd3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bd31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bd3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bd34d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bd3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bd37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bd3980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bd3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bd3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bd3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bd2120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bd22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bce100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bce480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bce610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bce7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bce930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bceac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bcec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bcede0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bcd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bcd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bcd340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bcd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bcd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bcd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bcda80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bcdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bcad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bcad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bc90e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bc9270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bc9400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bc9590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bc9720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bc98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bc9a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bc9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bc9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bc8020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bc81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bc8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bc84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bc8760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bc88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bc5740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bc5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bc5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bc5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bc5de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bc4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bc41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bc4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bc44d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bc4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bc47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bc4980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bc4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bc4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bc4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bc3120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bc32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bc0100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bc0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bc0480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bc0610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bc07a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bc0930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bc0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bc0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bc0de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bbf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bbf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bbf340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bbf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bbf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bbf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bbfa80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bbfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bf4d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bf4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bf30e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bf3270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bf3400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bf3590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bf3720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bf38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bf3a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bf3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bf3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bf2020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bf21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bf2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bf24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bf2760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bf28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bef740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4befac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4befc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4befde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bee4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bee980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4beeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4beeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4beee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bed120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bea100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bea480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bea610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bea930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4beaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4beac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4beade0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4be9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4be91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4be9340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4be94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4be9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4be97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4be9a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4be9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4be6d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4be6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4be40e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4be4270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4be4400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4be4590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4be4720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4be48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4be4a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4be4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4be4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4be3020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4be31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4be3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4be34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4be3760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4be38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4be0740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4be0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4be0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4be0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4be0de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bdf020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bdf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bdf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bdf4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bdf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bdf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bdf980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bdfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bdfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bdfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bde120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bde2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bdb100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bdb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bdb480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bdb610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bdb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bdb930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bdbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bdbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bdbde0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c12020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c12340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c12660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c12a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c12c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c0fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c0fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c0e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c0e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c0e400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c0e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c0e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c0e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c0ea40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c0ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c0ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c0d020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c0d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c0d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c0d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c0d760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c0d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c0a740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c0a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c0aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c0ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c0ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c09020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c094d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c09660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c09980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c09b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c09ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c09e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c08120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c05100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c05100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c05480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c05610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c057a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c05930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c05ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c05c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c05de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c04020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c04340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c04660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c04a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c04c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c01d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c01d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c000e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c00270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c00400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c00590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c00720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c008b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c00a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c00bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c00d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bff020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bff760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bfc740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bfc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bfcac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bfcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bfcde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bfb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bfb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bfb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bfb4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4bfb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4bfb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4bfb980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4bfbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4bfbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4bfbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4bfa120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4bfa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4bf7100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4bf7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4bf7480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4bf7610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4bf77a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4bf7930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4bf7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4bf7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4bf7de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c2d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c2d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c2d340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c2d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c2d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c2d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c2da80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c2dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c2ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c2ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c290e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c29270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c29400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c29590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c29720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c29a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c29bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c29d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c28020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c28340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c28760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c25740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c25740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c25ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c25c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c25de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c24020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c241b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c24340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c244d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c24660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c247f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c24980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c24b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c24ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c24e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c23120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c20100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c20100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c20480"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c20610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c207a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c20930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c20ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c20c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c20de0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c1f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c1f340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c1f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c1f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c1f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c1fa80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c1cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c1cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c1b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c1b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c1b400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c1b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c1b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c1b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c1ba40"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c1bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c1bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c1a020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c1a760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af8e4c17740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af8e4c17740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4c17ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4c17c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4c17de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4c16020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4c161b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4c16340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4c164d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4c16660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4c167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4c16980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4c16b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4c16ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4c16e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4c15120"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4c152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e4cb49a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e4cb49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e4cb17e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4caf1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4cb1ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4caf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2af8e4cae9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af8e4cae9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e4cab810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4caa1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4cabcd0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4caa670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af8e4cd4c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e4cd4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4cd2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e4cd21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e4cd2340"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cd24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e4cd2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4cd27f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e4cd2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4cd2b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4cd2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e4cd2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e4cd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e4ca7b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e4ca7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e4ca69b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e4cd4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e4ca6e70"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e4cd4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2af8e4cb3970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e4cb3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e4cb3cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e4cb3e80"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e4cce030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e4cce1c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e4cce350"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cce4e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e4cce670"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4ccecb0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cce800"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e4cce990"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4cceb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2af8e4cc2910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2af8e4cc2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cc2c90"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cc2e20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cc8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cc81b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cc8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cc84d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cc8660"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e4ccdc40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4ccdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4cca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2af8e4cc8b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2af8e4cc8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cc7020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cc71b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cc7340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cc74d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cc7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cc77f0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cc7980"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cc7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2af8e4cca2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e4cca2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e4cca620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e4cca7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e4cca940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e4ccaad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e4ccac60"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ccadf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e4cc9020"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4cc9660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cc91b0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e4cc9340"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4cc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2af8e4cc7e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2af8e4cc7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cc11e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cc1370"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cc1500"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cc1690"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cc1820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cc19b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cc1b40"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cc1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2af8e4ce1360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2af8e4ce1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ce16e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ce1870"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ce1a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4ce1b90"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ce1d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4ce0020"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ce01b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4ce0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2af8e4ce06a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2af8e4ce06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4ce0a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4ce0bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4ce0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cdf020"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cdf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cdf340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cdf4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cdf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2af8e4cdec40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4cdec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4cdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2af8e4cdf9c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2af8e4cdf9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cdfd40"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cde020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cde1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cde340"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cde4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cde660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cde7f0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cde980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e4d06930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e4d06930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4d06cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4d06e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4d05020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4d051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4d05340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4d054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4d05660"/>
        <function-ref name="get" scoped="" ref="0x2af8e4d057f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4d05980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4d05b10"/>
        <function-ref name="set" scoped="" ref="0x2af8e4d05ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4d05e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4d04020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4d042b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4d04440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e4cdb710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e4cdb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cdba90"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cdbc20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cdbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4d06020"/>
        <function-ref name="get" scoped="" ref="0x2af8e4d061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4d06340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4d064d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4d06660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e4d01480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e4d01480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4d01800"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4d01990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4d01b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4d01cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4d01e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4d00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4d001b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e4d00340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4d004d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4d00660"/>
        <function-ref name="set" scoped="" ref="0x2af8e4d007f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4d00980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4d00b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4d00da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e4d021d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e4d021d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4d02550"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4d026e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4d02870"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4d02a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4d02b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4d02d20"/>
        <function-ref name="set" scoped="" ref="0x2af8e4d01020"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4d011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e4cfc020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e4cfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cfc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cfc530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e4cfc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cfc850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cfc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e4cfcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cfcd00"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cfb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e4cfb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e4cfb340"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cfb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e4cfb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e4cfb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e4cfba80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cfbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e4cfed70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e4cfed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e4cfd180"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e4cfd310"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e4cfd4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e4cfd630"/>
        <function-ref name="get" scoped="" ref="0x2af8e4cfd7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e4cfd950"/>
        <function-ref name="set" scoped="" ref="0x2af8e4cfdae0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e4cfdc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e6142c70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e6142c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e6141020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e61411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e613cd70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e613cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e613b180"/>
        <function-ref name="configure" scoped="" ref="0x2af8e613b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af8e613c5d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e613c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e613c950"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e613cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e6142020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e6142020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e61423a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e6142530"/>
        <function-ref name="request" scoped="" ref="0x2af8e61426c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e6142850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e61429e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af8e6141be0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e6141be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e6140020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e61401b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e6140340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e61404d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e6140660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e61407f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e6140980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e6140b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e6140ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e6140e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e613f020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e613f1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e613f340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e613f5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e613f760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e613f8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e613fa80"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e613fc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e613fda0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e613e020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e613e1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e613e340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e613e4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e613e660"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e613e7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e613eb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e613ed10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e613d020"/>
        <function-ref name="tx" scoped="" ref="0x2af8e613d1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e613d340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e613d4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e613d660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e613d7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e613d980"/>
        <function-ref name="rx" scoped="" ref="0x2af8e613db10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e613dca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e613de30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e613c020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e613c1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e613c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e6141440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6141440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e61417c0"/>
        <function-ref name="userId" scoped="" ref="0x2af8e6141950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e4d122c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4d122c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e4d12640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e4d127d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e4d118a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4d118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e4d11c20"/>
        <function-ref name="configure" scoped="" ref="0x2af8e4d11db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af8e4d141d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af8e4d141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e4d14550"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e4d146e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e4d13020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e4d13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4d133a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e4d13530"/>
        <function-ref name="request" scoped="" ref="0x2af8e4d136c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e4d13850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4d139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e4d12ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4d12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e4d12e50"/>
        <function-ref name="userId" scoped="" ref="0x2af8e4d11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af8e4d37a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4d37a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e4d37e10"/>
        <function-ref name="userId" scoped="" ref="0x2af8e4d35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af8e4d4ab60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af8e4d4ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e4d49020"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e4d491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2af8e4d37480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af8e4d37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4d37800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af8e4d495b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e4d495b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e4d49950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2af8e4d49c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2af8e4d49c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e4d37020"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e4d371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e4db2020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e4db2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e4db23c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e4db2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e4db1cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e4db1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e4db00a0"/>
        <function-ref name="configure" scoped="" ref="0x2af8e4db0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af8e4db27a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e4db27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4db2b20"/>
        <function-ref name="requested" scoped="" ref="0x2af8e4db2cb0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e4db2e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4db1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e4db11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e4db3210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e4db3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4db35b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e4db3740"/>
        <function-ref name="request" scoped="" ref="0x2af8e4db38d0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e4db3a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4db3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e4db1400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4db1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e4db1780"/>
        <function-ref name="userId" scoped="" ref="0x2af8e4db1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e64a0ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e64a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e649f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af8e649f330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af8e649f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af8e649f6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af8e649f840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af8e649f9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af8e649fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e654b3a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e654b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e654b740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e654b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e6548210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e6548210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e65485b0"/>
        <function-ref name="configure" scoped="" ref="0x2af8e6548740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af8e65489d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af8e65489d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af8e6548d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af8e6547020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af8e65471b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af8e6547340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af8e654bb20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e654bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e654a020"/>
        <function-ref name="requested" scoped="" ref="0x2af8e654a1b0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e654a340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e654a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e654a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e6547590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e6547590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e6547910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e6547aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e6547c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e6547dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e6546020"/>
        <function-ref name="get" scoped="" ref="0x2af8e65461b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e6546340"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e6546980"/>
        <function-ref name="set" scoped="" ref="0x2af8e6546660"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e65464d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e65467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e649d540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e649d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e649d8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e649da70"/>
        <function-ref name="request" scoped="" ref="0x2af8e649dc00"/>
        <function-ref name="granted" scoped="" ref="0x2af8e649dd90"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e654b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e654a8b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e654a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e654ac30"/>
        <function-ref name="userId" scoped="" ref="0x2af8e654adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2af8e6546c50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2af8e6546c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e6545020"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e65451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2af8e4dd5400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af8e4dd5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2af8e4dd5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2af8e4dd59d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e4dd59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4dd5d50"/>
        <function-ref name="requested" scoped="" ref="0x2af8e4dd4020"/>
        <function-ref name="granted" scoped="" ref="0x2af8e4dd41b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4dd4340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e4dd44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2af8e4dacb20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e4dacb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e4dd5020"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4dd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af8e4dd4720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e4dd4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e4dd4aa0"/>
        <function-ref name="userId" scoped="" ref="0x2af8e4dd4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2af8e6516b00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af8e6516b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2af8e6516e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2af8e65150f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e65150f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e6515470"/>
        <function-ref name="requested" scoped="" ref="0x2af8e6515600"/>
        <function-ref name="granted" scoped="" ref="0x2af8e6515790"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e6515920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e6515ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2af8e65163a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af8e65163a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e6516720"/>
        <function-ref name="stop" scoped="" ref="0x2af8e65168b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af8e6515d00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6515d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e65130a0"/>
        <function-ref name="userId" scoped="" ref="0x2af8e6513230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2af8e4df5080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af8e4df5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e4df5400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2af8e4df56f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e4df56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e4df5a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e4df5c00"/>
        <function-ref name="request" scoped="" ref="0x2af8e4df5d90"/>
        <function-ref name="granted" scoped="" ref="0x2af8e4df4020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e4df41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e4df87a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e4df87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e4df8b20"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4df8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2af8e4e28430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af8e4e28430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af8e4e287b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e4e27780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4e27780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4e27b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2af8e4e27de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af8e4e27de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af8e4e24180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2af8e4e1d020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af8e4e1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af8e4e1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2af8e4e1d740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2af8e4e1d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e4e1dac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e4e1dc50"/>
        <function-ref name="start" scoped="" ref="0x2af8e4e1dde0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4e1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e4e15320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e15320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e4e156a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e4e15830"/>
        <function-ref name="start" scoped="" ref="0x2af8e4e159c0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4e15b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e4e14370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e4e14370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4e146f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4e14880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4e14a10"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4e14ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4e14d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e4e12020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e4e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4e123a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e4e12530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4e126c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4e12850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e4e129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e4e13530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e4e13530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4e138b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e4e47490" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e4e47490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e4e47810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e4e479a0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e4e47b30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e4e47cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e4e47e50"/>
        <function-ref name="get" scoped="" ref="0x2af8e4e40020"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e4e401b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4e407f0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4e40340"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e4e404d0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4e40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af8e4e419f0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e4e419f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e4e41d70"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e4e47020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e4e471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e4e12c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e4e12c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e4e110a0"/>
        <function-ref name="source" scoped="" ref="0x2af8e4e11230"/>
        <function-ref name="address" scoped="" ref="0x2af8e4e113c0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e4e11550"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e4e116e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e4e11870"/>
        <function-ref name="type" scoped="" ref="0x2af8e4e11a00"/>
        <function-ref name="setType" scoped="" ref="0x2af8e4e11b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e4e11d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e4e48020"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e4e481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e4ea3d90" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e4ea3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4ea2180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4ea2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4ea24a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4ea2630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4ea27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e4ea2a50" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e4ea2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4ea2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e4e3db40" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e4e3db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4ea6020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4ea61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4ea6340"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4ea64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4ea6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e4ea4720" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e4ea4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e4ea4aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e4ea4c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4ea4dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4ea3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e4ea31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e4ea69e0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e4ea69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4ea6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af8e4ea3400" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e4ea3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e4ea3780"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e4ea3910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e4ea3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e4ea5020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e4ea5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e4ea53a0"/>
        <function-ref name="source" scoped="" ref="0x2af8e4ea5530"/>
        <function-ref name="address" scoped="" ref="0x2af8e4ea56c0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e4ea5850"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e4ea59e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e4ea5b70"/>
        <function-ref name="type" scoped="" ref="0x2af8e4ea5d00"/>
        <function-ref name="setType" scoped="" ref="0x2af8e4ea4020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e4ea41b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e4ea4340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e4ea44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e4e9d4e0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e9d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e4e9d860"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e4e9d9f0"/>
        <function-ref name="start" scoped="" ref="0x2af8e4e9db80"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4e9dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e4e9b020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e4e9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af8e45ccd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4e9b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4e9b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4e9b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4e9b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4e9b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e4ea0e60" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4ea0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4e9d210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e4e9c4c0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e4e9c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af8e45ccd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4e9c840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e4e99940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e4e99940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e4e99cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e4e99e50"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e4e94020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e4e941b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e4e94340"/>
        <function-ref name="get" scoped="" ref="0x2af8e4e944d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e4e94660"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4e94ca0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4e947f0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e4e94980"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4e94b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2af8e4e99020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af8e4e99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af8e45ccd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af8e4e993a0"/>
        <function-ref name="offset" scoped="" ref="0x2af8e4e99530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af8e4e996c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e4e8b2f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e4e8b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e4e8b670"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e4e8b800"/>
        <function-ref name="start" scoped="" ref="0x2af8e4e8b990"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4e8bb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2af8e4eefe40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2af8e4eefe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e4f321e0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e4f32370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2af8e4ebc060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2af8e4ebc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e4ebc3e0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e4ebc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2af8e4ee3d10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2af8e4ee3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e4ee10e0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e4ee1270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e4e8ec30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e4e8ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e4e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2af8e4eb9c50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2af8e4eb9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2af8e4ebb020"/>
        <function-ref name="flush" scoped="" ref="0x2af8e4ebb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2af8e4ef2400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2af8e4ef2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e4ef2780"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e4ef2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2af8e4ebd8e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2af8e4ebd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2af8e4ebdc60"/>
        <function-ref name="resetSend" scoped="" ref="0x2af8e4ebddf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2af8e4eca020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2af8e4eca1b0"/>
        <function-ref name="putData" scoped="" ref="0x2af8e4eca340"/>
        <function-ref name="putDone" scoped="" ref="0x2af8e4eca4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2af8e4eca660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e4eca8e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e4eca8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e4ecac60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e4ecadf0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e4ec2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e4ec21b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e4ec2340"/>
        <function-ref name="get" scoped="" ref="0x2af8e4ec24d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e4ec2660"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4ec2ca0"/>
        <function-ref name="set" scoped="" ref="0x2af8e4ec27f0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e4ec2980"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4ec2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2af8e4f2f0c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2af8e4f2f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e4f2f440"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e4f2f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2af8e4ec7130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2af8e4ec7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2af8e4ec74b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2af8e4ec7640"/>
        <function-ref name="startSend" scoped="" ref="0x2af8e4ec77d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2af8e4ec7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2af8e4ec35c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af8e4ec35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2af8e4ec3940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2af8e4ec3ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2af8e4ec3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2af8e4fc1c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2af8e4fc1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e4fc0020"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e4fc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e4fc5830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e4fc5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af8e45ccd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e4fc5bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e4fc5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e4fc4020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e4fc41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e4fc4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2af8e4fc0480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2af8e4fc0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e4fc0800"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e4fc0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e4fc5110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e4fc5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af8e45ccd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e4fc54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2af8e4fc4760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2af8e4fc4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af8e45ccd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af8e4fc4b00"/>
        <function-ref name="offset" scoped="" ref="0x2af8e4fc4c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af8e4fc4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e4fc2590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e4fc2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e4fc2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e4fc2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e4fc2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e4fc2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e4fc1020"/>
        <function-ref name="get" scoped="" ref="0x2af8e4fc11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e4fc1340"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4fc1980"/>
        <function-ref name="set" scoped="" ref="0x2af8e4fc1660"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4fc14d0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e4fc17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2af8e4fc39d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2af8e4fc39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2af8e4fc3d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2af8e4fc2020"/>
        <function-ref name="startSend" scoped="" ref="0x2af8e4fc21b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2af8e4fc2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2af8e4fc30e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af8e4fc30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2af8e4fc3460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2af8e4fc35f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2af8e4fc3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2af8e5002ca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af8e5002ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e50010a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af8e5001230"/>
        <function-ref name="receive" scoped="" ref="0x2af8e50013c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af8e5001550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af8e50016e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af8e5001870"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5001a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2af8e5005b70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2af8e5005b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2af8e5002020"/>
        <function-ref name="resetSend" scoped="" ref="0x2af8e50021b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2af8e5002340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2af8e50024d0"/>
        <function-ref name="putData" scoped="" ref="0x2af8e5002660"/>
        <function-ref name="putDone" scoped="" ref="0x2af8e50027f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2af8e5002980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e5001c80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e5001c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e50000a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e5000230"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e50003c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e5000550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e50006e0"/>
        <function-ref name="get" scoped="" ref="0x2af8e5000870"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e5000a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e4fff1b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5000b90"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e5000d20"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e4fff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2af8e50286c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2af8e50286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af8e5028a40"/>
        <function-ref name="offset" scoped="" ref="0x2af8e5028bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af8e5028d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e5015020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e5015020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e50153a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e5015530"/>
        <function-ref name="start" scoped="" ref="0x2af8e50156c0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5015850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e5014050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5014050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e50143d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5014560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e50146f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5014880"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5014a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af8e5013df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af8e5013df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e50121c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5012450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5012450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e50127d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5012960"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5012af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5012c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5012e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af8e504d9e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e504d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e500d020"/>
        <function-ref name="clear" scoped="" ref="0x2af8e500d750"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e500e890"/>
        <function-ref name="set" scoped="" ref="0x2af8e500de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af8e50418a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e50418a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af8e5041c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af8e5041db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af8e5047020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af8e50471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5013210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5013210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5013590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af8e5010800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5010800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5010b80"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5010d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e500f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5011120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5011120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e50114a0"/>
        <function-ref name="source" scoped="" ref="0x2af8e5011630"/>
        <function-ref name="address" scoped="" ref="0x2af8e50117c0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5011950"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5011ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5011c70"/>
        <function-ref name="type" scoped="" ref="0x2af8e5011e00"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5010020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e50101b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5010340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e50104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af8e504caf0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e504caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e504a0d0"/>
        <function-ref name="clear" scoped="" ref="0x2af8e504a800"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e504b970"/>
        <function-ref name="set" scoped="" ref="0x2af8e5048020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e5035680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e5035680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e5035a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e5035b90"/>
        <function-ref name="start" scoped="" ref="0x2af8e5035d20"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5034020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af8e5064d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5064d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e506c0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e506c270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e506c400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e506c590"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e506c720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e506c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2af8e5061500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2af8e5061500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2af8e5061980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e502f760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e502f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e502fae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e502fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e502fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e502e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e502e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e50347f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e50347f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5034b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5034d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5033020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e50331b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5033340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af8e5031880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af8e5031880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5031c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af8e506f970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e506f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e506fcf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e506fe80"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e502d030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e502d1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e502d350"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e502d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af8e506cbb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e506cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af8e5063020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af8e50631b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af8e5063340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af8e50634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5033b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5033b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5031020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af8e502d810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e502d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e502db90"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e502dd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e506e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af8e5063790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af8e5063790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af8e5063b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2af8e5063ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2af8e5063e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af8e5062020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af8e50621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5030020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5030020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e50303a0"/>
        <function-ref name="source" scoped="" ref="0x2af8e5030530"/>
        <function-ref name="address" scoped="" ref="0x2af8e50306c0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5030850"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e50309e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5030b70"/>
        <function-ref name="type" scoped="" ref="0x2af8e5030d00"/>
        <function-ref name="setType" scoped="" ref="0x2af8e502f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e502f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e502f340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e502f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af8e506ba80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e506ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af8e506be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e505a340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e505a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e505a6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e505a850"/>
        <function-ref name="start" scoped="" ref="0x2af8e505a9e0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e505ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af8e5053080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5053080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af8e5053400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af8e50522e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af8e50522e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af8e5052660"/>
        <function-ref name="setRetries" scoped="" ref="0x2af8e50527f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2af8e5052980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af8e5052b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af8e5052ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af8e5055740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5055740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e5055ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e5055c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e5055de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e5054020"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e50541b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e5054340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af8e5056350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5056350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e50566d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5056860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e50569f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5056b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5056d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af8e5053700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5053700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af8e5053a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af8e5053c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af8e5053da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af8e5052020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2af8e5058e70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2af8e5058e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5057220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af8e5054670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5054670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e50549f0"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5054b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5054d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5059430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5059430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e50597b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5059940"/>
        <function-ref name="request" scoped="" ref="0x2af8e5059ad0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5059c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5059df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2af8e5058160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2af8e5058160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e50584e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5058670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5058800"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5058990"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5058b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af8e5057560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af8e5057560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e50578e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5057a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5057c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5057d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5056020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af8e50550f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e50550f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5055470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e50519f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e50519f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e5051d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e504e020"/>
        <function-ref name="start" scoped="" ref="0x2af8e504e1b0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e504e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af8e5097990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5097990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e5097d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e5096020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e50961b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e5096340"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e50964d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e5096660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e504e600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e504e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e504e980"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e504eb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e504eca0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e504ee30"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5097020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5097300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5097300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5097680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e5092690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e5092690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e5092a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e5092ba0"/>
        <function-ref name="start" scoped="" ref="0x2af8e5092d30"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5091020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af8e5090020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5090020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e50903a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e5090530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e50906c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e5090850"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e50909e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e5090b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2af8e5086060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2af8e5086060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e50863e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e5086570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e5086700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e5086890"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e5086a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e5086bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af8e507ee20" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e507ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e507d1c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e507d350"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e507d4e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e507d670"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e507d800"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e507d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2af8e507f2a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2af8e507f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e507f620"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e507f7b0"/>
        <function-ref name="modify" scoped="" ref="0x2af8e507f940"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e507fad0"/>
        <function-ref name="resend" scoped="" ref="0x2af8e507fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e50912e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e50912e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5091660"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e50917f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5091980"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5091b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5091ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2af8e5086e80" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af8e5086e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af8e5085220"/>
        <function-ref name="rand32" scoped="" ref="0x2af8e50853b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2af8e508e6f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2af8e508e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e508ea70"/>
        <function-ref name="stop" scoped="" ref="0x2af8e508ec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e5076430" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5076430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e50767b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5076940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5076ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2af8e50873f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af8e50873f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af8e5087770"/>
        <function-ref name="rfOff" scoped="" ref="0x2af8e5087900"/>
        <function-ref name="rxOn" scoped="" ref="0x2af8e5087a90"/>
        <function-ref name="startVReg" scoped="" ref="0x2af8e5087c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af8e5087db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af8e508e020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af8e508e1b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af8e508e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e5085670" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e5085670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e50859f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e5085b80"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e5085d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e507e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e507e1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e507e340"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e507e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e507eb10"/>
        <function-ref name="set" scoped="" ref="0x2af8e507e660"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e507e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e507e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2af8e5090e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5090e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e508f210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e508f3a0"/>
        <function-ref name="request" scoped="" ref="0x2af8e508f530"/>
        <function-ref name="granted" scoped="" ref="0x2af8e508f6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e508f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2af8e50bbbc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2af8e50bbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e507b0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e507b230"/>
        <function-ref name="isState" scoped="" ref="0x2af8e507b3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e507b550"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e507b6e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e507b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2af8e50b65d0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2af8e50b65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e50b6950"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e50b6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2af8e50b7660" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2af8e50b7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e50b79e0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e50b7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2af8e50b8730" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2af8e50b8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e50b8ab0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e50b8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2af8e50f5550" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af8e50f5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af8e50f58d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af8e50f5a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af8e50f5bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2af8e50f5d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af8e5102020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af8e51021b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af8e5102340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af8e51024d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af8e5102660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af8e51027f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af8e5102980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af8e5102b10"/>
        <function-ref name="sync" scoped="" ref="0x2af8e5102ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2af8e5101020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af8e51011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2af8e50f0890" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2af8e50f0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e50f34c0"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e50f3940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2af8e51014b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af8e51014b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af8e5101830"/>
        <function-ref name="rfOff" scoped="" ref="0x2af8e51019c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2af8e5101b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2af8e5101ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af8e5101e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af8e50f4030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af8e50f41c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af8e50f4350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5103020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5103020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e51033a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5103530"/>
        <function-ref name="request" scoped="" ref="0x2af8e51036c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5103850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e51039e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2af8e50eb1a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af8e50eb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af8e50eb520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af8e50eb6b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af8e50eb840"/>
        <function-ref name="syncDone" scoped="" ref="0x2af8e50eb9d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af8e50ebb60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af8e50ebcf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af8e50ebe80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af8e50ea030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af8e50ea1c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af8e50ea350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af8e50ea4e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af8e50ea670"/>
        <function-ref name="sync" scoped="" ref="0x2af8e50ea800"/>
        <function-ref name="getChannel" scoped="" ref="0x2af8e50eaa90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af8e50eac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2af8e510e1e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e510e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e510e560"/>
        <function-ref name="write" scoped="" ref="0x2af8e510e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2af8e50e4970" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e50e4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af8e50e4cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2af8e5128790" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2af8e5128790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5127020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e512e020"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e512e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e512e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e51274e0"/>
        <function-ref name="start" scoped="" ref="0x2af8e50e55d0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e50e5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2af8e510f020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e510f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e510f3a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e510f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2af8e5125ce0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2af8e5125ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e51240a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5124230"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e51243c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5124550"/>
        <function-ref name="get" scoped="" ref="0x2af8e51246e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5124870"/>
        <function-ref name="set" scoped="" ref="0x2af8e5124a00"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5124b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2af8e50e8500" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2af8e50e8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e50e7130"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e50e75b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2af8e51482f0" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2af8e51482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5148670"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5148800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2af8e510ea80" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af8e510ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e510ee00"/>
        <function-ref name="write" scoped="" ref="0x2af8e510d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2af8e510d3c0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e510d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e510d740"/>
        <function-ref name="write" scoped="" ref="0x2af8e510d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2af8e5110cd0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5110cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e51180a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5118230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2af8e5119390" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e5119390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af8e5119710"/>
        <function-ref name="changed" scoped="" ref="0x2af8e51198a0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af8e5119a30"/>
        <function-ref name="setAddress" scoped="" ref="0x2af8e5119bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af8e51279d0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af8e51279d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5127d50"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5125020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e51251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5125340"/>
        <function-ref name="get" scoped="" ref="0x2af8e51254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5125660"/>
        <function-ref name="set" scoped="" ref="0x2af8e51257f0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5125980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2af8e510cae0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e510cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e510b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2af8e5123020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2af8e5123020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e51233a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5123530"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e51236c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5123850"/>
        <function-ref name="get" scoped="" ref="0x2af8e51239e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5123b70"/>
        <function-ref name="set" scoped="" ref="0x2af8e5123d00"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5122020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e50f2d60" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e50f2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e50ec180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2af8e510f8f0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e510f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e510fc70"/>
        <function-ref name="write" scoped="" ref="0x2af8e510fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2af8e510b440" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af8e510b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e510b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af8e510bb60" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af8e510bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5109020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e51091b0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5109340"/>
        <function-ref name="granted" scoped="" ref="0x2af8e51094d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5109660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2af8e5154880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2af8e5154880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5154c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5154d90"/>
        <function-ref name="request" scoped="" ref="0x2af8e5153020"/>
        <function-ref name="granted" scoped="" ref="0x2af8e51531b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5153340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2af8e50e9020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af8e50e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af8e50e93a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2af8e50e9530"/>
        <function-ref name="rxOn" scoped="" ref="0x2af8e50e96c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2af8e50e9850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af8e50e99e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af8e50e9b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af8e50e9d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af8e50e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2af8e51185d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af8e51185d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5118950"/>
        <function-ref name="write" scoped="" ref="0x2af8e5118ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2af8e5110420" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5110420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e51107a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5110930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2af8e510abb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af8e510abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e510c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e5153600" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e5153600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e5153980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e5153b10"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e5153ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e5153e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e5152020"/>
        <function-ref name="get" scoped="" ref="0x2af8e51521b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e5152340"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e5152980"/>
        <function-ref name="set" scoped="" ref="0x2af8e51524d0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e5152660"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e51527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2af8e514a410" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2af8e514a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e514a790"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e514a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e50ec470" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e50ec470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e50ec7f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e50ec980"/>
        <function-ref name="request" scoped="" ref="0x2af8e50ecb10"/>
        <function-ref name="granted" scoped="" ref="0x2af8e50ecca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e50ece30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2af8e5113e20" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af8e5113e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e511d1c0"/>
        <function-ref name="write" scoped="" ref="0x2af8e511d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2af8e51134a0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af8e51134a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5113920"/>
        <function-ref name="write" scoped="" ref="0x2af8e5113ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2af8e511ec00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2af8e511ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e5121020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e51211b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af8e5121340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af8e51214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2af8e5109a10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2af8e5109a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5109d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5154020"/>
        <function-ref name="request" scoped="" ref="0x2af8e51541b0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5154340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e51544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2af8e510c3b0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af8e510c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e510c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e51bb7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e51bb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e51bbb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2af8e51b8220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e51b6b30"/>
        <function-ref name="fired" scoped="" ref="0x2af8e51b7a60"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e51b64e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e51b6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e51b5020"/>
        <function-ref name="start" scoped="" ref="0x2af8e51b7090"/>
        <function-ref name="stop" scoped="" ref="0x2af8e51b75a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e51b3a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e51b3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e51b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2af8e51b22e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2af8e51b22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e52beb30"/>
        <function-ref name="fired" scoped="" ref="0x2af8e526dae0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e52be4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e52be020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e52bd020"/>
        <function-ref name="start" scoped="" ref="0x2af8e526d110"/>
        <function-ref name="stop" scoped="" ref="0x2af8e526d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e65b9180" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e65b9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e65b7b30"/>
        <function-ref name="fired" scoped="" ref="0x2af8e65b89f0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e65b74e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e65b7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e65b6020"/>
        <function-ref name="start" scoped="" ref="0x2af8e65b8020"/>
        <function-ref name="stop" scoped="" ref="0x2af8e65b8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e65ba8e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e65ba8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e65bac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e65b22a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e65b22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e65b0b30"/>
        <function-ref name="fired" scoped="" ref="0x2af8e65b1aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e65b04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e65b0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e65ae020"/>
        <function-ref name="start" scoped="" ref="0x2af8e65b10d0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e65b15e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e65b3a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e65b3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e65b3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af8e6638c10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e6638c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e6637020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e66371b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e6637340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e66374d0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6637660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af8e659c1b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e659c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e659c530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e659c6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e659c850"/>
        <function-ref name="get" scoped="" ref="0x2af8e659c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e659cb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e659cd00"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e659b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e659b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e659b340"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e659b4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e659b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af8e659b8f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e659b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e659bc70"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e659be00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e6638020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e66381b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e6638340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e66384d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e6638660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e66387f0"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e6638980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af8e51dfba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e51dfba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e51de020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e51de1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e51de340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e51de4d0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e51de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af8e51e34d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e51e34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e51e3850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e51e39e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e51e3b70"/>
        <function-ref name="get" scoped="" ref="0x2af8e51e3d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e51e2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e51e21b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e51e2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e51e24d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e51e2660"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e51e27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e51e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af8e51e0280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e51e0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e51e0600"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e51e0790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e51e0920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e51e0ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e51e0c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e51e0dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e51df020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e51df1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e51df340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af8e662ea80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e662ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e662ee00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e662d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e662d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e662d340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e662d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af8e6631020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6631020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e66313a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e6631530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e66316c0"/>
        <function-ref name="get" scoped="" ref="0x2af8e6631850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e66319e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e6631b70"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e6631d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e6630020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e66301b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e6630340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e66304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e6635da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e6635da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6632670"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6633610"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e6632020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6633ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e6632b30"/>
        <function-ref name="start" scoped="" ref="0x2af8e6634bf0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6633150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e6635510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e6635510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e6635890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af8e6630760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e6630760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e6630ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e6630c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e6630e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e662e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e662e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e662e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e662e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e662e660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e662e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e5232020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5232020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5232e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5231800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5231340"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5231cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2af8e5260950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2af8e5260950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e525f780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e525e150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e525fc40"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e525e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e522c5f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e522c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5262430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5262db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e52628f0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e52602a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e65ac5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e65ac5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e65aae50"/>
        <function-ref name="fired" scoped="" ref="0x2af8e65abe00"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e65aa800"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e65aa340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e65a9340"/>
        <function-ref name="start" scoped="" ref="0x2af8e65ab430"/>
        <function-ref name="stop" scoped="" ref="0x2af8e65ab940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af8e65a6d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af8e65a6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e65a3670"/>
        <function-ref name="fired" scoped="" ref="0x2af8e65a4550"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e65a3020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e65a4a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e65a3b30"/>
        <function-ref name="start" scoped="" ref="0x2af8e65a5b60"/>
        <function-ref name="stop" scoped="" ref="0x2af8e65a4090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e65a99b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e65a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e65a77e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e65a61b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e65a7ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e65a6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2af8e52b76a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2af8e52b76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b7a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b6020"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b6340"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b64d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2af8e52b69d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2af8e52b69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b6d50"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b5020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b5340"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b5660"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b57f0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2af8e52b5ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2af8e52b5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b4230"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b4550"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b4870"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b4a00"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2af8e52b8370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af8e52b8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b86f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b8880"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b8a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b8ba0"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b8d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b7020"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b71b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2af8e52b2380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2af8e52b2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b2700"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b2890"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b2bb0"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b2d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b1020"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b11b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2af8e52b90e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2af8e52b90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b9460"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b95f0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b9780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b9910"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b9aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b9c30"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b9dc0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2af8e52b3020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2af8e52b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b3530"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52b3850"/>
        <function-ref name="get" scoped="" ref="0x2af8e52b39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52b3b70"/>
        <function-ref name="set" scoped="" ref="0x2af8e52b3d00"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e52af930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52afcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52afe40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e52ae020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e52ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52ae660"/>
        <function-ref name="get" scoped="" ref="0x2af8e52ae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e52ae980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e52aeb10"/>
        <function-ref name="set" scoped="" ref="0x2af8e52aeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e52aee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e52ad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e52ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52ad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e52b0710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52b0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52b0c20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52b0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52af020"/>
        <function-ref name="get" scoped="" ref="0x2af8e52af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52af340"/>
        <function-ref name="set" scoped="" ref="0x2af8e52af4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e52aa480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52aa800"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52aa990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e52aab20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52aacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52aae40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e52a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52a91b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e52a9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e52a94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e52a9660"/>
        <function-ref name="set" scoped="" ref="0x2af8e52a97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e52a9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e52a9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e52a9da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e52ab1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52ab1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52ab530"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52ab9e0"/>
        <function-ref name="get" scoped="" ref="0x2af8e52abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52abd00"/>
        <function-ref name="set" scoped="" ref="0x2af8e52aa020"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e52a4020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52a43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52a4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e52a46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52a4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52a49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e52a4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52a4d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e52a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e52a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e52a3340"/>
        <function-ref name="set" scoped="" ref="0x2af8e52a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e52a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e52a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e52a3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e52a7d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52a7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52a5180"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52a5310"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52a54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52a5630"/>
        <function-ref name="get" scoped="" ref="0x2af8e52a57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52a5950"/>
        <function-ref name="set" scoped="" ref="0x2af8e52a5ae0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52a5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e52a0de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52a0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e529f180"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e529f310"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e529f4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e529f630"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e529f7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e529f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e529fae0"/>
        <function-ref name="get" scoped="" ref="0x2af8e529fc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e529fe00"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e529e020"/>
        <function-ref name="set" scoped="" ref="0x2af8e529e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e529e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e529e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e529e760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e529e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e52a1b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52a1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52a0020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52a01b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52a0340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52a04d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e52a0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52a07f0"/>
        <function-ref name="set" scoped="" ref="0x2af8e52a0980"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52a0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e529b930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e529b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e529bcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e529be40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e529a020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e529a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e529a340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e529a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e529a660"/>
        <function-ref name="get" scoped="" ref="0x2af8e529a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e529a980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e529ab10"/>
        <function-ref name="set" scoped="" ref="0x2af8e529aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e529ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e5299020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e52992b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5299440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e529c710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e529c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e529ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e529cc20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e529cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e529b020"/>
        <function-ref name="get" scoped="" ref="0x2af8e529b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e529b340"/>
        <function-ref name="set" scoped="" ref="0x2af8e529b4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e529b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e5296480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e5296480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5296800"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5296990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e5296b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5296cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5296e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e52e8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52e81b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e52e8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e52e84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e52e8660"/>
        <function-ref name="set" scoped="" ref="0x2af8e52e87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e52e8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e52e8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e52e8da0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e52971b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52971b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5297530"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52976c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5297850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52979e0"/>
        <function-ref name="get" scoped="" ref="0x2af8e5297b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5297d00"/>
        <function-ref name="set" scoped="" ref="0x2af8e5296020"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e52e4020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e52e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52e4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e52e46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52e4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52e49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e52e4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52e4d00"/>
        <function-ref name="get" scoped="" ref="0x2af8e52e3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e52e31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e52e3340"/>
        <function-ref name="set" scoped="" ref="0x2af8e52e34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e52e3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e52e37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e52e3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e52e6d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e52e6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e52e5180"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e52e5310"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e52e54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e52e5630"/>
        <function-ref name="get" scoped="" ref="0x2af8e52e57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e52e5950"/>
        <function-ref name="set" scoped="" ref="0x2af8e52e5ae0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e52e5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2af8e52cb5a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2af8e52cb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af8e52cb920"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52cbab0"/>
        <function-ref name="captured" scoped="" ref="0x2af8e52cbc40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af8e52cbdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2af8e52cf210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2af8e52cf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e52cf590"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52cf720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af8e52cf8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af8e52cfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2af8e52cfe30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af8e52cfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e52ce1e0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52ce370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af8e52ce500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af8e52ce690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2af8e530bda0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2af8e530bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e530a180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af8e530a310"/>
        <function-ref name="captured" scoped="" ref="0x2af8e530a4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e530a630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e530a7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af8e530a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af8e530c020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af8e530c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af8e530c3a0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e530c530"/>
        <function-ref name="captured" scoped="" ref="0x2af8e530c6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af8e530c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af8e530cae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e530cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e530ce60"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e530b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e530b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e530b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e530b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e530b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e530b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e530b980"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e530bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2af8e530ac20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e530ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5309020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e53091b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e5309340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e53094d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5309660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e53097f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5309980"/>
        <function-ref name="get" scoped="" ref="0x2af8e5309b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e5309ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e5309e30"/>
        <function-ref name="set" scoped="" ref="0x2af8e5308020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e53081b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e5308340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e53085d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5308760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af8e52fbc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af8e52fbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52fa020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52fa1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52fa340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52fa4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52fa660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af8e52f1bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af8e52f1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f0020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f01b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f0340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f04d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f0660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af8e52f8bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af8e52f8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f7020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f71b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f7340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f74d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f7660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af8e52f6bc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af8e52f6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f5020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f51b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f5340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f54d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f5660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af8e5301d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af8e5301d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52fc0e0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52fc270"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52fc400"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52fc590"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52fc720"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52fc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af8e52f3bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af8e52f3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f20a0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f2230"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f23c0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f2550"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f26e0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af8e52fabc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af8e52fabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f9020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f91b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f9340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f94d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f9660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af8e52f0bc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af8e52f0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52ef020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52ef1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52ef340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52ef4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52ef660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af8e52fde70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af8e52fde70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5302220"/>
        <function-ref name="fired" scoped="" ref="0x2af8e53023b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e5302540"/>
        <function-ref name="edge" scoped="" ref="0x2af8e53026d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e5302860"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e53029f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af8e52f5bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af8e52f5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f4020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f41b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f4340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f44d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f4660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af8e52fcc80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af8e52fcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52fb0a0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52fb230"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52fb3c0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52fb550"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52fb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52fb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af8e52f2c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af8e52f2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f1020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f11b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f1340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f14d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f1660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af8e52f9bc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af8e52f9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f8020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f81b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f8340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f84d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f8660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af8e52f7bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af8e52f7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f6020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f61b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f6340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f64d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f6660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af8e5302dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af8e5302dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5301180"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5301310"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53014a0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5301630"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53017c0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5301950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af8e52f4bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af8e52f4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52f3020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e52f31b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e52f3340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e52f34d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e52f3660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e52f37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af8e533ba30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af8e533ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e533bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e533a020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e533a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e533a340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e533a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e533a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af8e5331bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af8e5331bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5330020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e53301b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e5330340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e53304d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e5330660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e53307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af8e5338a30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af8e5338a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5338db0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5337020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53371b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5337340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53374d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5337660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af8e5336a30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af8e5336a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5336db0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5335020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53351b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5335340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53354d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5335660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af8e533da30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af8e533da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e533ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e533c020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e533c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e533c340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e533c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e533c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af8e5333a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af8e5333a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5332020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e53321b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e5332340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e53324d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e5332660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e53327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af8e533aa30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af8e533aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e533adb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5339020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53391b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5339340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53394d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5339660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af8e5330bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af8e5330bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e532f020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e532f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e532f340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e532f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e532f660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e532f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af8e52ee9d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af8e52ee9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e52eed50"/>
        <function-ref name="fired" scoped="" ref="0x2af8e533e020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e533e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e533e340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e533e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e533e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af8e5335a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af8e5335a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5335db0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5334020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53341b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5334340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53344d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5334660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af8e533ca30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af8e533ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e533cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e533b020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e533b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e533b340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e533b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e533b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af8e5332bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af8e5332bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5331020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e53311b0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e5331340"/>
        <function-ref name="edge" scoped="" ref="0x2af8e53314d0"/>
        <function-ref name="enable" scoped="" ref="0x2af8e5331660"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e53317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af8e5339a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af8e5339a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5339db0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5338020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53381b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5338340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53384d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5338660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af8e5337a30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af8e5337a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5337db0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5336020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53361b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5336340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53364d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5336660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af8e533ea30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af8e533ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e533edb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e533d020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e533d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e533d340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e533d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e533d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af8e5334a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af8e5334a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5334db0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5333020"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53331b0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e5333340"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53334d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e5333660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2af8e540c610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2af8e540c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e540c990"/>
        <function-ref name="fired" scoped="" ref="0x2af8e540cb20"/>
        <function-ref name="disable" scoped="" ref="0x2af8e540ccb0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e540ce40"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53ff020"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e53ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2af8e540da30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2af8e540da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e540ddb0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e540c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af8e540c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af8e540c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2af8e53fd610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2af8e53fd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e53fd990"/>
        <function-ref name="fired" scoped="" ref="0x2af8e53fdb20"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53fdcb0"/>
        <function-ref name="edge" scoped="" ref="0x2af8e53fde40"/>
        <function-ref name="enable" scoped="" ref="0x2af8e53fc020"/>
        <function-ref name="getValue" scoped="" ref="0x2af8e53fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2af8e53fea70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2af8e53fea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e53fedf0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e53fd020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af8e53fd1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af8e53fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af8e5754e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5754e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5753410"/>
        <function-ref name="write" scoped="" ref="0x2af8e57535a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af8e575d160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af8e575d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af8e5757e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5757e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5756210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af8e5751880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5751880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5751c00"/>
        <function-ref name="write" scoped="" ref="0x2af8e5751d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af8e57490a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af8e57490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5749420"/>
        <function-ref name="write" scoped="" ref="0x2af8e57495b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af8e57500a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af8e57500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5750420"/>
        <function-ref name="write" scoped="" ref="0x2af8e57505b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af8e57a5500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af8e57a5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57a5880"/>
        <function-ref name="write" scoped="" ref="0x2af8e57a5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af8e5740500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e5740500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5740880"/>
        <function-ref name="write" scoped="" ref="0x2af8e5740a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af8e575c490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af8e575c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af8e5746880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af8e5746880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5746c00"/>
        <function-ref name="write" scoped="" ref="0x2af8e5746d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af8e5741500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e5741500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5741880"/>
        <function-ref name="write" scoped="" ref="0x2af8e5741a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af8e5756e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af8e5756e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5755210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af8e5755e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5755e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5754210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af8e574b880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af8e574b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574bc00"/>
        <function-ref name="write" scoped="" ref="0x2af8e574bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af8e574d0a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af8e574d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574d420"/>
        <function-ref name="write" scoped="" ref="0x2af8e574d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af8e5750880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5750880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5750c00"/>
        <function-ref name="write" scoped="" ref="0x2af8e5750d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e5760a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5760a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e5760e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e575e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e575e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af8e575be00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e575be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af8e575a490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af8e575a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af8e5744c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e5744c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57430a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5743230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af8e575abe0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af8e575abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5758020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af8e5741ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5741ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57400a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5740230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af8e575b160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e575b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af8e57460a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af8e57460a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5746420"/>
        <function-ref name="write" scoped="" ref="0x2af8e57465b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af8e5755670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e5755670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57559f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5755b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af8e5756670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5756670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57569f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5756b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af8e575ead0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af8e575ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af8e57470a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e57470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5747420"/>
        <function-ref name="write" scoped="" ref="0x2af8e57475b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af8e5749880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af8e5749880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5749c00"/>
        <function-ref name="write" scoped="" ref="0x2af8e5749d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af8e5747880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e5747880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5747c00"/>
        <function-ref name="write" scoped="" ref="0x2af8e5747d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af8e573fce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af8e573fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57a50a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57a5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af8e5740ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e5740ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e573f0a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e573f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af8e574d880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af8e574d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574dc00"/>
        <function-ref name="write" scoped="" ref="0x2af8e574dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af8e57480a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af8e57480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5748420"/>
        <function-ref name="write" scoped="" ref="0x2af8e57485b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af8e5742ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af8e5742ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57410a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5741230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af8e574f880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af8e574f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574fc00"/>
        <function-ref name="write" scoped="" ref="0x2af8e574fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af8e57a5ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af8e57a5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e57a40a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e57a4230"/>
        <function-ref name="write" scoped="" ref="0x2af8e57a43c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e57a4550"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e57a46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af8e575e480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e575e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af8e5757670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af8e5757670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57579f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5757b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af8e5754670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e5754670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57549f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5754b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af8e574a0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af8e574a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574a420"/>
        <function-ref name="write" scoped="" ref="0x2af8e574a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af8e574f0a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af8e574f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574f420"/>
        <function-ref name="write" scoped="" ref="0x2af8e574f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af8e574a880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af8e574a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574ac00"/>
        <function-ref name="write" scoped="" ref="0x2af8e574ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af8e5753870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5753870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5753bf0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5753d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af8e575d7b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af8e575d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af8e57510a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e57510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5751420"/>
        <function-ref name="write" scoped="" ref="0x2af8e57515b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5761e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5761e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e57601c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5760350"/>
        <function-ref name="request" scoped="" ref="0x2af8e57604e0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5760670"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5760800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af8e57582f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af8e57582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5758670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af8e5757020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af8e5757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af8e5742500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af8e5742500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5742880"/>
        <function-ref name="write" scoped="" ref="0x2af8e5742a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af8e5743ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5743ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57420a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5742230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af8e575b7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e575b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af8e5743500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e5743500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5743880"/>
        <function-ref name="write" scoped="" ref="0x2af8e5743a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af8e573f500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af8e573f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e573f880"/>
        <function-ref name="write" scoped="" ref="0x2af8e573fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af8e574b0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e574b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574b420"/>
        <function-ref name="write" scoped="" ref="0x2af8e574b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af8e5748880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af8e5748880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5748c00"/>
        <function-ref name="write" scoped="" ref="0x2af8e5748d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af8e575de00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af8e575de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af8e575cae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af8e575cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e575ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af8e574e0a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af8e574e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574e420"/>
        <function-ref name="write" scoped="" ref="0x2af8e574e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af8e5758940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af8e5758940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5758cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af8e574e880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af8e574e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e574ec00"/>
        <function-ref name="write" scoped="" ref="0x2af8e574ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af8e57440a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af8e57440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5744820"/>
        <function-ref name="write" scoped="" ref="0x2af8e57449b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af8e57a49b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af8e57a49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e57a4d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e57a3020"/>
        <function-ref name="write" scoped="" ref="0x2af8e57a31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e57a3340"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e57a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2af8e546c630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2af8e546c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e546c9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e546cb40"/>
        <function-ref name="write" scoped="" ref="0x2af8e546ccd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e546ce60"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e546b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e546e680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e546e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e546ea00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e546eb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e546ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2af8e546b8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2af8e546b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e546bc40"/>
        <function-ref name="write" scoped="" ref="0x2af8e546bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2af8e546a6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2af8e546a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e546aa70"/>
        <function-ref name="write" scoped="" ref="0x2af8e546ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5418960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5418960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5418ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5418e70"/>
        <function-ref name="request" scoped="" ref="0x2af8e546e030"/>
        <function-ref name="granted" scoped="" ref="0x2af8e546e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e546e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2af8e5469510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2af8e5469510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5469890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2af8e5453680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5453680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5453a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5453b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2af8e5463bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2af8e5463bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e5462020"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e54621b0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5462340"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e54624d0"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e5462660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e5468930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5468930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e5468cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e5468e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e5465020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2af8e545c080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af8e545c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af8e545c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2af8e545b020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2af8e545b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e545b3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e545b530"/>
        <function-ref name="isState" scoped="" ref="0x2af8e545b6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e545b850"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e545b9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e545bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af8e545e400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af8e545e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e545e780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e545e910"/>
        <function-ref name="request" scoped="" ref="0x2af8e545eaa0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e545ec30"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e545edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2af8e5461020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2af8e5461020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e54613a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5461530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2af8e5461db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2af8e5461db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5460180"/>
        <function-ref name="write" scoped="" ref="0x2af8e5460310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e545bdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e545bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e545a1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e545a350"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e545a4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e545a670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e545a800"/>
        <function-ref name="get" scoped="" ref="0x2af8e545a990"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e545ab20"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e54541b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e545acb0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e545ae40"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e5454020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5465810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5465810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5465b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5465d20"/>
        <function-ref name="request" scoped="" ref="0x2af8e5463020"/>
        <function-ref name="granted" scoped="" ref="0x2af8e54631b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5463340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2af8e544e120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2af8e544e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e544e4a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e544e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2af8e5460ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2af8e5460ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e545e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e54a7770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e54a7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e54a7af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e54a7c80"/>
        <function-ref name="isState" scoped="" ref="0x2af8e54a7e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e54a0020"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e54a01b0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e54a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e54a3280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e54a3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e54a3600"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e54a3790"/>
        <function-ref name="isState" scoped="" ref="0x2af8e54a3920"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e54a3ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e54a3c40"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e54a3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e549f020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e549f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e549f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e549fb70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e549fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e549e020"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e549e1b0"/>
        <function-ref name="isState" scoped="" ref="0x2af8e549e340"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e549e4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e549e660"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e549e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af8e5721020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5721020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e57213a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5721530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af8e54e08f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af8e54e08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af8e54e0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e54e1c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e54e1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e54e0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e54e01b0"/>
        <function-ref name="request" scoped="" ref="0x2af8e54e0340"/>
        <function-ref name="granted" scoped="" ref="0x2af8e54e04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e54e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e669baf0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e669baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e669be70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e669a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af8e6699440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af8e6699440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e66997c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6699950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af8e6699be0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e6699be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e6697020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af8e669a2c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af8e669a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af8e669a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e669de70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e669de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e669b220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e669b3b0"/>
        <function-ref name="request" scoped="" ref="0x2af8e669b540"/>
        <function-ref name="granted" scoped="" ref="0x2af8e669b6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e669b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af8e669a8d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e669a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af8e669ac50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af8e669ade0"/>
        <function-ref name="splitRead" scoped="" ref="0x2af8e6699020"/>
        <function-ref name="write" scoped="" ref="0x2af8e66991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af8e54cd6b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e54cd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e54cda30"/>
        <function-ref name="configure" scoped="" ref="0x2af8e54cdbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af8e54cb850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af8e54cb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e54cbbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e54cbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af8e5525a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e5525a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e5525dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af8e54cc020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af8e54cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af8e54cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af8e5526690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af8e5526690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5526a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5526ba0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5526d30"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5525020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e55251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e54cf430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e54cf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e54cf7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e54cf940"/>
        <function-ref name="request" scoped="" ref="0x2af8e54cfad0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e54cfc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e54cfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af8e54cc6a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e54cc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af8e54cca20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af8e54ccbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2af8e54ccd40"/>
        <function-ref name="write" scoped="" ref="0x2af8e54cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af8e55242a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e55242a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e5524620"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e55247b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af8e5528250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e5528250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e55285f0"/>
        <function-ref name="configure" scoped="" ref="0x2af8e5528780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af8e5583c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af8e5583c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5582020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e55821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af8e55813e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af8e55813e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af8e5581780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af8e5528a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af8e5528a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af8e5528d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2af8e5581a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af8e5581a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e5581dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e5580020"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e55801b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e5580340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e55804d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e5580660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e55807f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e5580980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e5580b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e5580ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e5580e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e557f020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e557f1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e557f440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e557f5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e557f760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e557f8f0"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e557fa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e557fc10"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e557fda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e557e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e557e1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e557e340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e557e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e557e660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e557e9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e557eb80"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e557ed10"/>
        <function-ref name="tx" scoped="" ref="0x2af8e557d020"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e557d1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e557d340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e557d4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e557d660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e557d7f0"/>
        <function-ref name="rx" scoped="" ref="0x2af8e557d980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e557db10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e557dca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e557de30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e557c020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e557c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e557cc20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e557cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e557b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e557b1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e557b340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e557b4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e557b660"/>
        <function-ref name="get" scoped="" ref="0x2af8e557b7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e557b980"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e557a020"/>
        <function-ref name="set" scoped="" ref="0x2af8e557bca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e557bb10"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e557be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af8e55825b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af8e55825b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5582950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5582ae0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5582c70"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5582e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5529470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5529470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5529810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e55299a0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5529b30"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5529cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5529e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af8e5583060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af8e5583060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af8e55833e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af8e5583570"/>
        <function-ref name="splitRead" scoped="" ref="0x2af8e5583700"/>
        <function-ref name="write" scoped="" ref="0x2af8e5583890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af8e557c480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af8e557c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e557c800"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e557c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2af8e557a2f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2af8e557a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e557a670"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e557a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2af8e556d5e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af8e556d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e556d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af8e556ed10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e556ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e556d0e0"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e556d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af8e5572020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e5572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e55723a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e5572530"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e55726c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e5572850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e55729e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e5572b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e5572d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e5571020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e55711b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e5571340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e55714d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e5571660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e55717f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e5571a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e5571c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e5571da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e5570020"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e55701b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e5570340"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e55704d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e5570660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e55707f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e5570980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e5570b10"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e5570ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e556f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e556f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e556f540"/>
        <function-ref name="tx" scoped="" ref="0x2af8e556f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e556f860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e556f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e556fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e556fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e556e020"/>
        <function-ref name="rx" scoped="" ref="0x2af8e556e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e556e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e556e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e556e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e556e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e556e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af8e5590b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af8e5590b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e558f020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e558f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e558f340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e558f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e558f660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e558f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e558f980"/>
        <function-ref name="get" scoped="" ref="0x2af8e558fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e558fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e558fe30"/>
        <function-ref name="set" scoped="" ref="0x2af8e558e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e558e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e558e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e558e5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e558e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af8e5565780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af8e5565780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e5565b00"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e5565c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2af8e558eb20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2af8e558eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e558d020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e558d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e558d340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e558d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e558d660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e558d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e558d980"/>
        <function-ref name="get" scoped="" ref="0x2af8e558db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e558dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e558de30"/>
        <function-ref name="set" scoped="" ref="0x2af8e558c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e558c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e558c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e558c5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e558c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2af8e558cb20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2af8e558cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e558b020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e558b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e558b340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e558b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e558b660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e558b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e558b980"/>
        <function-ref name="get" scoped="" ref="0x2af8e558bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e558bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e558be30"/>
        <function-ref name="set" scoped="" ref="0x2af8e558a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e558a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e558a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e558a5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e558a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2af8e556cc70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af8e556cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e5569020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e55691b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e5569340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e55694d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e5569660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e55697f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e5569980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e5569b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e5569ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e5569e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e5568020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e55681b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e5568340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e55685d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e5568760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e55688f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e5568a80"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e5568c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e5568da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e5567020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e55671b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e5567340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e55674d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e5567660"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e55677f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e5567b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e5567d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e5566020"/>
        <function-ref name="tx" scoped="" ref="0x2af8e55661b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e5566340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e55664d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e5566660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e55667f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e5566980"/>
        <function-ref name="rx" scoped="" ref="0x2af8e5566b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e5566ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e5566e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e5565020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e55651b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e5565340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2af8e5599d10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2af8e5599d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af8e55620e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af8e5562270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af8e5562400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af8e5562590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af8e5562720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af8e55628b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af8e5562a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af8e5562bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e5562d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af8e5561020"/>
        <function-ref name="getData" scoped="" ref="0x2af8e55611b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af8e5561340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af8e55614d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af8e5561760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af8e55618f0"/>
        <function-ref name="getIV" scoped="" ref="0x2af8e5561a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af8e5561c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af8e5561da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af8e5598020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af8e55981b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af8e5598340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af8e55984d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af8e5598660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af8e55987f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af8e5598980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af8e5598d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af8e5597020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af8e55971b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af8e5597340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af8e55974d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af8e5597660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af8e55977f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af8e5597980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af8e5597b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af8e5597ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af8e5597e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af8e5596020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af8e55961b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af8e5596340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af8e55964d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af8e5596660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af8e55967f0"/>
        <function-ref name="setData" scoped="" ref="0x2af8e5596980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af8e5596b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af8e5596ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af8e5596e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af8e5595020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af8e55951b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af8e5595340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af8e55958d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af8e5595a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af8e5595bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af8e5595d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af8e5594020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af8e55941b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af8e5594340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af8e55944d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af8e5594660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af8e55947f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2af8e5592b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2af8e5592b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5591020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e55911b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e5591340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e55914d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5591660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e55917f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5591980"/>
        <function-ref name="get" scoped="" ref="0x2af8e5591b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e5591ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e5591e30"/>
        <function-ref name="set" scoped="" ref="0x2af8e5590020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e55901b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e5590340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e55905d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5590760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af8e5563150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e5563150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e55634d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af8e5594bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af8e5594bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5593020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e55931b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e5593340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e55934d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5593660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e55937f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5593980"/>
        <function-ref name="get" scoped="" ref="0x2af8e5593b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e5593ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e5593e30"/>
        <function-ref name="set" scoped="" ref="0x2af8e5592020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e55921b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e5592340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e55925d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5592760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e66905d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e66905d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e6690950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e6690ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2af8e67347c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af8e67347c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e6734b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e672da80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e672da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e672de00"/>
        <function-ref name="configure" scoped="" ref="0x2af8e672c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2af8e6734dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af8e6734dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af8e6733180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af8e6733310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af8e67334a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af8e6733630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af8e67337c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af8e6733950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af8e6733ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af8e6733c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e6733e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af8e6732020"/>
        <function-ref name="getData" scoped="" ref="0x2af8e67321b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af8e6732340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af8e67324d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af8e6732760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af8e67328f0"/>
        <function-ref name="getIV" scoped="" ref="0x2af8e6732a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af8e6732c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af8e6732da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af8e6731020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af8e67311b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af8e6731340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af8e67314d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af8e6731660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af8e67317f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af8e6731980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af8e6731d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af8e6730020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af8e67301b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af8e6730340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af8e67304d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af8e6730660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af8e67307f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af8e6730980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af8e6730b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af8e6730ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af8e6730e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af8e672f020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af8e672f1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af8e672f340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af8e672f4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af8e672f660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af8e672f7f0"/>
        <function-ref name="setData" scoped="" ref="0x2af8e672f980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af8e672fb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af8e672fca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af8e672fe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af8e672e020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af8e672e1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af8e672e340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af8e672e8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af8e672ea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af8e672ebf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af8e672ed80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af8e672d020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af8e672d1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af8e672d340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af8e672d4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af8e672d660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af8e672d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af8e6734020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af8e6734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e67343a0"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e6734530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e6691860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e6691860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e6691be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e6691d70"/>
        <function-ref name="request" scoped="" ref="0x2af8e6690020"/>
        <function-ref name="granted" scoped="" ref="0x2af8e66901b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e6690340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af8e668f5a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af8e668f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e668f920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e668fab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e668fc40"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e668fdd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e668e020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e668e1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e668e340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e668e4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e668e660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e668e7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e668e980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e668eb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e668eca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e668d020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e668d1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e668d340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e668d4d0"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e668d660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e668d7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e668d980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e668db10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e668dca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e668de30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e668c020"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e668c1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e668c540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e668c6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e668c860"/>
        <function-ref name="tx" scoped="" ref="0x2af8e668c9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e668cb80"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e668cd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e668b020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e668b1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e668b340"/>
        <function-ref name="rx" scoped="" ref="0x2af8e668b4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e668b660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e668b7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e668b980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e668bb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e668bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e6690d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6690d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e668f180"/>
        <function-ref name="userId" scoped="" ref="0x2af8e668f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e566c2c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e566c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e566c640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e566c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e566b8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e566b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e566bc20"/>
        <function-ref name="configure" scoped="" ref="0x2af8e566bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af8e566f4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af8e566f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e566f850"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e566f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e566d020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e566d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e566d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e566d530"/>
        <function-ref name="request" scoped="" ref="0x2af8e566d6c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e566d850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e566d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af8e566e3f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e566e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e566e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e566cad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e566cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e566ce50"/>
        <function-ref name="userId" scoped="" ref="0x2af8e566b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af8e5667e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e5667e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e5666210"/>
        <function-ref name="userId" scoped="" ref="0x2af8e56663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af8e5668060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af8e5668060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e5668400"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e5668590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2af8e5667840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af8e5667840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e5667bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af8e5668990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af8e5668990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e5668d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2af8e5667060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2af8e5667060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af8e56673e0"/>
        <function-ref name="txDone" scoped="" ref="0x2af8e5667570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e5663850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e5663850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e5663bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e5663d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e5660570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e5660570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e5660910"/>
        <function-ref name="configure" scoped="" ref="0x2af8e5660aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af8e5662020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e5662020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e56623a0"/>
        <function-ref name="requested" scoped="" ref="0x2af8e5662530"/>
        <function-ref name="granted" scoped="" ref="0x2af8e56626c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5662850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e56629e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5664a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5664a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5664e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5663020"/>
        <function-ref name="request" scoped="" ref="0x2af8e56631b0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5663340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e56634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e5662c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e5662c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e5660020"/>
        <function-ref name="userId" scoped="" ref="0x2af8e56601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e676ba40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e676ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e676bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af8e676a0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af8e676a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af8e676a420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af8e676a5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af8e676a740"/>
        <function-ref name="dequeue" scoped="" ref="0x2af8e676a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af8e6767020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af8e6767020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af8e67673c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e6767550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af8e6766cf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af8e6766cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af8e67640e0"/>
        <function-ref name="configure" scoped="" ref="0x2af8e6764270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af8e6764500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af8e6764500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af8e6764880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af8e6764a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af8e6764ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af8e6764d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af8e67677a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af8e67677a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e6767b20"/>
        <function-ref name="requested" scoped="" ref="0x2af8e6767cb0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e6767e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e6766020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af8e67661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e6763020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e6763020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e67633a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e6763530"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e67636c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e6763850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e67639e0"/>
        <function-ref name="get" scoped="" ref="0x2af8e6763b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e6763d00"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e67624d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e67621b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e6762020"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e6762340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e6768270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e6768270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e6768610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e67687a0"/>
        <function-ref name="request" scoped="" ref="0x2af8e6768930"/>
        <function-ref name="granted" scoped="" ref="0x2af8e6768ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e6768c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af8e6766400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af8e6766400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af8e6766780"/>
        <function-ref name="userId" scoped="" ref="0x2af8e6766910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2af8e67627a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2af8e67627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e6762b20"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e6762cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2af8e5659540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af8e5659540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af8e56598c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af8e5659a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af8e5659be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af8e5659d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af8e5656020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af8e56561b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af8e5656340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af8e56564d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e5656660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af8e56567f0"/>
        <function-ref name="getData" scoped="" ref="0x2af8e5656980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af8e5656b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af8e5656ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af8e5655020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af8e56551b0"/>
        <function-ref name="getIV" scoped="" ref="0x2af8e5655340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af8e56554d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af8e5655660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af8e56557f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af8e5655980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af8e5655b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af8e5655ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af8e5655e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af8e5654020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af8e56541b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af8e5654540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af8e56546d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af8e5654860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af8e56549f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af8e5654b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af8e5654d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af8e5653020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af8e56531b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af8e5653340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af8e56534d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af8e5653660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af8e56537f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af8e5653980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af8e5653b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af8e5653ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af8e5653e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af8e5652020"/>
        <function-ref name="setData" scoped="" ref="0x2af8e56521b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af8e5652340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af8e56524d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af8e5652660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af8e56527f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af8e5652980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af8e5652b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af8e5651420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af8e56515b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af8e5651740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af8e56518d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af8e5651a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af8e5651bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af8e5651d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af8e5650020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af8e56501b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af8e5650340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2af8e5645250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2af8e5645250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af8e56455d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af8e5645760"/>
        <function-ref name="setUctl" scoped="" ref="0x2af8e56458f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af8e5645a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af8e5645c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af8e5645da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af8e5644020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af8e56441b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af8e5644340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af8e56444d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af8e5644660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af8e56447f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af8e5644980"/>
        <function-ref name="getUbr" scoped="" ref="0x2af8e5644c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af8e5644da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af8e56a5020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af8e56a51b0"/>
        <function-ref name="isUart" scoped="" ref="0x2af8e56a5340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af8e56a54d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af8e56a5660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af8e56a57f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af8e56a5980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af8e56a5b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af8e56a5ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e56a5e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af8e56a4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af8e56a43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af8e56a4540"/>
        <function-ref name="tx" scoped="" ref="0x2af8e56a46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af8e56a4860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af8e56a49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af8e56a4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af8e56a4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af8e56a3020"/>
        <function-ref name="rx" scoped="" ref="0x2af8e56a31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af8e56a3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af8e56a34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af8e56a3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af8e56a37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af8e56a3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af8e56a1cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af8e56a1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e56a00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e56a0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e56a03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e56a0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e56a06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e56a0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e56a0a00"/>
        <function-ref name="get" scoped="" ref="0x2af8e56a0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e56a0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e569f020"/>
        <function-ref name="set" scoped="" ref="0x2af8e569f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e569f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e569f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e569f760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e569f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2af8e564c430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2af8e564c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af8e564c7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af8e564c940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af8e564cad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af8e564cc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af8e564cdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af8e564b020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af8e564b1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af8e564b340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e564b4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af8e564b660"/>
        <function-ref name="getData" scoped="" ref="0x2af8e564b7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af8e564b980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af8e564bb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af8e564bda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af8e564a020"/>
        <function-ref name="getIV" scoped="" ref="0x2af8e564a1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af8e564a340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af8e564a4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af8e564a660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af8e564a7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af8e564a980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af8e564ab10"/>
        <function-ref name="isI2C" scoped="" ref="0x2af8e564aca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af8e564ae30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af8e5649020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af8e56493b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af8e5649540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af8e56496d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af8e5649860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af8e56499f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af8e5649b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af8e5649d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af8e5648020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af8e56481b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af8e5648340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af8e56484d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af8e5648660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af8e56487f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af8e5648980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af8e5648b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af8e5648ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af8e5648e30"/>
        <function-ref name="setData" scoped="" ref="0x2af8e5647020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af8e56471b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af8e5647340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af8e56474d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af8e5647660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af8e56477f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af8e5647980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af8e5646020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af8e56461b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af8e5646340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af8e56464d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af8e5646660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af8e56467f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af8e5646980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af8e5646b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af8e5646ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af8e5646e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af8e56a3d40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af8e56a3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e56a20e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e56a2270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e56a2400"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e56a2590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e56a2720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e56a28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e56a2a40"/>
        <function-ref name="get" scoped="" ref="0x2af8e56a2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e56a2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e56a1020"/>
        <function-ref name="set" scoped="" ref="0x2af8e56a11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e56a1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e56a14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e56a1760"/>
        <function-ref name="clr" scoped="" ref="0x2af8e56a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af8e578bc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e578bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578a210"/>
        <function-ref name="write" scoped="" ref="0x2af8e578a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af8e5796da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af8e5796da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5795180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af8e578fb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e578fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578d020"/>
        <function-ref name="write" scoped="" ref="0x2af8e578d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af8e5789670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5789670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57899f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5789b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af8e5782e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af8e5782e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5781210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af8e5789e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af8e5789e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5788210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af8e57752f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af8e57752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5775670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5775800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af8e57772f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e57772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5777670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5777800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af8e5793120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af8e5793120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57934a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af8e577d670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af8e577d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e577db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af8e57782f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e57782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5778670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5778800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af8e578dc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af8e578dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578c020"/>
        <function-ref name="write" scoped="" ref="0x2af8e578c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af8e578cc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e578cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578b020"/>
        <function-ref name="write" scoped="" ref="0x2af8e578b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af8e5783670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af8e5783670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57839f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5783b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af8e5785e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af8e5785e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5784210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af8e5788670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5788670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57889f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5788b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e5797760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5797760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e5797ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e5797c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e5797e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af8e5792aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e5792aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5792e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af8e5791120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af8e5791120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57915a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af8e577ca70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e577ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577cdf0"/>
        <function-ref name="write" scoped="" ref="0x2af8e577b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af8e5791870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af8e5791870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5791bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af8e5778ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5778ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5778e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5777020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af8e5793dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e5793dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5792180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af8e577ee50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af8e577ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577d210"/>
        <function-ref name="write" scoped="" ref="0x2af8e577d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af8e578c480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e578c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578c800"/>
        <function-ref name="write" scoped="" ref="0x2af8e578c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af8e578d480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e578d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578d800"/>
        <function-ref name="write" scoped="" ref="0x2af8e578d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af8e5796750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af8e5796750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5796ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af8e577fe50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e577fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577e210"/>
        <function-ref name="write" scoped="" ref="0x2af8e577e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af8e5781670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af8e5781670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57819f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5781b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af8e577e670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e577e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e577eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af8e5776ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af8e5776ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5776e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af8e5777ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e5777ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5777e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af8e5784670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af8e5784670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57849f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5784b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af8e5781e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af8e5781e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577f210"/>
        <function-ref name="write" scoped="" ref="0x2af8e577f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af8e577aad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af8e577aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577ae50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5778020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af8e5786670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af8e5786670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57869f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5786b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af8e5775ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af8e5775ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e5775e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e5774020"/>
        <function-ref name="write" scoped="" ref="0x2af8e57741b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e5774340"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e57744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af8e5796100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e5796100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5796480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af8e578f370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af8e578f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578f6f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e578f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af8e578b480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e578b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578b800"/>
        <function-ref name="write" scoped="" ref="0x2af8e578b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af8e5783e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af8e5783e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5782210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af8e5788e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af8e5788e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5786210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af8e5782670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af8e5782670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57829f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5782b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af8e578a670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af8e578a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e578a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e578ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af8e5795450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af8e5795450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57957d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af8e578ae50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e578ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5789210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5798a80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5798a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5798e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5797020"/>
        <function-ref name="request" scoped="" ref="0x2af8e57971b0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5797340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e57974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af8e5790020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af8e5790020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af8e5790cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af8e5790cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e578f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af8e577a2f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af8e577a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577a670"/>
        <function-ref name="write" scoped="" ref="0x2af8e577a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af8e577bad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af8e577bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577be50"/>
        <function-ref name="write" scoped="" ref="0x2af8e577a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af8e5792450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e5792450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57927d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af8e577b2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e577b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577b670"/>
        <function-ref name="write" scoped="" ref="0x2af8e577b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af8e57762f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af8e57762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5776670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5776800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af8e5784e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e5784e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5783210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af8e577f670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af8e577f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577f9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e577fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af8e5795aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af8e5795aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5795e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af8e5793770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af8e5793770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5793af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af8e5786e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af8e5786e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5785210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af8e5790670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af8e5790670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af8e5785670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af8e5785670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57859f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5785b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af8e577de50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af8e577de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e577c610"/>
        <function-ref name="write" scoped="" ref="0x2af8e577c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af8e57747a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af8e57747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e5774b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e5774cb0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5774e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e57d9020"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e57d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af8e57c5c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e57c5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c3210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af8e57cfda0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af8e57cfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57ce180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af8e57c8b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e57c8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c7020"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af8e57c2670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e57c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c29f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af8e57bbe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af8e57bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57ba210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af8e57c2e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af8e57c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c1210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af8e57ae2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af8e57ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57ae670"/>
        <function-ref name="write" scoped="" ref="0x2af8e57ae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af8e57b12f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e57b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b1670"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af8e57cd120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af8e57cd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af8e57b6670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af8e57b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b69f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af8e57b22f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e57b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b2670"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af8e57c7c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af8e57c7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c6020"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af8e57c6c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e57c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c5020"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af8e57bc670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af8e57bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57bc9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af8e57bfe50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af8e57bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57be210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af8e57c1670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af8e57c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c19f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e57d0760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e57d0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e57d0ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e57d0c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e57d0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af8e57ccaa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e57ccaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af8e57cb120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af8e57cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af8e57b5a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e57b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b5df0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af8e57cb870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af8e57cb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af8e57b2ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e57b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b2e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af8e57cddc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e57cddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af8e57b8e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af8e57b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b6210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af8e57c6480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e57c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c6800"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af8e57c7480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e57c7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c7800"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af8e57cf750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af8e57cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cfad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af8e57b9e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e57b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b8210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af8e57ba670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af8e57ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57ba9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af8e57b8670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e57b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b89f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af8e57b0ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af8e57b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b0e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e57ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af8e57b1ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e57b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b1e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af8e57be670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af8e57be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57be9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57beb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af8e57bae50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af8e57bae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b9210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af8e57b3ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af8e57b3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b3e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af8e57c0670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af8e57c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c09f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af8e57aead0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af8e57aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e57aee50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e57ad020"/>
        <function-ref name="write" scoped="" ref="0x2af8e57ad1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e57ad340"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e57ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af8e57cf100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e57cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cf480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af8e57c8370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af8e57c8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c86f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af8e57c5480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e57c5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c5800"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af8e57bce50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af8e57bce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57bb210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af8e57c1e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af8e57c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c0210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af8e57bb670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af8e57bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57bb9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af8e57c3670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af8e57c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c39f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af8e57ce450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af8e57ce450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57ce7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af8e57c3e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e57c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57c2210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e57d29e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e57d29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e57d2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e57d0020"/>
        <function-ref name="request" scoped="" ref="0x2af8e57d01b0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e57d0340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e57d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af8e57c9020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af8e57c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af8e57c9cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af8e57c9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57c80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af8e57b32f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af8e57b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b3670"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af8e57b4ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af8e57b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b4e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af8e57cc450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e57cc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af8e57b42f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e57b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b4670"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af8e57b02f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af8e57b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b0670"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af8e57bee50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e57bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57bc210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af8e57b9670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af8e57b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b99f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af8e57ceaa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af8e57ceaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af8e57cd770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af8e57cd770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57cdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af8e57c0e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af8e57c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57bf210"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af8e57c9670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af8e57c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e57c99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af8e57bf670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af8e57bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57bf9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af8e57b6e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af8e57b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57b5610"/>
        <function-ref name="write" scoped="" ref="0x2af8e57b57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af8e57ad7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af8e57ad7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e57adb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e57adcb0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57ade40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e57ac020"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e57ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2af8e580cb30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e580cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af8e5809020"/>
        <function-ref name="changed" scoped="" ref="0x2af8e58091b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af8e5809340"/>
        <function-ref name="setAddress" scoped="" ref="0x2af8e58094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2af8e580bd30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e580bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af8e57f50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2af8e57f1310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af8e57f1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af8e57f1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2af8e57ee8c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af8e57ee8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57eec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2af8e57e3020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af8e57e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2af8e5841cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af8e5841cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57dc0a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e57dc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2af8e57dc5b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2af8e57dc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e57dc930"/>
        <function-ref name="stop" scoped="" ref="0x2af8e57dcac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2af8e57dd210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af8e57dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e57dd590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2af8e5831020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af8e5831020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58313a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5831530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2af8e58318c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2af8e58318c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5831c40"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5831dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5830020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e58301b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e5830340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e58304d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5830660"/>
        <function-ref name="clr" scoped="" ref="0x2af8e58307f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2af8e5827b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af8e5827b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af8e5829970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2af8e582e490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af8e582e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e582e810"/>
        <function-ref name="write" scoped="" ref="0x2af8e582e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2af8e582ed30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2af8e582ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e582b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e582b270"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e582b400"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e582b590"/>
        <function-ref name="get" scoped="" ref="0x2af8e582b720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e582b8b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e582ba40"/>
        <function-ref name="clr" scoped="" ref="0x2af8e582bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2af8e5870020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af8e5870020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af8e5870e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2af8e586ed20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af8e586ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af8e586db60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e585d260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e585d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e585c090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e585ca10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e585c550"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e585b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2af8e585a890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af8e585a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e58576e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5855090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5857ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5855550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af8e5850190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e5850190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5850510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e58506a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e5850830"/>
        <function-ref name="get" scoped="" ref="0x2af8e58509c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e5850b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5850ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e5850e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e584f030"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e584f1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e584f350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e584f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e5853060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5853060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460d460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af8e460d7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5853e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5852820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5852360"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5852ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2af8e58325a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2af8e58325a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5832920"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5832ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5832c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5832dd0"/>
        <function-ref name="get" scoped="" ref="0x2af8e584b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e584b1b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e584b340"/>
        <function-ref name="clr" scoped="" ref="0x2af8e584b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af8e5849c50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af8e5849c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5848020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e58481b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af8e5848340"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e58484d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5848660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af8e58487f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5848980"/>
        <function-ref name="get" scoped="" ref="0x2af8e5848b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af8e5848ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af8e5848e30"/>
        <function-ref name="set" scoped="" ref="0x2af8e5847020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af8e58471b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af8e5847340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af8e58475d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5847760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af8e584a9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af8e584a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e584ad60"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5849020"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e58491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5849340"/>
        <function-ref name="get" scoped="" ref="0x2af8e58494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5849660"/>
        <function-ref name="set" scoped="" ref="0x2af8e58497f0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5849980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e584ca20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e584ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e584cda0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5842020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af8e589dcb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e589dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e589c0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e589c230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e589c3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e589c550"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e589c6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e589c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2af8e58999f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2af8e58999f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af8e5899d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2af8e589d020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2af8e589d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e589d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e589d530"/>
        <function-ref name="modify" scoped="" ref="0x2af8e589d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e589d850"/>
        <function-ref name="resend" scoped="" ref="0x2af8e589d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e58a06d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e58a06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e58a0a50"/>
        <function-ref name="stop" scoped="" ref="0x2af8e58a0be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2af8e589a190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2af8e589a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af8e589a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af8e5892650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5892650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e58929d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e5892b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e5892cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e5892e80"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e5891030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e58911c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2af8e588a7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af8e588a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5889d50"/>
        <function-ref name="clear" scoped="" ref="0x2af8e58874c0"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5889620"/>
        <function-ref name="set" scoped="" ref="0x2af8e5887bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2af8e58e0020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e58e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58e03a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e58e0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2af8e58e0890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e58e0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58e0c10"/>
        <function-ref name="write" scoped="" ref="0x2af8e58e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2af8e58915e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2af8e58915e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af8e5891960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2af8e58e4530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af8e58e4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e58e48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2af8e5885880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2af8e5885880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af8e5885c00"/>
        <function-ref name="disable" scoped="" ref="0x2af8e5885d90"/>
        <function-ref name="captured" scoped="" ref="0x2af8e5884020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af8e58841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2af8e58907f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2af8e58907f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e588c090"/>
        <function-ref name="fired" scoped="" ref="0x2af8e588d090"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e588da10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e588d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e588c550"/>
        <function-ref name="start" scoped="" ref="0x2af8e588f6a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e588fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af8e588ca00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e588ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e588cd80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e588b020"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e588b1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e588b340"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e588b4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e588b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2af8e5878550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e5878550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58788d0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5878a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2af8e5878e00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5878e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58771c0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5877350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2af8e58dad40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e58dad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e58dd0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af8e58dd270"/>
        <function-ref name="sfd" scoped="" ref="0x2af8e58dd400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e58938c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e58938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5893c40"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5893dd0"/>
        <function-ref name="modify" scoped="" ref="0x2af8e5892020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e58921b0"/>
        <function-ref name="resend" scoped="" ref="0x2af8e5892340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2af8e587ad10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e587ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e58790e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e5879270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e5879400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2af8e58e4c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e58e4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e58e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af8e587d820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af8e587d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e587dba0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e587dd30"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e587c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e587c1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e587c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e587c4d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e587c660"/>
        <function-ref name="clr" scoped="" ref="0x2af8e587c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5895820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5895820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5895ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e588b9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e588b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e588bd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e588a020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e588a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2af8e587eb30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e587eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5885020"/>
        <function-ref name="isSet" scoped="" ref="0x2af8e58851b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5885340"/>
        <function-ref name="set" scoped="" ref="0x2af8e58854d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2af8e58e33e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e58e33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58e3960"/>
        <function-ref name="write" scoped="" ref="0x2af8e58e3af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af8e587a020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af8e587a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e587a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e587a530"/>
        <function-ref name="request" scoped="" ref="0x2af8e587a6c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e587a850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e587a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2af8e5884500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2af8e5884500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5884980"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5884b10"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5884ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5884e30"/>
        <function-ref name="get" scoped="" ref="0x2af8e587d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e587d1b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e587d340"/>
        <function-ref name="clr" scoped="" ref="0x2af8e587d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2af8e58df130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e58df130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58df4b0"/>
        <function-ref name="write" scoped="" ref="0x2af8e58df640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2af8e58df9c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af8e58df9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58dfd40"/>
        <function-ref name="write" scoped="" ref="0x2af8e58de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2af8e58776d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e58776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5877a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2af8e587cb40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2af8e587cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e587b020"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e587b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e587b340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e587b4d0"/>
        <function-ref name="get" scoped="" ref="0x2af8e587b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e587b7f0"/>
        <function-ref name="set" scoped="" ref="0x2af8e587b980"/>
        <function-ref name="clr" scoped="" ref="0x2af8e587bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e58dd6c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e58dd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e58dda40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e58ddbd0"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e58ddd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e58dc020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e58dc1b0"/>
        <function-ref name="get" scoped="" ref="0x2af8e58dc340"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e58dc4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e58dcb10"/>
        <function-ref name="set" scoped="" ref="0x2af8e58dc660"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e58dc7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e58dc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2af8e58e15e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e58e15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e58e1960"/>
        <function-ref name="write" scoped="" ref="0x2af8e58e1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e5893020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e5893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e58933a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5893530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2af8e5879780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af8e5879780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e5879b00"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e5879c90"/>
        <function-ref name="write" scoped="" ref="0x2af8e5879e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e5878020"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e58781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2af8e5877de0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af8e5877de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e58e4180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2af8e58e3e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af8e58e3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e58e1220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2af8e5891d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2af8e5891d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af8e5890180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af8e5984c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5984c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5982210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af8e5920020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af8e5920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af8e5987c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5987c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5986020"/>
        <function-ref name="write" scoped="" ref="0x2af8e59861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af8e5981670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5981670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59819f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5981b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af8e597ae50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af8e597ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5979210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af8e5981e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af8e5981e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5980210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af8e596d2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af8e596d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e596d670"/>
        <function-ref name="write" scoped="" ref="0x2af8e596d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af8e59702f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e59702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5970670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5970800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af8e591f370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af8e591f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af8e5976670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af8e5976670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59769f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5976b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af8e59712f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e59712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5971670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5971800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af8e5986c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af8e5986c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5985020"/>
        <function-ref name="write" scoped="" ref="0x2af8e59851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af8e5985c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5985c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5984020"/>
        <function-ref name="write" scoped="" ref="0x2af8e59841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af8e597b670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af8e597b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597b9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e597bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af8e597ee50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af8e597ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597d210"/>
        <function-ref name="write" scoped="" ref="0x2af8e597d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af8e5980670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5980670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59809f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5980b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e59238f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e59238f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e5923c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e5923e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e5921020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af8e591ed00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e591ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af8e591d370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af8e591d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af8e5974a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e5974a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5974df0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5973020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af8e591dac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af8e591dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af8e5971ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5971ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5971e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5970020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af8e591e060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e591e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af8e5977e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af8e5977e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5976210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af8e5985480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e5985480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5985800"/>
        <function-ref name="write" scoped="" ref="0x2af8e5985990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af8e5986480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5986480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5986800"/>
        <function-ref name="write" scoped="" ref="0x2af8e5986990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af8e5921940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af8e5921940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5921cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af8e5978e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e5978e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5977210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af8e5979670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af8e5979670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59799f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5979b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af8e5977670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e5977670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59779f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5977b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af8e596fad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af8e596fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e596fe50"/>
        <function-ref name="write" scoped="" ref="0x2af8e596d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af8e5970ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e5970ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5970e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e596f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af8e597d670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af8e597d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e597db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af8e5979e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af8e5979e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5978210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af8e5972ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af8e5972ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5972e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5971020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af8e597f670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af8e597f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597f9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e597fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af8e596dad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af8e596dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e596de50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e596c020"/>
        <function-ref name="write" scoped="" ref="0x2af8e596c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e596c340"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e596c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af8e59212f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e59212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5921670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af8e5987490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af8e5987490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5987810"/>
        <function-ref name="write" scoped="" ref="0x2af8e59879a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af8e5984480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e5984480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5984800"/>
        <function-ref name="write" scoped="" ref="0x2af8e5984990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af8e597be50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af8e597be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597a210"/>
        <function-ref name="write" scoped="" ref="0x2af8e597a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af8e5980e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af8e5980e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597f210"/>
        <function-ref name="write" scoped="" ref="0x2af8e597f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af8e597a670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af8e597a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e597ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af8e5982670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5982670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59829f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5982b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af8e5920670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af8e5920670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59209f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af8e5982e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e5982e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5981210"/>
        <function-ref name="write" scoped="" ref="0x2af8e59813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5924c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5924c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5923020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e59231b0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5923340"/>
        <function-ref name="granted" scoped="" ref="0x2af8e59234d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5923660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af8e591b160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af8e591b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af8e591be00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af8e591be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59871c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af8e59722f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af8e59722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5972670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5972800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af8e5973ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5973ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5973e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5972020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af8e591e6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e591e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af8e59732f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e59732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5973670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5973800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af8e596f2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af8e596f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e596f670"/>
        <function-ref name="write" scoped="" ref="0x2af8e596f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af8e597de50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e597de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597b210"/>
        <function-ref name="write" scoped="" ref="0x2af8e597b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af8e5978670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af8e5978670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59789f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5978b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af8e5920cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af8e5920cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af8e591f9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af8e591f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af8e597fe50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af8e597fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597e210"/>
        <function-ref name="write" scoped="" ref="0x2af8e597e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af8e591b7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af8e591b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e591bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af8e597e670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af8e597e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e597e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e597eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af8e5976e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af8e5976e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5974610"/>
        <function-ref name="write" scoped="" ref="0x2af8e59747a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af8e596c7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af8e596c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e596cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e596ccb0"/>
        <function-ref name="write" scoped="" ref="0x2af8e596ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e596b020"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e596b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2af8e5960df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e5960df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e595d1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af8e595d350"/>
        <function-ref name="sfd" scoped="" ref="0x2af8e595d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e595d7c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e595d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e595db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2af8e595c020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2af8e595c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af8e595c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e59605c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e59605c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e5960940"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5960ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2af8e5955380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2af8e5955380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5955700"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5955890"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5955a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5955bb0"/>
        <function-ref name="get" scoped="" ref="0x2af8e5955d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5954020"/>
        <function-ref name="set" scoped="" ref="0x2af8e59541b0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5954340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2af8e59bbb90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af8e59bbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af8e59ba020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af8e59ba1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af8e59ba340"/>
        <function-ref name="syncDone" scoped="" ref="0x2af8e59ba4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af8e59ba660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af8e59ba7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af8e59ba980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af8e59bab10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af8e59baca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af8e59bae30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af8e59b9020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af8e59b91b0"/>
        <function-ref name="sync" scoped="" ref="0x2af8e59b9340"/>
        <function-ref name="getChannel" scoped="" ref="0x2af8e59b95d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af8e59b9760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2af8e59a49d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2af8e59a49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e59a4d50"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e59a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2af8e59b9d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af8e59b9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e59b7330"/>
        <function-ref name="clear" scoped="" ref="0x2af8e59b7a60"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e59b8ba0"/>
        <function-ref name="set" scoped="" ref="0x2af8e59b5210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2af8e59546b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2af8e59546b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e5954a30"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5954bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e5954d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5953020"/>
        <function-ref name="get" scoped="" ref="0x2af8e59531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5953340"/>
        <function-ref name="set" scoped="" ref="0x2af8e59534d0"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5953660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2af8e59b4cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e59b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59b30a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e59b3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2af8e59b3590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e59b3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59b3910"/>
        <function-ref name="write" scoped="" ref="0x2af8e59b3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2af8e59b26d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af8e59b26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59b2a50"/>
        <function-ref name="write" scoped="" ref="0x2af8e59b2be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af8e59bc330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e59bc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e59bc6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e59bc840"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e59bc9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e59bcb60"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e59bccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e59bce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2af8e5958550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af8e5958550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e59588d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af8e5958a60"/>
        <function-ref name="sfd" scoped="" ref="0x2af8e5958bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2af8e59bd3a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af8e59bd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59bd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af8e5956020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af8e5956020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af8e59563a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af8e5956530"/>
        <function-ref name="toggle" scoped="" ref="0x2af8e59566c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af8e5956850"/>
        <function-ref name="get" scoped="" ref="0x2af8e59569e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af8e5956b70"/>
        <function-ref name="set" scoped="" ref="0x2af8e5956d00"/>
        <function-ref name="clr" scoped="" ref="0x2af8e5955020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2af8e59b1020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e59b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59b13a0"/>
        <function-ref name="write" scoped="" ref="0x2af8e59b1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5959620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5959620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e59599a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e59bb1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e59bb1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e59bb560"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e59bb6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e59bb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5957020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5957020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e59573a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af8e59526e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af8e59526e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5952a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5952bf0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5952d80"/>
        <function-ref name="granted" scoped="" ref="0x2af8e59be020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e59be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2af8e59b3e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e59b3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59b21c0"/>
        <function-ref name="write" scoped="" ref="0x2af8e59b2350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2af8e59be530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af8e59be530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e59be8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e59bea40"/>
        <function-ref name="write" scoped="" ref="0x2af8e59bebd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e59bed60"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e59bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2af8e59b18b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e59b18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59b1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2af8e59577c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2af8e59577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af8e5957b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e59b0150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e59b0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e59b04d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e59b0660"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e59b07f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e59b0980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e59b0b10"/>
        <function-ref name="get" scoped="" ref="0x2af8e59b0ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e59b0e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e59af4d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e59af020"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e59af1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e59af340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2af8e59b43e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e59b43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e59b4760"/>
        <function-ref name="write" scoped="" ref="0x2af8e59b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2af8e59b5b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af8e59b5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2af8e5953a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af8e5953a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af8e5953dd0"/>
        <function-ref name="disable" scoped="" ref="0x2af8e5952020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af8e59521b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af8e5952340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2af8e59bdad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e59bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e59bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af8e5959ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af8e5959ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af8e59580a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5958230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af8e5a22a70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5a22a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af8e5a22df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af8e5a27670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e5a279f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e5a27b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e5a27d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e5a24020"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e5a241b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e5a24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af8e5a21550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a21550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5a20b00"/>
        <function-ref name="clear" scoped="" ref="0x2af8e5a1f2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5a203d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5a1f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2af8e5a220c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5a22440"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5a225d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5a22760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2af8e5a19480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5a19480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a19800"/>
        <function-ref name="isSet" scoped="" ref="0x2af8e5a19990"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5a19b20"/>
        <function-ref name="set" scoped="" ref="0x2af8e5a19cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af8e5a1d660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5a1d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5a1cce0"/>
        <function-ref name="clear" scoped="" ref="0x2af8e5a1b460"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5a1c5b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5a1bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e5a246e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e5a246e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5a24a60"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5a24bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5a24d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af8e5a13020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af8e5a13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af8e5a133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af8e5a18d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5a18d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e5a150e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e5a15270"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e5a15400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e5a15590"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e5a15720"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e5a158b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2af8e5a0a4a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5a0a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5a0a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5a0a9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5a0ab40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5a0acd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5a0ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af8e5a13a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5a13a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5a11020"/>
        <function-ref name="clear" scoped="" ref="0x2af8e5a11750"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5a128d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5a11e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2af8e5a14640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5a14640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5a149c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5a14b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5a14ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2af8e5a0b8b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5a0b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a0bc30"/>
        <function-ref name="isSet" scoped="" ref="0x2af8e5a0bdc0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5a0a020"/>
        <function-ref name="set" scoped="" ref="0x2af8e5a0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2af8e5a06820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2af8e5a06820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a084c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2af8e5a08b80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af8e5a08b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a077d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af8e5a0faf0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5a0faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5a0d0d0"/>
        <function-ref name="clear" scoped="" ref="0x2af8e5a0d800"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5a0e970"/>
        <function-ref name="set" scoped="" ref="0x2af8e5a0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e5a15c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e5a15c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5a14020"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5a141b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5a14340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af8e5a964e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af8e5a964e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a8d150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e5a8d7c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5a8d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a8c620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5a8b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5a8cae0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5a8b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af8e5a85020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5a82630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5a84a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5a83920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5a834a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5a80020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5a82ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5a83020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5a85c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5a82020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5a84110"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5a845e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af8e5a80610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af8e5a80610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a7f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5a86130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5a86130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5a864b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e5ac3870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e5ac3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5ac0090"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5ac1090"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e5ac1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5ac1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e5ac0550"/>
        <function-ref name="start" scoped="" ref="0x2af8e5ac26a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5ac2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5ac3020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5ac3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5ac33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e687f260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e687f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e687db30"/>
        <function-ref name="fired" scoped="" ref="0x2af8e687ea60"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e687d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e687d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e687c020"/>
        <function-ref name="start" scoped="" ref="0x2af8e687e090"/>
        <function-ref name="stop" scoped="" ref="0x2af8e687e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e68809d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e68809d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e6880d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af8e6867a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e6867a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e6867e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e6866020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e68661b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e6866340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e68664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af8e6869020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6869020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e68693a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e6869530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e68696c0"/>
        <function-ref name="get" scoped="" ref="0x2af8e6869850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e68699e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e6869b70"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e6869d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e6868020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e68681b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e6868340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e68684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af8e6868760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e6868760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e6868ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e6868c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e6868e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e6867020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e68671b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e6867340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e68674d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e6867660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e68677f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af8e685d760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e685d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e685dae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e685dc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e685de00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e685c020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e685c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af8e6860dd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e6860dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e685f180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e685f310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e685f4a0"/>
        <function-ref name="get" scoped="" ref="0x2af8e685f630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e685f7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e685f950"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e685fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e685fc70"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e685fe00"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e685e020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e685e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e6864bf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e6864bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e68604e0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e68624e0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e6862e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e68629a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e68609a0"/>
        <function-ref name="start" scoped="" ref="0x2af8e6863a80"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6862020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e6864360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e6864360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e68646e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af8e685e440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e685e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e685e7c0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e685e950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e685eae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e685ec70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e685ee00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e685d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e685d1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e685d340"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e685d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e5a71b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5a71b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a6e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5a6c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5a6ee70"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5a6c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2af8e5ad8b90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2af8e5ad8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5ad79d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5ad54e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5ad5020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5ad59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af8e5a69610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5a69610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5a675b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5ad8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5a67a70"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5ad84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e687a5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e687a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6877e50"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6879e00"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e6877800"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6877340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e6876340"/>
        <function-ref name="start" scoped="" ref="0x2af8e6879430"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6879940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af8e6874d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af8e6874d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6870670"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6871550"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e6870020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6871a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e6870b30"/>
        <function-ref name="start" scoped="" ref="0x2af8e6872b60"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6871090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e68769b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e68769b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e68757e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e68741b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e6875ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e6874670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af8e5b019c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2af8e5b019c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5b01d40"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5b00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af8e5b05850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e5b05850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5b01090"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5b03090"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e5b03a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5b03550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e5b01550"/>
        <function-ref name="start" scoped="" ref="0x2af8e5b046a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5b04bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e5b0a2f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e5b0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5b06870"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5b09e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5b08c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5b08780"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5b051e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5b06cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5b08300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5b09020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5b06260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5b094f0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5b099c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af8e5b24a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2af8e5b24a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5b24d80"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5b23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af8e5b29640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2af8e5b29640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5b25c40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5b261e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5b25020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5b26ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5b24590"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5b24110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5b26660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5b28390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5b25630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5b28860"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5b28d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e5b2f150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e5b2f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5b2b700"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5b2ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5b2ca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5b2c5b0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5b29090"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5b2bba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5b2c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5b2fd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5b2b0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5b2e2a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5b2e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af8e5b212b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af8e5b212b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5b1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e5b1f690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5b1f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5b1e5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5b1d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5b1ea70"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5b1d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e5b168c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e5b168c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5b78cf0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5b79320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5b780d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5b79c20"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5b76660"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5b761e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5b797a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5b7a4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5b786e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5b7a9b0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5b7ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af8e5b822c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2af8e5b822c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5b7f870"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5b81e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5b80c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5b80780"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5b7d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5b7fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5b80300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5b81020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5b7f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5b814f0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5b819c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af8e5b66c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af8e5b66c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b65210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af8e5b70020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af8e5b70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af8e5b6ac70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af8e5b6ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b68020"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af8e5b64670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af8e5b64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b649f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af8e5b5de50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af8e5b5de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5c210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af8e5b64e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af8e5b64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b63210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af8e5b502f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af8e5b502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b50670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b50800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af8e5b522f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af8e5b522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b52670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b52800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af8e5b6f370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af8e5b6f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af8e5b58670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af8e5b58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b589f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af8e5b532f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af8e5b532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b53670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b53800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af8e5b68c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af8e5b68c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b67020"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af8e5b67c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af8e5b67c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b66020"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af8e5b5e670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af8e5b5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af8e5b60e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af8e5b60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5f210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af8e5b63670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af8e5b63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b639f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b63b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af8e5b72970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af8e5b72970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af8e5b72cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af8e5b72e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af8e5b71030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af8e5b6dd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af8e5b6dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af8e5b6c370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af8e5b6c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af8e5b57a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af8e5b57a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b57df0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af8e5b6cac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af8e5b6cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af8e5b53ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af8e5b53ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b53e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af8e5b6d060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af8e5b6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af8e5b59e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af8e5b59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b58210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af8e5b67480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af8e5b67480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b67800"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b67990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af8e5b68480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af8e5b68480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b68800"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b68990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af8e5b71950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af8e5b71950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b71cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af8e5b5ae50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af8e5b5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b59210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af8e5b5c670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af8e5b5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5c9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af8e5b59670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af8e5b59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b599f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af8e5b51ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af8e5b51ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b51e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af8e5b52ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af8e5b52ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b52e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af8e5b5f670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af8e5b5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5f9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af8e5b5ce50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af8e5b5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5a210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af8e5b55ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af8e5b55ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b55e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af8e5b61670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af8e5b61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b619f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b61b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af8e5b50ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af8e5b50ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e5b50e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e5b4f020"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b4f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e5b4f340"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e5b4f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af8e5b71300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af8e5b71300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b71680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af8e5b6a490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af8e5b6a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b6a810"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b6a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af8e5b66480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af8e5b66480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b66800"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b66990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af8e5b5ee50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af8e5b5ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5d210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af8e5b63e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af8e5b63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b61210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af8e5b5d670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af8e5b5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af8e5b65670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af8e5b65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b659f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af8e5b70670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af8e5b70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b709f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af8e5b65e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af8e5b65e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b64210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5b73d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5b73d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5b720a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5b72230"/>
        <function-ref name="request" scoped="" ref="0x2af8e5b723c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5b72550"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5b726e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af8e5b6b160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af8e5b6b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af8e5b6be00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af8e5b6be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af8e5b552f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af8e5b552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b55670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b55800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af8e5b56ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af8e5b56ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b56e50"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af8e5b6d6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af8e5b6d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af8e5b562f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af8e5b562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b56670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b56800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af8e5b512f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af8e5b512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b51670"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b51800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af8e5b5fe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af8e5b5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5e210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af8e5b5a670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af8e5b5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b5a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b5ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af8e5b70cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af8e5b70cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af8e5b6f9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af8e5b6f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af8e5b61e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af8e5b61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b60210"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af8e5b6b7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af8e5b6b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af8e5b6bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af8e5b60670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af8e5b60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b609f0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b60b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af8e5b58e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af8e5b58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af8e5b57610"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b577a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af8e5b4f7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af8e5b4f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af8e5b4fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af8e5b4fcb0"/>
        <function-ref name="write" scoped="" ref="0x2af8e5b4fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af8e5b4e020"/>
        <function-ref name="readDone" scoped="" ref="0x2af8e5b4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2af8e5b9ba20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af8e5b9ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af8e5b9bda0"/>
        <function-ref name="rand32" scoped="" ref="0x2af8e5b99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2af8e5b98920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2af8e5b98920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5b9b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5b9f9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5b9f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5b9fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2af8e5b93a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af8e5b93a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af8e5b93da0"/>
        <function-ref name="rand32" scoped="" ref="0x2af8e5b92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2af8e5b95940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2af8e5b95940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5b93560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5b95080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5b95080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5b95400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e5b9daa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e5b9daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5b9de20"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5b96020"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5b961b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5b96340"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5b964d0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5b96660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5bf7020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5bf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5bf73a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5bf7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5bf76c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5bf7850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5bf79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5bf8220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5bf8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5bf85a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5bf8730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5bf88c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5bf8a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5bf8be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5bf3e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5bf3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5bf2210"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5bf23a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5bf2530"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5bf26c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5bf2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5bf6a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5bf6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5bf6da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5bf3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5bf31b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5bf3340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5bf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2af8e5bf18f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af8e5bf18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af8e5bf1c70"/>
        <function-ref name="rand32" scoped="" ref="0x2af8e5bf1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5bf3750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5bf3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5bf3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e5bf0170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5bf0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5bf04f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5bf0680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5bf0810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2af8e5bf2ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e5bf2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5bf2e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5bf1020"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5bf11b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5bf1340"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5bf14d0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5bf1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e5bf4690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e5bf4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5bf4a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5bf4ba0"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5bf4d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5bdf020"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5bdf1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5bdf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5bd8950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5bd8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5bd8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5bdbaa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5bdbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5bdbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2af8e5bd8200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2af8e5bd8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5bd8580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5bd33f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5bd33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5bd3770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5bd4b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5bd4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5bd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5bd7e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5bd7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5bd41e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e5bd3a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5bd3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5bd3df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5bd2020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5bd21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2af8e5bd4570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2af8e5bd4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5bd48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5c1d020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5c1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5c1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5c1d6b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5c1d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c1da30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c1dbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c1dd50"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c1b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5c21960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5c21960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c21ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c21e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c20030"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c201c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c20350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af8e5c20ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5c20ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c1f0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c1f230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c1f3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c1f550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c1f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5c205f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5c205f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5c20970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5c22cb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5c22cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5c210a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5c21230"/>
        <function-ref name="request" scoped="" ref="0x2af8e5c213c0"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5c21550"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5c216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af8e5c1fa50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e5c1fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5c1fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af8e5c1e170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af8e5c1e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5c1e4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5c1e680"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c1e810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c1e9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5c1eb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5c13d70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5c13d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c12180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c12310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c124a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c12630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c127c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5c12b10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5c12b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5c11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2af8e5c5cdb0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2af8e5c5cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5c5b180"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5c5b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af8e5c112f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5c112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e5c11670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e5c11800"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e5c11990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e5c11b20"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e5c11cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e5c11e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af8e5c15a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af8e5c15a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c15da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c14020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c141b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c14340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c144d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af8e5c10b70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af8e5c10b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af8e5c0f020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af8e5c0f1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af8e5c0f340"/>
        <function-ref name="dequeue" scoped="" ref="0x2af8e5c0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e5c10170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5c10170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c104f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5c10680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5c10810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2af8e5c15370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2af8e5c15370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5c156f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af8e5c177b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af8e5c177b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5c17b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5c17cc0"/>
        <function-ref name="request" scoped="" ref="0x2af8e5c17e50"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5c16020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5c161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2af8e5c164d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2af8e5c164d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c16850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c169e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c16b70"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c16d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af8e5c14840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af8e5c14840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5c14bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af8e5c13020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af8e5c13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5c133a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5c13530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c136c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c13850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5c139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5cb6dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5cb6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5cb5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af8e5cb5410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af8e5cb5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af8e5cb5790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af8e5cb5920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af8e5cb5ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af8e5cb5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e5caab80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e5caab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e5ca9020"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e5ca91b0"/>
        <function-ref name="start" scoped="" ref="0x2af8e5ca9340"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5ca94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5ca8860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5ca8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5ca8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5ca8d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5ca7020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5ca71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5ca7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5ca7690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5ca7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5ca7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5caecf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5caecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5cab0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5cab230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5cab3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5cab550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5cab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af8e5caa080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5caa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af8e5caa400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af8e5caa590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af8e5caa720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af8e5caa8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2af8e5ca9800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2af8e5ca9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5ca9b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5ca9d10"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5ca8020"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5ca81b0"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5ca8340"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5ca84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2af8e5ca7d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2af8e5ca7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e5ca6180"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e5ca6310"/>
        <function-ref name="start" scoped="" ref="0x2af8e5ca64a0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5ca6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5cab980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5cab980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5cabd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af8e5ca32d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5ca32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af8e5ca3650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af8e5ca37e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af8e5ca3970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af8e5ca3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e5ca4580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e5ca4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5ca4900"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5ca4a90"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5ca4c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5ca4db0"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5c9a020"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5c9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5c95d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5c95d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c94180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c94310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c944a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c94630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c947c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5c962a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5c962a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c96620"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c967b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c96940"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c96ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c96c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af8e5c95020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af8e5c95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af8e5c953a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2af8e5c95530"/>
        <function-ref name="getRetries" scoped="" ref="0x2af8e5c956c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af8e5c95850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af8e5c959e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5c90dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5c90dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c8f180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c8f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c8f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c8f630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c8f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2af8e5c852a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2af8e5c852a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5c85620"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5c857b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2af8e5c8d650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2af8e5c8d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5c89c40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5c8b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5c89020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5c8bae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5c88590"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5c88110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5c8b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5c8c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5c89630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5c8c860"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5c8cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5c933b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5c933b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5c93730"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c938c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5c93a50"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5c93be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5c93d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2af8e5c8faf0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2af8e5c8faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5c8fe70"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5c8e030"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5c8e1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5c8e350"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5c8e4e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5c8e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e5c88a30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5c88a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5c88db0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5c87020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5c871b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2af8e5c8e9a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5c8e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5c8ed20"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5c8d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5c8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af8e5c90080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af8e5c90080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af8e5c90400"/>
        <function-ref name="setRetries" scoped="" ref="0x2af8e5c90590"/>
        <function-ref name="getRetries" scoped="" ref="0x2af8e5c90720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af8e5c908b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af8e5c90a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af8e5cd5350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af8e5cd5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af8e5cd56d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af8e5cd5860"/>
        <function-ref name="isState" scoped="" ref="0x2af8e5cd59f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af8e5cd5b80"/>
        <function-ref name="requestState" scoped="" ref="0x2af8e5cd5d10"/>
        <function-ref name="forceState" scoped="" ref="0x2af8e5cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e5cd3750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e5cd3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5ccfc40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5cd11e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5ccf020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5cd1ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5cce590"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5cce110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5cd1660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5cd2390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5ccf630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5cd2860"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5cd2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5d2f690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5d2f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5d2fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5d31860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5d31860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5d31be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d31d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d2f020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5d2f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5d2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2af8e5d2d610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af8e5d2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af8e5d2d990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af8e5d2db20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af8e5d2dcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2af8e5d2de40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af8e5d2c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af8e5d2c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af8e5d2c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af8e5d2c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af8e5d2c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af8e5d2c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af8e5d2c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af8e5d2cb10"/>
        <function-ref name="sync" scoped="" ref="0x2af8e5d2cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2af8e5d2b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af8e5d2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af8e5d32830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af8e5d32830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e5d32bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e5d32d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e5d31020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e5d311b0"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e5d31340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e5d314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2af8e5d33b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2af8e5d33b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2af8e5d32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2af8e5d2a1f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2af8e5d2a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af8e5d2a570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af8e5d2a700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af8e5d2a890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af8e5d2aa20"/>
        <function-ref name="setCca" scoped="" ref="0x2af8e5d2abb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af8e5d2ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5d348f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5d348f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5d34c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5d34e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d33020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d331b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5d33340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e5cbcda0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5cbcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5cbb180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5cbb310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5cbb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5cbb630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5cbb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af8e5cbac00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af8e5cbac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5cb9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af8e5d2fce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af8e5d2fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af8e5d2e0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af8e5d2e230"/>
        <function-ref name="getRssi" scoped="" ref="0x2af8e5d2e3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af8e5d2e550"/>
        <function-ref name="getPower" scoped="" ref="0x2af8e5d2e6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af8e5d2e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2af8e5d2b4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af8e5d2b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af8e5d2b950"/>
        <function-ref name="changed" scoped="" ref="0x2af8e5d2bae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af8e5d2bc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2af8e5d2be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af8e5d2eb70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af8e5d2eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d2d020"/>
        <function-ref name="getHeader" scoped="" ref="0x2af8e5d2d1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af8e5d2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5cba020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5cba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5cba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e5d29d30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e5d29d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e5d280e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e5d28270"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e5d28400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e5d28590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e5d28720"/>
        <function-ref name="get" scoped="" ref="0x2af8e5d288b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e5d28a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e5d271b0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5d28bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e5d28d60"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e5d27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5cb92d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5cb92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5cb9650"/>
        <function-ref name="source" scoped="" ref="0x2af8e5cb97e0"/>
        <function-ref name="address" scoped="" ref="0x2af8e5cb9970"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5cb9b00"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5cb9c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5cb9e20"/>
        <function-ref name="type" scoped="" ref="0x2af8e5d34020"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5d341b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5d34340"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5d344d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5d34660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2af8e5d290f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2af8e5d290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af8e5d29470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af8e5d29600"/>
        <function-ref name="request" scoped="" ref="0x2af8e5d29790"/>
        <function-ref name="granted" scoped="" ref="0x2af8e5d29920"/>
        <function-ref name="isOwner" scoped="" ref="0x2af8e5d29ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af8e5d97580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af8e5d97580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af8e5d97900"/>
        <function-ref name="stopDone" scoped="" ref="0x2af8e5d97a90"/>
        <function-ref name="start" scoped="" ref="0x2af8e5d97c20"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5d97db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2af8e5d82060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af8e5d82060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af8e5d82e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2af8e5d81380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5d937e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5d937e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5d93b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5d93cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d93e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d92030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5d921c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af8e5d931d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af8e5d931d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5d93550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af8e5d90640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af8e5d90640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af8e5d909c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af8e5d90b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af8e5d90ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af8e5d90e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2af8e5d88e50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af8e5d88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5d87c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d84590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d84110"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5d85580"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5d85a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5d945c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5d945c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5d94940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af8e5d91b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af8e5d91b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5d90020"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5d901b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5d90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2af8e5d8faa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af8e5d8faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5d8e890"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d8b1e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d8cd10"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5d8c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5d8c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5d92470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5d92470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5d927f0"/>
        <function-ref name="source" scoped="" ref="0x2af8e5d92980"/>
        <function-ref name="address" scoped="" ref="0x2af8e5d92b10"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5d92ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5d92e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5d91020"/>
        <function-ref name="type" scoped="" ref="0x2af8e5d911b0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5d91340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5d914d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5d91660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5d917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2af8e5d8bc50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af8e5d8bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af8e5d89a40"/>
        <function-ref name="eventTime" scoped="" ref="0x2af8e5d88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af8e5de8e60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af8e5de8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5de7210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af8e5deba00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af8e5deba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5debd80"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5dea020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5dea1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5dea340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5dea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2af8e5def910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af8e5def910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af8e5dee740"/>
        <function-ref name="eventTime" scoped="" ref="0x2af8e5deec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2af8e5d784d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af8e5d784d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5d77390"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d76c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d76800"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5d77c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5d761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5d74340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5d74340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5d746c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5d74850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d749e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d74b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5d74d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af8e5deb2c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af8e5deb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5deb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2af8e5dea800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2af8e5dea800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5deab80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5dead10"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5de9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5de91b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5de9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2af8e5de6130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af8e5de6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5de5750"/>
        <function-ref name="clear" scoped="" ref="0x2af8e5de5e80"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5de5020"/>
        <function-ref name="set" scoped="" ref="0x2af8e5de45d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2af8e5de96a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2af8e5de96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5de9a20"/>
        <function-ref name="source" scoped="" ref="0x2af8e5de9bb0"/>
        <function-ref name="address" scoped="" ref="0x2af8e5de9d40"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5de8020"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5de81b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5de8340"/>
        <function-ref name="type" scoped="" ref="0x2af8e5de84d0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5de8660"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5de87f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5de8980"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5de8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5ded6b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5ded6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5deda30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2af8e5dde020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af8e5dde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5dde3a0"/>
        <function-ref name="isSet" scoped="" ref="0x2af8e5dde530"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5dde6c0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5dde850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2af8e5dded30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2af8e5dded30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5ddd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af8e5ddb0f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af8e5ddb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af8e5ddb470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af8e5ddb600"/>
        <function-ref name="led1On" scoped="" ref="0x2af8e5ddb790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af8e5ddb920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af8e5ddbab0"/>
        <function-ref name="get" scoped="" ref="0x2af8e5ddbc40"/>
        <function-ref name="led1Off" scoped="" ref="0x2af8e5ddbdd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af8e5dda4d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5dda020"/>
        <function-ref name="led0On" scoped="" ref="0x2af8e5dda1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af8e5dda340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2af8e5ddc060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af8e5ddc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5ddcc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2af8e5d7ec10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af8e5d7ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5d7da40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5d7a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5d7a020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5d7b350"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5d7b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5d73020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5d73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5d733a0"/>
        <function-ref name="source" scoped="" ref="0x2af8e5d73530"/>
        <function-ref name="address" scoped="" ref="0x2af8e5d736c0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5d73850"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5d739e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5d73b70"/>
        <function-ref name="type" scoped="" ref="0x2af8e5d73d00"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5df2020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5df21b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5df2340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5df24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2af8e5df2b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af8e5df2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af8e5df1990"/>
        <function-ref name="eventTime" scoped="" ref="0x2af8e5def020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2af8e5de7550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2af8e5de7550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5de79d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2af8e5de2270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af8e5de2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af8e5de1800"/>
        <function-ref name="clear" scoped="" ref="0x2af8e5de0020"/>
        <function-ref name="isValid" scoped="" ref="0x2af8e5de10d0"/>
        <function-ref name="set" scoped="" ref="0x2af8e5de0750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e5eef020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5eef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5eef3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5eef530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5eef6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5eef850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5eef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5eefc30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5eefc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5eee020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5eee1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5eee340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5eee4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5eee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5eee8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5eee8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5eeec30"/>
        <function-ref name="source" scoped="" ref="0x2af8e5eeedc0"/>
        <function-ref name="address" scoped="" ref="0x2af8e5eed020"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5eed1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5eed340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5eed4d0"/>
        <function-ref name="type" scoped="" ref="0x2af8e5eed660"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5eed7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5eed980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5eedb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5eedca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e5eec020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e5eec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5eec3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5eec530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5eec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e699fcb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e699fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e699e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e699e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e699e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e699e550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e699e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e699e930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e699e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e699ecb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e699ee40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e699c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e699c1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e699c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e699c590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e699c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e699c910"/>
        <function-ref name="source" scoped="" ref="0x2af8e699caa0"/>
        <function-ref name="address" scoped="" ref="0x2af8e699cc30"/>
        <function-ref name="destination" scoped="" ref="0x2af8e699cdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e699b020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e699b1b0"/>
        <function-ref name="type" scoped="" ref="0x2af8e699b340"/>
        <function-ref name="setType" scoped="" ref="0x2af8e699b4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e699b660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e699b7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e699b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e699bc10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e699bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e699a020"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e699a1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e699a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6991660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6991660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e69919e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6991b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6991d00"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6990020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e69901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af8e6990460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e6990460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e69907e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6990970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6990b00"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6990c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6990e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e698f0e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e698f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e698f460"/>
        <function-ref name="source" scoped="" ref="0x2af8e698f5f0"/>
        <function-ref name="address" scoped="" ref="0x2af8e698f780"/>
        <function-ref name="destination" scoped="" ref="0x2af8e698f910"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e698faa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e698fc30"/>
        <function-ref name="type" scoped="" ref="0x2af8e698fdc0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e698e020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e698e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e698e340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e698e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5e4e940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5e4e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5e4ecc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5e4ee50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5e4b020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5e4b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5e4b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2af8e5e82400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5e82400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5e827a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5e82930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5e82ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5e82c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5e82de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af8e5e834b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e5e834b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5e83850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5e839e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5e83b70"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5e83d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5e82020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2af8e5e80720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5e80720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5e80aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5e80c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5e80dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5e7f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5e7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2af8e5e7f480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2af8e5e7f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5e7f800"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5e7f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2af8e5e7fc60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2af8e5e7fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5e7d020"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5e7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e5e81060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5e81060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5e813e0"/>
        <function-ref name="source" scoped="" ref="0x2af8e5e81570"/>
        <function-ref name="address" scoped="" ref="0x2af8e5e81700"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5e81890"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5e81a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5e81bb0"/>
        <function-ref name="type" scoped="" ref="0x2af8e5e81d40"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5e80020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5e801b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5e80340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5e804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af8e5ee8830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af8e5ee8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5ee74c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e5ee7b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e5ee7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5ee5970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e5ee4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e5ee5e30"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e5ee4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af8e5ee3e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af8e5ee3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e45e3bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af8e460e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e5ee0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af8e5ecf680" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.JoinReqDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ecf680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5f1cc40"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5f1d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5f1c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5f1dae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5f1a590"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5f1a110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5f1d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5f1e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5f1c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5f1e860"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5f1ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af8e5ec6020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5ec6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5ec2630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5ec4a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5ec3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5ec34a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5ec1020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5ec2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5ec3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5ec6c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5ec2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5ec4110"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5ec45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e5ebfa00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e5ebfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5ebb2a0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5ebd2a0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e5ebdc20"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5ebd760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e5ebb760"/>
        <function-ref name="start" scoped="" ref="0x2af8e5ebe890"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5ebeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e5ebf1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e5ebf1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e5ebf530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e69f14f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e69f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e69eedb0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e69efda0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e69ee760"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e69ee2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e69ed2a0"/>
        <function-ref name="start" scoped="" ref="0x2af8e69ef3d0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e69ef8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e69f2b10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e69f2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e69f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af8e69d8da0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e69d8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e69d7180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e69d7310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e69d74a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e69d7630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e69d77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af8e69da450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e69da450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e69da7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e69da960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e69daaf0"/>
        <function-ref name="get" scoped="" ref="0x2af8e69dac80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e69dae10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e69d9020"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e69d91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e69d9340"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e69d94d0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e69d9660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e69d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af8e69d9a80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e69d9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e69d9e00"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e69d8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e69d81b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e69d8340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e69d84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e69d8660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e69d87f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e69d8980"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e69d8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af8e69cea80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af8e69cea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af8e69cee00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af8e69cd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af8e69cd1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af8e69cd340"/>
        <function-ref name="fired" scoped="" ref="0x2af8e69cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af8e69d0190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af8e69d0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e69d0510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af8e69d06a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e69d0830"/>
        <function-ref name="get" scoped="" ref="0x2af8e69d09c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e69d0b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e69d0ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2af8e69d0e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e69cf030"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e69cf1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2af8e69cf350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af8e69cf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e69d4020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e69d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e69d2870"/>
        <function-ref name="fired" scoped="" ref="0x2af8e69d3840"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e69d2220"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e69d3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e69d2d30"/>
        <function-ref name="start" scoped="" ref="0x2af8e69d4e30"/>
        <function-ref name="stop" scoped="" ref="0x2af8e69d3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af8e69d5660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af8e69d5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af8e69d59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af8e69cf770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af8e69cf770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af8e69cfaf0"/>
        <function-ref name="getControl" scoped="" ref="0x2af8e69cfc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af8e69cfe10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af8e69ce020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af8e69ce1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af8e69ce340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af8e69ce4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af8e69ce660"/>
        <function-ref name="setControl" scoped="" ref="0x2af8e69ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af8e69eb890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e69eb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e69e70d0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e69e90d0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e69e9a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e69e9590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e69e7590"/>
        <function-ref name="start" scoped="" ref="0x2af8e69ea6e0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e69eabf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af8e69e40a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af8e69e40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e69e1b30"/>
        <function-ref name="fired" scoped="" ref="0x2af8e69e39f0"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e69e14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e69e1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e69e0020"/>
        <function-ref name="start" scoped="" ref="0x2af8e69e3020"/>
        <function-ref name="stop" scoped="" ref="0x2af8e69e3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af8e69e7c00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af8e69e7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af8e69e6a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af8e69e54e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af8e69e5020"/>
        <function-ref name="overflow" scoped="" ref="0x2af8e69e59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af8e5f33cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2af8e5f33cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5f320a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5f32230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af8e5eb4b10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af8e5eb4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5f33390"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5f35360"/>
        <function-ref name="startAt" scoped="" ref="0x2af8e5f35ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5f35820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af8e5f33850"/>
        <function-ref name="start" scoped="" ref="0x2af8e5f36970"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5f36e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e5eb9470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e5eb9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5eb5a20"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5eb7020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5eb7da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5eb7920"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5eb44a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5eb4020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5eb74a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5eb8090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5eb5410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5eb8560"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5eb8a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af8e5f24650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2af8e5f24650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af8e5f249d0"/>
        <function-ref name="runTask" scoped="" ref="0x2af8e5f24b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af8e5f293b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2af8e5f293b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5f25870"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5f27e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5f26c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5f26780"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5f241e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5f25cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5f26300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5f27020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5f25260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5f274f0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5f279c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af8e5f30d70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af8e5f30d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5f2a470"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5f2d9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5f2c7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5f2c320"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5f2adb0"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5f2a910"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5f2de50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5f2f9a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5f2cdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5f2d020"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5f2d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e5f18b30" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5f18b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5f17020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5f171b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5f17340"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5f174d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5f17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5f178b0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5f178b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5f17c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5f17dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5f16020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5f161b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5f16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5f16590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f16590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5f16910"/>
        <function-ref name="source" scoped="" ref="0x2af8e5f16aa0"/>
        <function-ref name="address" scoped="" ref="0x2af8e5f16c30"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5f16dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5f15020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5f151b0"/>
        <function-ref name="type" scoped="" ref="0x2af8e5f15340"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5f154d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5f15660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5f157f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5f15980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e5f15c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e5f15c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5f14020"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5f141b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5f14340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6a1b3b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6a1b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6a1b730"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6a1b8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6a1ba50"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6a1bbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6a1bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e6a1a020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e6a1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e6a1a3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e6a1a530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6a1a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6a1a850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e6a1a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e6a1ac30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a1ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e6a19020"/>
        <function-ref name="source" scoped="" ref="0x2af8e6a191b0"/>
        <function-ref name="address" scoped="" ref="0x2af8e6a19340"/>
        <function-ref name="destination" scoped="" ref="0x2af8e6a194d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e6a19660"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e6a197f0"/>
        <function-ref name="type" scoped="" ref="0x2af8e6a19980"/>
        <function-ref name="setType" scoped="" ref="0x2af8e6a19b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e6a19ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e6a19e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e6a18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e6a182b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e6a182b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e6a18630"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e6a187c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e6a18950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6abf640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6abf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6abf9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6abfb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6abfce0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6abfe70"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6abd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af8e6abd2e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e6abd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6abd660"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6abd7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6abd980"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6abdb10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6abdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e6abc020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e6abc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e6abc3a0"/>
        <function-ref name="source" scoped="" ref="0x2af8e6abc530"/>
        <function-ref name="address" scoped="" ref="0x2af8e6abc6c0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e6abc850"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e6abc9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e6abcb70"/>
        <function-ref name="type" scoped="" ref="0x2af8e6abcd00"/>
        <function-ref name="setType" scoped="" ref="0x2af8e6abb020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e6abb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e6abb340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e6abb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5f0bdd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5f0bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5f0a180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5f0a310"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5f0a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5f0a630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5f0a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5f0b800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5f0b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5f0bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5f0aa10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f0aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5f0ad90"/>
        <function-ref name="source" scoped="" ref="0x2af8e5f09020"/>
        <function-ref name="address" scoped="" ref="0x2af8e5f091b0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5f09340"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5f094d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5f09660"/>
        <function-ref name="type" scoped="" ref="0x2af8e5f097f0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5f09980"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5f09b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5f09ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5f09e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e5f06530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5f06530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5f068b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5f06a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5f06bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5f06d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5f05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5f05270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5f05270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5f055f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5f05780"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5f05910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5f05aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5f05c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5f05e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f05e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5f04220"/>
        <function-ref name="source" scoped="" ref="0x2af8e5f043b0"/>
        <function-ref name="address" scoped="" ref="0x2af8e5f04540"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5f046d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5f04860"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5f049f0"/>
        <function-ref name="type" scoped="" ref="0x2af8e5f04b80"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5f04d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5f03020"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5f031b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5f03340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e5f035d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e5f035d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5f03950"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5f03ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5f03c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6aa1920" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6aa1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6aa1ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6aa1e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6aa0020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6aa01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6aa0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e6aa0590" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e6aa0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e6aa0910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e6aa0aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6aa0c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6aa0dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e6a9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e6a9f270" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a9f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e6a9f5f0"/>
        <function-ref name="source" scoped="" ref="0x2af8e6a9f780"/>
        <function-ref name="address" scoped="" ref="0x2af8e6a9f910"/>
        <function-ref name="destination" scoped="" ref="0x2af8e6a9faa0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e6a9fc30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e6a9fdc0"/>
        <function-ref name="type" scoped="" ref="0x2af8e6a9e020"/>
        <function-ref name="setType" scoped="" ref="0x2af8e6a9e1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e6a9e340"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e6a9e4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e6a9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e6a9e8f0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e6a9e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e6a9ec70"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e6a9ee00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e6a9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6a94b20" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6a94b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6a93020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6a931b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6a93340"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6a934d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6a93660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af8e6a93910" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e6a93910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6a93c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6a93e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6a92020"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6a921b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6a92340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e6a92590" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a92590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e6a92910"/>
        <function-ref name="source" scoped="" ref="0x2af8e6a92aa0"/>
        <function-ref name="address" scoped="" ref="0x2af8e6a92c30"/>
        <function-ref name="destination" scoped="" ref="0x2af8e6a92dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e6a90020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e6a901b0"/>
        <function-ref name="type" scoped="" ref="0x2af8e6a90340"/>
        <function-ref name="setType" scoped="" ref="0x2af8e6a904d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e6a90660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e6a907f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e6a90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5eff710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5eff710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5effa90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5effc20"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5effdb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5efe020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5efe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5eff140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5eff140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5eff4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5efe400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5efe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5efe780"/>
        <function-ref name="source" scoped="" ref="0x2af8e5efe910"/>
        <function-ref name="address" scoped="" ref="0x2af8e5efeaa0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5efec30"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5efedc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5efd020"/>
        <function-ref name="type" scoped="" ref="0x2af8e5efd1b0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5efd340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5efd4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5efd660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5efd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e5efa020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e5efa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e5efa3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5efa530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5efa6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e5efa850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e5efa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5efac30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5efac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5ef9020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5ef91b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5ef9340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5ef94d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5ef9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5ef98b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5ef98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5ef9c30"/>
        <function-ref name="source" scoped="" ref="0x2af8e5ef9dc0"/>
        <function-ref name="address" scoped="" ref="0x2af8e5ef8020"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5ef81b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5ef8340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5ef84d0"/>
        <function-ref name="type" scoped="" ref="0x2af8e5ef8660"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5ef87f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5ef8980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5ef8b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5ef8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e5ef7020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e5ef7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e5ef73a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e5ef7530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e5ef76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6a75140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6a75140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6a754c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6a75650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6a757e0"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6a75970"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6a75b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e6a75d50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e6a75d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e6a74100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e6a74290"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6a74420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6a745b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e6a74740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e6a74990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e6a74990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e6a74d10"/>
        <function-ref name="source" scoped="" ref="0x2af8e6a73020"/>
        <function-ref name="address" scoped="" ref="0x2af8e6a731b0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e6a73340"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e6a734d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e6a73660"/>
        <function-ref name="type" scoped="" ref="0x2af8e6a737f0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e6a73980"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e6a73b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e6a73ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e6a73e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af8e6a72120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af8e6a72120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af8e6a724a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af8e6a72630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af8e6a727c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af8e6b1b390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af8e6b1b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6b1b710"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6b1b8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6b1ba30"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6b1bbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6b1bd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af8e6b1a060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af8e6b1a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af8e6b1a3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e6b1a570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e6b1a700"/>
        <function-ref name="cancel" scoped="" ref="0x2af8e6b1a890"/>
        <function-ref name="sendDone" scoped="" ref="0x2af8e6b1aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af8e6b1ac70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e6b1ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e6b19020"/>
        <function-ref name="source" scoped="" ref="0x2af8e6b191b0"/>
        <function-ref name="address" scoped="" ref="0x2af8e6b19340"/>
        <function-ref name="destination" scoped="" ref="0x2af8e6b194d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e6b19660"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e6b197f0"/>
        <function-ref name="type" scoped="" ref="0x2af8e6b19980"/>
        <function-ref name="setType" scoped="" ref="0x2af8e6b19b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e6b19ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e6b19e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e6b18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2af8e5fa2390" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e5fa2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2af8e5fa1340"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af8e5fa28a0"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af8e5fa2a30"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5fa2bc0"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af8e5fa2d50"/>
        <function-ref name="start" scoped="" ref="0x2af8e5fa1020"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af8e5fa11b0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5fa2710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2af8e6afb9f0" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2af8e6afb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6af6020"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6af8510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e6af7300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e6af8e10"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e6af6920"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e6af64a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6af8990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e6afa670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e6af7910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e6afab40"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6af8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2af8e6b00570" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2af8e6b00570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6afca20"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6afd020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e6afdda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e6afd920"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e6afb4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e6afb020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6afd4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e6aff1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e6afc410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e6aff680"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6affb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2af8e6b050a0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2af8e6b050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6b01630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6b04b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e6b02920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e6b024a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e6b00020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e6b01ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6b02020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e6b05c90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e6b01020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e6b041b0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6b04680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2af8e6b07de0" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af8e6b07de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af8e6b06c70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af8e6b06310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af8e6b064a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6b06630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af8e6b067c0"/>
        <function-ref name="start" scoped="" ref="0x2af8e6b06950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af8e6b06ae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2af8e6b06180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af8e6af3220" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6af3220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6aef6e0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6af1c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e6af0a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e6af05f0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e6aee020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e6aefb60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6af0170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e6af3e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e6aef0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e6af1340"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6af1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af8e6aed8b0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6aed8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6ae9cf0"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6aea310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e6ae90d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e6aeac10"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e6ae8660"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e6ae81e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6aea790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e6aeb4c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e6ae96e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e6aeb990"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6aebe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af8e6ae5020" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af8e6ae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e6ae2630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e6ae4a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e6ae3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e6ae34a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e6ae1020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e6ae2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e6ae3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e6ae5c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e6ae2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e6ae4110"/>
        <function-ref name="stop" scoped="" ref="0x2af8e6ae45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af8e5f9f780" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af8e5f9f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af8e5f9fb00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af8e5f9fc90"/>
        <function-ref name="getPayload" scoped="" ref="0x2af8e5f9fe20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af8e5f9e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af8e5f9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af8e5f9f1b0" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af8e5f9f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af8e5f9f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af8e5f9e400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af8e5f9e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af8e5f9e780"/>
        <function-ref name="source" scoped="" ref="0x2af8e5f9e910"/>
        <function-ref name="address" scoped="" ref="0x2af8e5f9eaa0"/>
        <function-ref name="destination" scoped="" ref="0x2af8e5f9ec30"/>
        <function-ref name="setSource" scoped="" ref="0x2af8e5f9edc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af8e5f9d020"/>
        <function-ref name="type" scoped="" ref="0x2af8e5f9d1b0"/>
        <function-ref name="setType" scoped="" ref="0x2af8e5f9d340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af8e5f9d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af8e5f9d660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af8e5f9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af8e5f920a0" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af8e5f920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af8e460e460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af8e460d020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af8e5f8f630"/>
        <function-ref name="fired" scoped="" ref="0x2af8e5f91b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af8e5f90920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af8e5f904a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af8e5f8d020"/>
        <function-ref name="gett0" scoped="" ref="0x2af8e5f8fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af8e5f90020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af8e5f92c90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af8e5f8f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af8e5f911b0"/>
        <function-ref name="stop" scoped="" ref="0x2af8e5f91680"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2af8e45d75d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e460ddd0" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e460ddd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af8e4606c10" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af8e4609420" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2af8e46072b0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af8e4608bd0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af8e4607020" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2af8e4608420" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2af8e4605c60" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2af8e46053e0" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af8e4609c00" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2af8e460c970" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af8e460c6f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2af8e46062b0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af8e4607c50" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af8e4606020" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2af8e460b4d0" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af8e460b250" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e460bcd0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af8e45d0970" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af8e45d0020" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af8e45d03a0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e45d06d0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af8e45e8160" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e45eaae0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e45eae10" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af8e45ea270" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af8e45edcd0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e45eda50" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af8e45ec3a0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e45eed70" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af8e45ec110" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMALink" loc="1:TDMALink.nc">
      <function command="" provided="0" name="isMaster" ref="0x2af8e45d5e60" loc="5:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startDone" ref="0x2af8e45d37d0" loc="6:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af8e45d3550" loc="6:TDMALink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startSlave" ref="0x2af8e45d5070" loc="3:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2af8e45d22a0" loc="7:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af8e45d2020" loc="7:TDMALink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMaster" ref="0x2af8e45d9900" loc="2:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e45d5760" loc="4:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2af8e45e4300" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
              <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e45d6870" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2af8e45d6bc0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e45e4020" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2af8e45f5040" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45f7d90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2af8e45febc0" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45fe940" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2af8e45e1020" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2af8e45e1ae0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45e1860" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2af8e45fc600" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45fc020" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2af8e45fc370" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2af8e45ff020" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45fd9e0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2af8e45fdd30" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2af8e45f8ae0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45f8860" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2af8e45f6e60" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45f68b0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2af8e45f6bd0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af8e45cd1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2af8e45f9890" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45f9610" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2af8e45f3600" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af8e45f3020" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2af8e45f3370" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2af8e45f2490" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af8e462ad00" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2af8e465eb40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2af8e4660de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2af8e465e420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2af8e4660700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2af8e465f5a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2af8e4641900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2af8e4660020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2af8e465fcc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2af8e41eeb70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2af8e41a6c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2af8e46b4020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2af8e46b5cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2af8e4696390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af8e4655910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af8e4654390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2af8e46b4890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2af8e46b37b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2af8e46b5560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2af8e46b3020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2af8e4696b30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2af8e46b6350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2af8e46b6da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af8e4655910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af8e4654390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af8e46b6b20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af8e4655910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af8e4654390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2af8e46a60e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2af8e46c7630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2af8e46c73b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2af8e46c62a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af8e46c6020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af8e46c8be0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af8e46c83e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2af8e46a6a90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2af8e46a6810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2af8e46ad3e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2af8e46add60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af8e46adae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2af8e46ac790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2af8e46ac510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2af8e46ab2a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2af8e46ab020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af8e46ab990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af8e469d810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2af8e469a2a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2af8e469a020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2af8e469b020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af8e46a2ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2af8e469b760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af8e469f9b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2af8e469d120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af8e469f270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af8e469e0e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2af8e469e9f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af8e469e770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2af8e469acb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2af8e469aa30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af8e46eb9f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2af8e45382b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2af8e432c420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af8e40e8020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2af8e40e7020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2af8e40e8790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2af8e40fa020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2af8e40fa870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2af8e47fbab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af8e47fb830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2af8e4821020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af8e47fad30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af8e47febd0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e47fa350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e47fcbb0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e47fcbb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e47fcdf0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e47fcdf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2af8e4816430" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e47fcdf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af8e4817710" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af8e4817a90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e4817dc0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2af8e4816180" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e47fcdf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af8e4812ab0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e48124b0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e48127e0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af8e4813bf0" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af8e48142a0" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4814020" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af8e48132b0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4814c40" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af8e4813020" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2af8e482d870" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2af8e482d070" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e480eb90" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e480eb90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e480edd0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e480edd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2af8e4833980" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4833700" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2af8e48325f0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e480edd0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4832370" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2af8e481a040" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e481cd90" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2af8e481e020" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e47fd8b0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2af8e47fdc40" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2af8e481c020" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e481dc40" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2af8e481d410" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e481edd0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2af8e481d180" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2af8e4819020" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e481ad70" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2af8e4848020" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2af8e4847110" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2af8e4848e60" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2af8e4848790" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af8e484a720" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2af8e4849820" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2af8e48495a0" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af8e484a020" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2af8e4825980" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2af8e4825cf0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2af8e4847aa0" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2af8e4847820" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e484ae10" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2af8e48ba0e0" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e48ba8f0" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2af8e48db4a0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2af8e48db220" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af8e48b5400" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af8e48b5180" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2af8e48b42b0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af8e48b5c70" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2af8e48b4020" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af8e48ce020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af8e48d18f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e48d1c30" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2af8e48cbcc0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af8e48cba40" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2af8e48c9ae0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af8e48c9510" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e48c9850" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2af8e48ca930" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2af8e48f33b0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af8e48f2a60" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e48f2da0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af8e48f3110" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2af8e48cb270" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af8e48cc950" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af8e48cc020" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e48cc360" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af8e48cc6b0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2af8e4923af0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2af8e49494e0" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2af8e4945610" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af8e4914e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af8e49132b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2af8e494c350" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2af8e494d350" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2af8e4924980" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2af8e494db40" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2af8e494cdb0" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2af8e493fb70" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2af8e493f350" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2af8e4964680" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e4964400" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2af8e4939c00" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2af8e496daf0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2af8e4979790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2af8e4957530" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48ec080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2af8e48ec8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af8e49572b0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48ec080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2af8e48ec8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2af8e497b870" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2af8e4955a40" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48e7080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2af8e48e78c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af8e49557c0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48e7080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2af8e48e78c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2af8e4972e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2af8e496f480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2af8e4955020" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48e9020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2af8e48e97b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2af8e4954270" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48e7080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2af8e48e78c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2af8e4950020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2af8e4951d30" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2af8e4951610" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2af8e4972740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2af8e4956780" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48e9020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2af8e48e97b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af8e4956500" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48e9020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2af8e48e97b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2af8e4952420" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2af8e49715d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2af8e4952e00" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2af8e4952b80" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2af8e494f910" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2af8e497b0e0" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2af8e4974840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2af8e4976790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2af8e497a7e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2af8e4972020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2af8e4977020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2af8e4971cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2af8e4950800" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2af8e48cfdd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2af8e48ee680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2af8e49704c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2af8e496d350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2af8e4954c10" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2af8e4954990" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2af8e496c4d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e496c250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2af8e4957d10" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af8e48ec080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2af8e48ec8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2af8e497a020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2af8e4977770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2af8e4974020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af8e4914e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af8e49132b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af8e4975cf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af8e4914e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af8e49132b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2af8e49752a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af8e48fb020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af8e48fb440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af8e4975020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af8e48fb020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af8e48fb440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2af8e496cd90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2af8e4970cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2af8e494f070" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2af8e496fbe0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2af8e4976020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2af8e4979020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e4992410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e4992410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e4992650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e4992650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af8e4990020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e4992650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af8e498f120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af8e49908a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af8e498f880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2af8e4987020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2af8e49877d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2af8e4986020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2af8e4985020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2af8e49837d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af8e4982020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2af8e49867b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af8e4982b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2af8e4982910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2af8e4988850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2af8e4985800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2af8e4983020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2af8e4a04390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e4a04be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af8e49f17c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af8e4a20020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2af8e4a1cb10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af8e4a1c890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af8e49f2020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af8e4a1e020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2af8e4a1b490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af8e4a20760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af8e49f1020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2af8e4a1d770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2af8e49f27c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af8e49f40e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2af8e4a1e7a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2af8e4a1c020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2af8e4a1d020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af8e49f4810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af8e4cc3020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af8e4cc3750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af8e4cc50e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af8e4cc25e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af8e4cc57e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af8e4cc3e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af8e4cc62b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af8e4cc6980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2af8e4d1e460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2af8e4d1ecc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af8e4d47a40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2af8e4d68e00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2af8e4d65020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2af8e4d68570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2af8e4d666d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2af8e4d65950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2af8e4d5a020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af8e4d61090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af8e4d5bd20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af8e4d61090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2af8e4d5c020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2af8e4d5cb20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af8e4d61090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af8e4d5c8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af8e4d61090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2af8e4d5b470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2af8e4d61090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2af8e4de7770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af8e4e107a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e10520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2af8e4e0f840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e0f5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af8e4e0ad30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e0a730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e4e0aa60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af8e4e0dda0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2af8e4e0cce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e0c720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e4e0ca50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2af8e4e45ad0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e45850" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2af8e4e42cd0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e42a50" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2af8e4e41020" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e43ce0" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af8e4e35460" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e38e70" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e4e351d0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af8e4e2fa40" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e2f440" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e4e2f770" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af8e4e30b80" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af8e4e34790" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e34510" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af8e4e31c70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e31690" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af8e4e319e0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2af8e4e95670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e95060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2af8e4e953e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2af8e4e97820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2af8e4e966d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e4e960d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2af8e4e96440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2af8e4eb9960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2af8e4eb91f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2af8e4ecbc30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2af8e4ec00e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2af8e4ebed00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e4ebea80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2af8e4ec0960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2af8e4ec17e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e4ec1560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2af8e4ebd5b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2af8e4ebe270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2af8e4ec9780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2af8e4ec80e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2af8e4eccd90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2af8e4eccb10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2af8e4ec8c60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af8e4ec89e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2af8e4ec68f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2af8e4ec45b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e4ec4330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2af8e4ec30b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2af8e4ec4e00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e500f7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e500f7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e500f9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e500f9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2af8e500a840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e500f9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e500a5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2af8e50089d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5008750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2af8e500c5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e500c370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af8e5006d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e500f9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5006710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2af8e5006a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e500f9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2af8e5044e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5044810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2af8e5044ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2af8e5041020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5042d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2af8e5044020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2af8e5045560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2af8e50452e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2af8e5064430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e50641b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2af8e5066720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e50664a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2af8e5069dc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2af8e5069b40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2af8e50692a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2af8e5069020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2af8e5068880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2af8e5068600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2af8e50655e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5065360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2af8e505e630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2af8e505e020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af8e505e3a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2af8e502a0c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e502baa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2af8e502bdf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2af8e506f6d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e506f0d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2af8e506f440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2af8e502aba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2af8e3a0a110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e502a920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2af8e5070600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e5070380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2af8e502b2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e502b020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2af8e5071720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e50714a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2af8e506b0b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e506ede0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af8e5084360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e508dd40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2af8e50840d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af8e50836a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2af8e5080e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af8e5080060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2af8e50808a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e5080bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af8e5081840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af8e5081260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af8e50815b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2af8e5084df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2af8e5084b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2af8e5078de0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5078b20" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2af8e5078320" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2af8e4591ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2af8e458ec70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5078020" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2af8e5076130" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2af8e458d7c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2af8e458b660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5077de0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2af8e508a070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2af8e50870e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2af8e50898f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2af8e508c730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2af8e508b7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2af8e508a8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2af8e5089120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2af8e508b020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2af8e50bb7f0" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2af8e5073ce0" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2af8e50bb020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2af8e50bcc40" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2af8e50bc4a0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2af8e507c9f0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2af8e507c770" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2af8e5073500" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2af8e5073280" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2af8e50f6020" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2af8e50f89f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2af8e50f8d40" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2af8e50f9960" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2af8e50f9020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2af8e50fa820" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2af8e50fac00" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2af8e50ff2a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af8e50ff020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2af8e50f8270" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2af8e50fdd70" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2af8e50fdaf0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2af8e50fe3e0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2af8e50fe160" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2af8e50f5270" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2af8e50fa020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2af8e50fbc50" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2af8e50f6a20" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2af8e50feb60" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2af8e503f360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2af8e503fac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2af8e50fd390" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2af8e5100850" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2af8e50ff9f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2af8e50fb530" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2af8e50f4c60" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af8e50f4c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2af8e50f1560" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2af8e50f02f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af8e50f4c60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2af8e50f1ce0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2af8e50f0060" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af8e50f4c60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af8e5111520" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e51112a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af8e5110030" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e5111d80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2af8e50e4640" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2af8e503f360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2af8e503fac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e50e68b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e50e68b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e50e6af0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af8e512a800" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af8e512c7e0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2af8e512be10" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af8e512b840" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2af8e512bb80" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af8e512b020" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2af8e5128020" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af8e512d680" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af8e512d400" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e50e6af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af8e512c020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2af8e511a0e0" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2af8e5119070" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2af8e511a8c0" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2af8e511c860" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2af8e511c280" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af8e45cd590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2af8e511c5d0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af8e45cd970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2af8e510a760" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af8e5116840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af8e51209b0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2af8e5116250" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e51165a0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af8e5113020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af8e5114150" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2af8e51149c0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e5114d10" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af8e511e7e0" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af8e511e020" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2af8e511f720" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2af8e5122dc0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2af8e52cc030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af8e52cb1f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2af8e52cc9d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af8e52cc750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2af8e52cd7a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af8e52ff020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af8e52fdac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af8e53007c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2af8e52fd2a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2af8e52fd020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2af8e5300020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2af8e52ff820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2af8e53f02b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2af8e53f0b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2af8e53ef390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2af8e541fb60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e541f580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e541f8d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2af8e541add0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e541a490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e541a7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af8e541ab30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af8e541c6b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e541c0d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e541c420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2af8e5421730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af8e4592090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e5421150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e54214a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2af8e541d2c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e541e930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af8e541ec80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af8e541d020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af8e5459cf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2af8e5459380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2af8e5459710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e5459a50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af8e54573c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2af8e54566a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2af8e5456a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e5456d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af8e5457110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2af8e545dc90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2af8e545da10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2af8e54d1120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af8e48fb020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af8e48fb440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2af8e54d9d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e54d9af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2af8e54d42a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e54d4020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2af8e54d6610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af8e54d4d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e54d4ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2af8e55a29d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2af8e5556420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2af8e55a9620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af8e55a93a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2af8e555faf0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2af8e55a6c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2af8e55ae5e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2af8e5557540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2af8e55552d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2af8e5559500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2af8e5559280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2af8e555ba10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2af8e55b0070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2af8e55a7550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2af8e55a2270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2af8e55aac30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2af8e559d350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2af8e55999d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2af8e555e980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2af8e55b28b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2af8e55af1f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2af8e5559dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2af8e55608c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2af8e55aa460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af8e55aa1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2af8e5560190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2af8e55a64d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2af8e55a1190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2af8e559cb00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2af8e5599270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2af8e55a5b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2af8e55a18c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2af8e55a9db0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2af8e559f390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2af8e555c0e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2af8e55ac7e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2af8e55a07b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2af8e55a4ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2af8e55afde0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2af8e55afb60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2af8e559b2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2af8e55aba60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2af8e55a5420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2af8e555f390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af8e492db90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2af8e492c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af8e555f110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af8e492db90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2af8e492c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2af8e55b2190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2af8e555b2a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af8e555b020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2af8e55b09d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af8e55b0750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2af8e559fb60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2af8e555ab50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2af8e555c850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2af8e55ab2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2af8e55ab020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af8e3a0b520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2af8e555e270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2af8e55a0020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2af8e55a4350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2af8e55a7cc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2af8e55ac020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2af8e55aed30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2af8e55559f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2af8e5557c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2af8e559ba40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2af8e555a3c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af8e555a140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2af8e559db10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2af8e5556b50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2af8e559c350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af8e57ee620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af8e57ee3a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af8e57dabc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2af8e57da280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2af8e57da5f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e57da920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af8e5841960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af8e58413a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af8e58416d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e582a730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e582a730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af8e582a970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e582a970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2af8e58274d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e582a970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af8e5827250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af8e582a970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2af8e58995e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2af8e58da9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2af8e58da020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2af8e58da750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2af8e58db7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2af8e58db020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af8e58ded40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2af8e58812a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af8e3a0b160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5881020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2af8e58832a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af8e40e0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5883020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af8e587e2a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e587e020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af8e58802a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af8e5880020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af8e45df3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af8e45dea00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af8e5a09910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af8e5a09910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af8e5a06270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af8e3a0b920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2af8e5b9c600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af8e5b9c600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2af8e5b982a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af8e40ef980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af8e5b9c600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2af8e5b98020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af8e5b9c600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
