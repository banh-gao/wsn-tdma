<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af6f78f89a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af6f78a3cd0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af6f78a3cd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af6f7af0590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="TDMALink" scoped="" ref="0x2af6f78f3540"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f794c550"/></to>
    </wire>
    <wire loc="61:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2af6f794c550"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7b24640"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="TDMALinkSnd" scoped="" ref="0x2af6f79081a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f7b2aae0"/></to>
    </wire>
    <wire loc="58:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f7b2aae0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f7b23490"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="TDMALinkRcv" scoped="" ref="0x2af6f7903b50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f7b2a490"/></to>
    </wire>
    <wire loc="55:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f7b2a490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f92c0650"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2af6f7912240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f92b3870"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af6f92b3870"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f79137e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8350020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8fd6dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8ef4b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8f13750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8eb4080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8da6130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8c79620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8bb5820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f84db7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f9a8ca40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f87bf020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8412d60"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f81c0e60"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8147780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f97c1ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f7bd72a0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af6f7af0c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af6f74083a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af6f74083a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af6f785e140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2af6f7b0e6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f79470f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f79470f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f7943360"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7b0edc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2af6f7943a70"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2af6f7944910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2af6f7944910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f7965850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2af6f7942190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f795c4a0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2af6f7942870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f7ffec40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f7965850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f79917e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af6f797fde0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af6f7990020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2af6f75b5080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2af6f798f360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2af6f79d25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7aa06d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2af6f79e3020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7a99b30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2af6f79c9700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7a7f160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2af6f79f5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7aa5cb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2af6f79d0aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7a80480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2af6f79fb020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7aa5020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2af6f79f1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7ab4cb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2af6f79de5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7ac5220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2af6f79d4b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7a3d9d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2af6f79f7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7a8e2f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2af6f79d93e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7a8f610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2af6f79e25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7a90220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2af6f79c8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7a9e7a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2af6f79f4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7ac22f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2af6f79e1be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7aaf6d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2af6f79cb890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7a9fac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2af6f79c2060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a28c80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2af6f79fbda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7ac4610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2af6f79b80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7a82020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2af6f79dda50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7abd6d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2af6f79e7690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7a88a90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2af6f79f6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7aac7a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2af6f79cccf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7a89de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2af6f79d81f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7aaeac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2af6f79f3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7abb7a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2af6f79df0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7aa7b30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2af6f79fab80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7abcac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2af6f79f8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f7a96cb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2af6f79f9a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7ab4020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2af6f79da570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af6f7a96020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2af6f79db020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2af6f7ab6b30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2af6f7a25c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a255b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2af6f7a242f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2af6f7ad4aa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2af6f7a24940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2af6f7ad1260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7a87930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a28c80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7a85020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a255b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7a7e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a28c80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7a7d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a255b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7a9d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a28c80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7a9cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a255b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2af6f7a42c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2af6f7a412f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2af6f7ad19f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2af6f7a41940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2af6f7ad0240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7a95b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7a932f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7ab3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7ab27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7aab610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7aaac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7aa4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7aa22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7ac1160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7ac07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7aba610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7ab9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f7ad8b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2af6f7ad62f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f785c040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2af6f78595d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2af6f74782d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f92c0650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8333210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f7b21800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2af6f7b42470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f8335020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f8335020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f8355680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af6f7b3a880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af6f8fb5020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af6f8fb5020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af6f8fb0080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2af6f7b53de0"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af6f90abc50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af6f90abc50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af6f9112b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2af6f7b41290"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af6f90afaa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2af6f7b2f0b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f90b45c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRandom" scoped="" ref="0x2af6f7b4eca0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af6f8ebba20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af6f8ebba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af6f8eb3a20"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2af6f7b51710"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91ef680"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91ef680"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2af6f7b4aa70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9238b30"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f9238b30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9d3c3b0"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2af6f7b49820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f922b800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f922b800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8333210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2af6f7b48020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9226530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f9226530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9dc2920"/></to>
    </wire>
    <wire loc="43:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2af6f7b48d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f921f140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f921f140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8333210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2af6f7b47400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f921a020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f921a020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9d96140"/></to>
    </wire>
    <wire loc="51:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f7b68d40"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f92c3900"/></to>
    </wire>
    <wire loc="14:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f92c3900"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f9e28de0"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af6f7bda490"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f7bfea70"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2af6f7bdd680"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f7bd9cc0"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af6f7bd9cc0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f81187a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af6f7bfe220"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af6f7bf17c0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af6f7bf17c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af6f811a060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2af6f8148430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2af6f7bfcd50"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af6f811a060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af6f7c5d560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af6f7c11660"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af6f811b0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af6f811b0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af6f7c60020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f811a800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f8115080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f81156f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f811dc00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f811dc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f7c634d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f811c8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f9463c70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f9463c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f80322c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f7c5a6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f811a800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f945dd70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f7c611d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af6f7c5c3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f9463020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f9463020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8033020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f7c84c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f945d5d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f945d5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af6f80341d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f7c611d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f7d0cdc0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2af6f7c5d560"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2af6f7d0a890"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af6f7c60020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af6f7d0b6d0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f7c634d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f7d0c020"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f7d08020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f7c5a6c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af6f7d09230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2af6f7c5c3f0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f7d03290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f7c84c20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2af6f7d08690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f7d268b0"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f7d268b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af6f7d1c020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f7d03c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f7fd19a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f7fd19a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af6f7fcc9d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f7d00dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fea2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f7d203b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af6f7d18dc0"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f7d26080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f7d1f710"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af6f7d3b860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2af6f7e103f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2af6f7e103f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f0a100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2af6f7d15800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2af6f7e0e3f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2af6f7e0e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f05d10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af6f7d38800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2af6f7e0c3f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2af6f7e0c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f00740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2af6f7d36800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2af6f7e3c3f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2af6f7e3c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ecb740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2af6f7d34800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2af6f7e3e3f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2af6f7e3e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ed0d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2af6f7db0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e84d10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2af6f7dcecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ec0740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2af6f7e1e3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eb2740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2af6f7e2d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f3cd10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2af6f7e1c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ead100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2af6f7dcacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eb7d10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2af6f7de7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ef3740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2af6f7e07020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f33100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2af6f7df6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f45740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2af6f7e163f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ed9740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2af6f7e3a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f21d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2af6f7e253f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f37740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2af6f7daacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e76d10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2af6f7e143f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ed4100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2af6f7da6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ea2100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2af6f7dc3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eded10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2af6f7de1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ee5740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2af6f7e00020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f25100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2af6f7e24020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f37740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2af6f7db4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e8e740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2af6f7dd2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e93260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2af6f7df0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ed0d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2af6f7e203f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eb2740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2af6f7e333e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f4ad10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2af6f7e273e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f37740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2af6f7deccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ec63f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2af6f7dd7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f05d10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2af6f7dfa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f4e100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2af6f7e313e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f45740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2af6f7e123e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f0f740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2af6f7daecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e7f740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2af6f7dcccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ebb100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2af6f7dfe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f21d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2af6f7dc7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eb2740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2af6f7de5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eee100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2af6f7e05020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f2fd10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2af6f7df4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f40100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2af6f7dbae10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e613f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2af6f7dd6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e9ed10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2af6f7dc1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ed9740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2af6f7ddf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ee0100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2af6f7e373e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f1c740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2af6f7e2b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f37740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2af6f7ddb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f0f740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2af6f7db2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e88100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2af6f7dd0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e8fd10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2af6f7deecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ecb740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2af6f7e2f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f40100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2af6f7de9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ef9e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2af6f7e09020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f00740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2af6f7df8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f4ad10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2af6f7daccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e7a100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2af6f7dfc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f1c740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2af6f7da8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ea7740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2af6f7dc5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ead100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2af6f7de3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eead10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2af6f7e03020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f2a740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2af6f7df2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f3cd10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2af6f7db6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e5de00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2af6f7dd4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7e98740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2af6f7dbfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7ed4100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2af6f7ddd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f14d10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2af6f7e183d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eded10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2af6f7e353e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f4e100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2af6f7e1a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eded10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2af6f7dd9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f0a100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2af6f7e293e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f3cd10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2af6f7e573f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7f25100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2af6f7e22060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af6f7eb7d10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af6f7fcc9d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f7fc5b80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f7ff4c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f7ffec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f7fedc40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2af6f7fe2910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2af6f8001360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2af6f8001360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f7ffb710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2af6f7fe8b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2af6f80006a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2af6f80006a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f80221d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2af6f7fe7e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2af6f7fff9c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2af6f7fff9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f801ed70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8026930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2af6f7e07020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8021480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2af6f7e05020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f801c020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2af6f7e03020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f9462be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f7d268b0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f9462440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8032ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8032ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f80d1400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f806c8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f945dd70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f80322c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f80d2020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f80d2020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f986c3a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2af6f80341d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af6f806ab60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8033020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f80d3210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f80d3210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f97be540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f80d1400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f986a8b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2af6f8069c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f7d203b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f80d1cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f806c8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8056a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f80d1400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f80f59d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f80d27a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f80d27a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f986cb20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f80ccb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f7d26080"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9869210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f80d1cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af6f98699d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af6f97c0330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2af6f9867c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f98373a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f80ccb20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af6f9837b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af6f80f5400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f98360f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f80f59d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f9836d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f80f4720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2af6f8147de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2af6f8148430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af6f813d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af6f78a3cd0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2af6f813d740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f8135320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f8135320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f81bd4e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f81bd4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f81ed2f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f8134370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f815db40"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f8132020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f81c4720"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8133530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f81c69e0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f81619f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f81c3400"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f8132c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f81c5020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f81c0e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f81adc30"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f81b8940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f8167490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f81c3d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f81ba020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f81c2a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f81bc4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af6f81b8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2af6f83486c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f81ba020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f82e5830"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f81bc4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f82e5110"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2af6f82e4760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af6f81b8020"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f81ea8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f81b8940"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f82e2590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f81b8940"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f8321c80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f81b8940"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af6f82e30e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af6f81e35c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2af6f82e39d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2af6f81e6130"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2af6f81dd8e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2af6f8325b70"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2af6f81dc060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f7bd9cc0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2af6f8322ca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2af6f7c11660"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2af6f8253e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2af6f8203d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2af6f8212400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2af6f824e0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2af6f82e0c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2af6f82df480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f8355680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f837a340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f8334050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f83547f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f83547f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f8fdcda0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af6f8333df0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af6f8351880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af6f8351880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af6f8fdac00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f834f760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f834f760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f90548f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f836d9e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d41550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d41550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d33a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f83618a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f838cbb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f838cbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8373700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8333210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8353b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8353b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8fda020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8330800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f834d810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f834d810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8374670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f8350020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f90552d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f836caf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f8d3d660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f8d3d660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f8d2faf0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f837a340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f8fcab80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8384d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f9052830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2af6f8381500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2af6f9053b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f838f970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8375740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8375740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8373700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8fca080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8374670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f8d436e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af6f838a790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af6f83722e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2af6f83722e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2af6f8fb5020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f838ba80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8373080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8373080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8d42a70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2af6f90490f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8379430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f9050860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8376350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8376350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8f40ca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f904f690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f83750f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f83750f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f8f3fa50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f904b4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f8b2cb30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f904fce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d38d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f904eb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d34640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af6f904d610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af6f8415550"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af6f8415550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af6f840b1a0"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2af6f904a1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f83b6990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f83b6990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f83b0020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f9049d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f8fcab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2af6f8fc7d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8d42a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8d33020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8f40ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8f35a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8fca080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8fc22d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2af6f8378e70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8f405f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8f405f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2af6f8f35370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f8d436e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f8d35c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8379430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8f42cb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8f42cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8f377b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2af6f8378160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8f41960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f8f41960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2af6f8f364d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2af6f8377560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2af6f8f3d170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2af6f8f3d170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2af6f8f33020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f8f3fa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f8f34840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af6f8fc7d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f83719f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f83719f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f83b2690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8f3c6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8f18220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f8f18220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8f16a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8f17020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8fb62a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f8fb62a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8fb33b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8fb5d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8fcecf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f8fcecf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af6f8fc8860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8fc8860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f83b8600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f83b8600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f83b12e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f8f3c020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8fcb980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8fcb980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af6f8fc7690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f8fc7690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8efbaa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8efbaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8ef7e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f8ef8950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f83b6300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f83b6300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8c7d7c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f8c7d7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8c77020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f83b0e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8423020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8423020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f840c470"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2af6f83a73f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2af6f84214b0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2af6f84214b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2af6f8409020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af6f83ae6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f8bc06d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2af6f83ae6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f8c805c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af6f8c805c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f8c79ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2af6f8bc06d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f8bb3020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2af6f839f2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2af6f8bbd020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2af6f8bbd020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f8bb38c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2af6f83a6060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8bbdcb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8bbdcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8bb2650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f839de20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8395430"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af6f83a6e80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af6f8ebba20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2af6f83dabc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f8ebdaa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f8ebdaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f83a5670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2af6f83d65d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2af6f83d7660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2af6f83d8730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2af6f8410890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2af6f8408500"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2af6f8448790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d8220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d8220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d22e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af6f84469d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af6f85d8370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af6f85d8370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85cb1b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2af6f8445ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2af6f85d5ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2af6f85d5ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85bc710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2af6f8443020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2af6f85d2380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2af6f85d2380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f8606d70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2af6f843ec00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2af6f85ef210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2af6f85ef210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2af6f872da30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af6f842bb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8a80e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8a80e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af6f842abb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2af6f8a7d7b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af6f8a7d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af6f842c3b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8a7cae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8a7cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af6f842b440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8a7ead0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8a7ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f842cae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8a7b160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8a7b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8430420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8a72870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8a72870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8430cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8a70880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8a70880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af6f84385d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8a6f0a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8a6f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8432020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8a77e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8a77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f84328f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8a76670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8a76670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af6f8433e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2af6f8a62500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af6f8a62500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af6f84334a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8a63ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8a63ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f842e1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8a73e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8a73e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af6f842ea80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2af6f8a76e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af6f8a76e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f842d3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8a75e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8a75e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2af6f8474880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8ab8a80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8ab8a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2af6f8475a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8af19e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8af19e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f8439390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f8b2cb30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f844f970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f8b2bd30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f8b2bd30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f8b11310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2af6f84682f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2af6f846a410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f84db7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f84d3a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f84d3a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f98db8e0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d22e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f98da180"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f98db8e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f98d4a10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f98da180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f98cd5f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f98d4a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f9956510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af6f98c7d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f98d32a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f98d32a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9956da0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f98c99b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8552020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f8552020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f854c5f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9952020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f98bd1b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f98bd1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9950760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f995a8f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f995a8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f994fa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9959c10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9959c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2af6f79e3020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2af6f79da570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2af6f79e1be0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2af6f79d81f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2af6f79df0c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2af6f79fb020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2af6f79de5a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2af6f79fbda0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2af6f79dda50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2af6f79fab80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2af6f79db020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2af6f79f9a20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2af6f8580950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af6f7fcc9d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2af6f85d76a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85c6d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2af6f85d69d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85c1b70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2af6f85d90e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85d0710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2af6f85d3020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85b71b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85cf930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af6f7db0cc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85ca480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2af6f7de7020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85c4020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2af6f7db2cc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85c0de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af6f7dbae10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85bb930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2af6f7ddf020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8609480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2af6f7de9020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8603020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2af6f7de1020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2af6f85eb5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2af6f862c020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af6f85efe30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2af6f871ea70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f862cae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2af6f79e25a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2af6f862bda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2af6f79f7a20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2af6f862ac20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2af6f7de9020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2af6f872c610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af6f861bc40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2af6f861bc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2af6f865ba30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2af6f871d610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af6f861de70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2af6f861de70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2af6f860d9d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2af6f8611bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2af6f8651bc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2af6f8618bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2af6f8658a30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2af6f8616bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2af6f8656a30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2af6f8621d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2af6f865da30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2af6f8613bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2af6f8653a30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2af6f861abc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2af6f865aa30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2af6f860fbc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2af6f8650bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2af6f8615bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2af6f8655a30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2af6f861cc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2af6f865ca30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2af6f8612c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2af6f8652bc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2af6f8619bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2af6f8659a30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2af6f8617bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2af6f8657a30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2af6f8622dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2af6f865ea30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2af6f8614bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2af6f8654a30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af6f8a7d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8a71880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af6f8a690a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af6f8a700a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8ac5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8a60500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8a7c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af6f8a65880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8a61500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8a6b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af6f8a6d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8a7fa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8787930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8a7be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af6f8a79490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8a64c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8a79be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8a61ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af6f8a650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8a75670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8a670a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af6f8a69880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8a67880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8ac6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8a60ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af6f8a6d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af6f8a680a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8a62ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8a6f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8ac5ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8a7e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af6f8a77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8a73670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8a6a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8a6a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8a710a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8a782f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af6f8a77020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8a7b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8a63500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af6f8ac6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8a6b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af6f8a68880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af6f8a7de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8a6e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af6f8a78940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af6f8a6e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af6f8a640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8ac49b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f8783bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f8781020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f8781db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8784810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8780ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2af6f877b020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87c7770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f87c7770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af6f877e400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8801c40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8801c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f99bee70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af6f877c080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af6f88008f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af6f88008f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af6f99bb2c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8773680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8a41020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8a41020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af6f99b9440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f877bdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2af6f876e120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87bfb70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af6f99b9440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8847850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af6f99bb2c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af6f87ec020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f99bee70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f87ef430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f99bcaf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f99b15d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f99b15d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f898c2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2af6f87ec020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2af6f88a4a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f99bb8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f87ec6a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f87ec6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f88a3060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f8845a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f99b9be0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9a4ea80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f87ed6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af6f8846690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f99b2860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f99b2860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f898d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f88432a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f9a55020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f9a55020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af6f898f4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f87ed6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f88a4250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8847850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2af6f88a3c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f87ef430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8849470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f88a13e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f8845a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2af6f88a25b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2af6f8846690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f889c480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f88432a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2af6f88a1a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f8892020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f8892020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af6f888bc70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f889cc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2af6f889a2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af6f888d5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f8883150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f888ed10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af6f8884780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af6f88b4bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2af6f7e203f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2af6f88b2b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2af6f7e1c3f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af6f88b0b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2af6f7e1a3f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2af6f88aeb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2af6f7e143f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2af6f88acb20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2af6f7e163f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2af6f88b9d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2af6f896c430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af6f9a557c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f898e3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af6f9a55dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af6f8979540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af6f8979540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2af6f896c430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f99b05a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f8892020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f99b1d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f898cad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f898cad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8982c30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f898b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9a4ea80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f898c2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f8983850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f8983850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f9a88020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2af6f898f4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2af6f8988060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f898d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8984a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8984a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f9a89270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f898e3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f8988990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8982c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f9a87400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f8980570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f898b8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8987e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8982c30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2af6f8987060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f888ed10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af6f8987840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af6f888d5e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f8982020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f9a887a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9a87cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f8980570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af6f9a85500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af6f9a8b0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2af6f9a837a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2af6f8965250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2af6f888bc70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2af6f89c3d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2af6f7e203f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2af6f89c1cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2af6f7e1a3f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8aabc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af6f8ab6da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8aaeb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8aa9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af6f8aa2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af6f8aa9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8a952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8a972f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8ab3120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af6f8a9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8a982f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af6f8aadc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8aacc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8aa3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af6f8aa5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8aa7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8ab7760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8ab2aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af6f8ab1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8a9ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8ab1870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8a98ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8ab3dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af6f8a9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8aac480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8aad480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8ab6750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8a9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af6f8aa0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8a9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8a96ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8a97ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af6f8aa4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af6f8aa0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8a99ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8aa6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8a95ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8ab6100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af6f8aae370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8aab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8aa3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8aa7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8aa2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8aaa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af6f8ab5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8aaae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8ab0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af6f8ab0cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af6f8a992f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8a9bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8ab2450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8a9b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af6f8a962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8aa4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af6f8a9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af6f8ab5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8ab3770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8aa6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af6f8ab0670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af6f8aa5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af6f8a9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8afa7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8ae4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af6f8aefda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8ae8b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8ae2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af6f8adbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af6f8ae2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8ace2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8ad12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8aed120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af6f8ad6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8ad22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af6f8ae7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8ae6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8adc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af6f8adfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8ae1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8af0760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8aecaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af6f8aea120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8ad5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8aea870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8ad2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8aeddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af6f8ad8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8ae6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8ae7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8aef750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8ad9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af6f8ada670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8ad8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8acfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8ad1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af6f8add670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af6f8adae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8ad3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8ae0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8acead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8aef100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af6f8ae8370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8ae4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8adce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8ae1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8adb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8ae3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af6f8aee450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8ae3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8ae9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af6f8ae9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af6f8ad32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8ad4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8aec450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8ad42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af6f8acf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8adde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af6f8ad9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af6f8aeeaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8aed770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8ae0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af6f8ae9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af6f8adf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af6f8ad6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8acd7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2af6f8b0d8c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2af6f8b03020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2af6f8b03020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2af6f8afd210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2af6f8b61cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2af6f8b50020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2af6f8b50020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2af6f8b4e490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2af6f8afc5b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2af6f8b6ca20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2af6f8b508c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2af6f8b515a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2af6f8b515a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2af6f8b6a9e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b47b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b90020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b90020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b8dd20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2af6f8b4ed30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2af6f8b508c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f8b7d260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af6f8b7a890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af6f8b7a890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8b73060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f8b70190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2af6f79c2060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8b69c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2af6f7dd2cc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2af6f8bb99f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2af6f8bb15e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2af6f8bbb190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2af6f8bb1d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2af6f8bb07f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d8220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2af6f8ba4500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2af6f85d90e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af6f8b9d820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af6f85d8370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2af6f8b9cb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2af6f85d3020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2af6f8ba5880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2af6f85eb5a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af6f8b9a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8c44c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8c44c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8b9ad10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8c428f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8c428f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8c056d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2af6f8c412f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8c412f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af6f8c05de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2af6f8c40cc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af6f8c40cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8c04530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8c3f370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8c3f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8c04c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8c3ed00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8c3ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8b98e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8ca5c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8ca5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8b99780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8c8c7a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8c8c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8b98550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8c912f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8c912f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8c023e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8ca6480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8ca6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8c015e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8ca2e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8ca2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8c00020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8ca1670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8ca1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af6f8c02e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2af6f8ca87b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af6f8ca87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8bff9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8c8ead0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8c8ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8c00890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2af6f8c902f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8c902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8bff130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2af6f8c90ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8c90ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8bfad40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8c80df0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8c80df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8c78550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8baca00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8bab9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af6f8baa7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d41550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8b9fb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8d39480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8d39480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8d2b8b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f8bfd6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8ca4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af6f8c40020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8ca7c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af6f8c9ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af6f8ca1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8c8d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af6f8c95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af6f8ca6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8c9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af6f8c9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8ca0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af6f8c3c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8c94a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8c3cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8c91ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8c3e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af6f8c97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8ca5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8c41940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8c98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af6f8c99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8c97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af6f8c9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af6f8c99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8c92ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8c9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8c8dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af6f8ca7490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8ca4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8c9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8ca0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8c9a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8ca2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af6f8c40670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8ca8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af6f8ca8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af6f8c922f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8c93ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8c3e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8c932f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af6f8c8e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8c9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af6f8c98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8c3f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8c9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af6f8c9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af6f8c95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2af6f8c7c020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2af6f8c777c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f8cd0150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2af6f8c76020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2af6f85d8370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2af6f8c75380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2af6f85d76a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2af6f8c736b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2af6f85d69d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af6f8c72a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af6f85efe30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2af6f8cdf6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8e93d00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2af6f8e93d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8cde530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8e70ad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8e70ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8cddad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8e8d6b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8e8d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af6f8cdd3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2af6f8e8c370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2af6f8e8c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8cdc330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8cdb1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af6f8cd9d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d41550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2af6f8cdbb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2af6f8415550"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8cd43e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8e85e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8e85e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8cd4cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8e84670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8e84670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8cd5b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8e8b160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8e8b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8cd26d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8e702f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8e702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8cd3590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2af6f8e722f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2af6f8e722f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8cd3e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2af6f8e72ad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2af6f8e72ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8cd1020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8e73ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8e73ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8cd18b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2af6f8e91300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2af6f8e91300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2af6f8cc49d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f8dad7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8552020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2af6f8d26820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af6f8db64e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af6f8d28b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af6f8da0610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af6f8da0610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af6f8e402b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8da5020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f8e4f150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f8da6130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8de3020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f8de3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f9ba19d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af6f8e49640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f8e2a2f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f8e25850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f8de3870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f8de3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9b9b5f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f8e3f690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8d90b70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f8d90b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8d88610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f9ba19d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f9b85360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af6f9b95d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9ba0260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f9ba0260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9b85bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f9b979b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8d90b70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9b81dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9b8a020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9b8a020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9b7f440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9b89760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9b89760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9b7e760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9b88a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9b88a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2af6f8df8b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af6f7fcc9d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2af6f8e219c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af6f8e44a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f8e368c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8ea22c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8ea22c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8da5020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8e86c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2af6f8e90020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8e8ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2af6f8e7de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2af6f8e84e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8e8e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2af6f8e78670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8e732f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2af6f8e88c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8e87c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8e7e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2af6f8e80e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8e82670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8e92970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8e8dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8e77a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8e8cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8e8d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2af6f8e79e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8e87480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8e88480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8e91950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8e7ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2af6f8e7b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8e79670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8e71ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2af6f8e7f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2af6f8e7be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8e74ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8e81670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2af6f8e8a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8e86480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8e7ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8e82e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8e7d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8e85670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2af6f8e90670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2af6f8e8be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2af6f8e742f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8e76ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8e762f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2af6f8e712f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8e7fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2af6f8e7a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2af6f8e90cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8e8e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8e81e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2af6f8e8b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2af6f8e80670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2af6f8e78e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8e6f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2af6f8eb8920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2af6f8eb4940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f8ebf9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f8eb4080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8f13e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af6f8f17020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f8f12ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f8eff690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f8eff690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2af6f8f118f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2af6f8ebba20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8f0f170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2af6f8ef8200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2af6f8ef4570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f8ef33f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af6f8ef8950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8ef3a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8f33d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af6f8f3c6b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f8f32b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2af6f8f3c020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8f312f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8f2f170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2af6f8f2fb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2af6f8fd5410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2af6f8f7cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2af6f8fc9800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f8fc4580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f8fc4580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f8fb0dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2af6f8fb5d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2af6f8fafaf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f8ff5350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2af6f8ff5350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2af6f8fad650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f8ff3750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af6f8ff3750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8ea22c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8fae9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f8d436e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8fa8a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2af6f8fa42a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2af6f90b7580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2af6f8355680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af6f90a2060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af6f910f910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f90b37e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f9094340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2af6f90b31d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af6f910b2c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f90b0640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f838cbb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af6f90a8e50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af6f90984d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2af6f90b45c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f910d6b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f90b1b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f834d810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af6f90afaa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af6f909ec10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f90b2470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f9113020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2af6f910ba00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f920f020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f920f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9cc0cb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2af6f91096a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f920e8b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f920e8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f9cbd590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2af6f910a800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f920fc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f920fc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f9cbe930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f9106130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d41550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f9102270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f8d3d660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f90fe020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8d39480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f9206b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8552020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2af6f90fed30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af6f9208830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af6f90fc060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af6f9203e60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af6f9203e60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af6f8da0610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2af6f90fb0f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2af6f9108e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2af6f8333210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2af6f9107550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2af6f8333df0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f9cc0cb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9cb2660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f9cbe930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9cbd590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f920c020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f9cbcc10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f9cbcc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8330800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f9cb1460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f916e940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9cb00e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f916e940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f91a34b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f91a2400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f8334050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f91a1060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f91a0720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2af6f919e480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2af6f919ec60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f9250d70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af6f92493b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af6f91d9470"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f9257b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f91dfa00"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f91dfa00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9d0c890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f91df1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f9d13b10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af6f9d13b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af6f9cf6660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2af6f9d050a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9d114f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af6f9d114f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af6f9cf5020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af6f9d08c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af6f8552020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9cf1190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9cfb450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9cfb450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9cf0770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9cfaa80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9cfaa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9cefa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9cf9da0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9cf9da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2af6f9253cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af6f9243650"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f9d3c3b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9ddf640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f92378b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f9d3b020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f9d3b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9236590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f9d3bc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9d3bc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f9235c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f9d392b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f9d392b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8330800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f9dde2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f916e940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9ddd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f922bdd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f922aa10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f9dc2920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9db5b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f9225270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f9dc1590"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f9dc1590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9225e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f9dc0270"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9dc0270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f92225d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f9dbf8f0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f9dbf8f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8330800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f9db4910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f916e940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9db2590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f921f710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f921e400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2af6f9d96140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2af6f9e3c390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f921ac30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f9d96d50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f9d96d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f92198b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f9d95990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9d95990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f9217020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2af6f9d93120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2af6f9d93120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8330800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2af6f9e3b060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2af6f916e940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f9e3bc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2af6f9e260a0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e13310"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e13310"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2af6f9e21570"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e0da70"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e0da70"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2af6f9e1c9f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e06240"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e06240"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2af6f92c0c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2af6f92bf8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="7:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="21:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqDelayTimer" loc="2(TDMALinkC.JoinReqDelayTimer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="4">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2af6f79ec230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2af6f79ec5d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2af6f79ec980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2af6f79ecd00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2af6f79eb0d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2af6f79eb440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2af6f79eb7d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2af6f79ebb60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2af6f79ea020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2af6f7a3f960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2af6f7a3fd30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2af6f7e52890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2af6f7e52c40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2af6f7e51020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2af6f7e513d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2af6f7e51740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2af6f7fc6ad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2af6f7fc6ad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2af6f80515b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2af6f80805b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2af6f80a5d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2af6f85359d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2af6f85359d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2af6f854ebb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2af6f854ebb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2af6f854b3b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2af6f854b3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2af6f854b7a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2af6f854b7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2af6f854a020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2af6f854a020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2af6f854a3f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2af6f854abf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2af6f854abf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2af6f8553dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2af6f8553dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2af6f8579600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2af6f8579600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2af6f85799f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2af6f85799f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2af6f8578210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2af6f8578210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2af6f85785e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f8b8b400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f8b8b400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f8b8bb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8b8bb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f8db8a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f8db8a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f8ddfcd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f8ddfcd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f8e1c230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f8e1c230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2af6f8e1c560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2af6f9193a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2af6f918c6b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2af6f9182320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2af6f916ac80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2af6f9230060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2af6f929a840" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2af6f929abb0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2af6f92920d0" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlotId" ref="0x2af6f9292440" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2af6f78f89a0" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af6f78f89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af6f78f8d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2af6f7912240" loc="13:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2af6f7912240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f79236e0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7911c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f7924a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f79245f0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f7921020"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f7923b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f7924170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f7912e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f79230d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f7911340"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7911810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkSnd" ref="0x2af6f79081a0" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkSnd" scoped="" ref="0x2af6f79081a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7908520"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f79086b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7908840"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f79089d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7908b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALink" ref="0x2af6f78f3540" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALink" scoped="" ref="0x2af6f78f3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af6f78f91b0"/>
        <function-ref name="startDone" scoped="" ref="0x2af6f78f3a50"/>
        <function-ref name="startSlave" scoped="" ref="0x2af6f78f3be0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f78f3d70"/>
        <function-ref name="startMaster" scoped="" ref="0x2af6f78f9020"/>
        <function-ref name="isMaster" scoped="" ref="0x2af6f78f38c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TDMALinkRcv" ref="0x2af6f7903b50" loc="11:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TDMALinkRcv" scoped="" ref="0x2af6f7903b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f78f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f79137e0" loc="12:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f79137e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f7913b60"/>
        <function-ref name="source" scoped="" ref="0x2af6f7913cf0"/>
        <function-ref name="address" scoped="" ref="0x2af6f7913e80"/>
        <function-ref name="destination" scoped="" ref="0x2af6f7907030"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f79071c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f7907350"/>
        <function-ref name="type" scoped="" ref="0x2af6f79074e0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f7907670"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f7907800"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f7907990"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f7907b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af6f7948210" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7948210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7948590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af6f78a3cd0" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af6f78a3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af6f794b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f79470f0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f79470f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7947470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2af6f7942190" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2af6f7942190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7942510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f7943360" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f7943360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f79436e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2af6f7943a70" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2af6f7943a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7943df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2af6f7942870" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2af6f7942870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7942bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f795c4a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f795c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f795c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2af6f7944910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2af6f7944910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7944c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2af6f797fde0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af6f797fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af6f7961c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af6f7961310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af6f79614a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af6f7961630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af6f7961180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af6f79617c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af6f7961950"/>
        <function-ref name="initClocks" scoped="" ref="0x2af6f7961ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f7965850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f7965850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7965bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2af6f7990020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af6f7990020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af6f798f020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af6f7990530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af6f79906c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af6f7990850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af6f79903a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af6f79909e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af6f7990b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2af6f7990d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2af6f798f360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af6f798f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af6f798f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f79917e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f79917e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7991b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2af6f79d25a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2af6f79d25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79d2920"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79d2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79d2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79d2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79d1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79d11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79d1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79d14d0"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2af6f79e3020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2af6f79e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79e33a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79e3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79e36c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79e3850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79e39e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79e3b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79e3d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79e2020"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2af6f79c9700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2af6f79c9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79c9a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79c9c10"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79c9da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79c8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79c81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2af6f79f5a20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2af6f79f5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f4020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2af6f79d0aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2af6f79d0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79d0e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79cb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79cb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79cb340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2af6f79fb020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2af6f79fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79fb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79fb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79fb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79fb850"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79fb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2af6f79f1a20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2af6f79f1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f0020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2af6f79de5a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2af6f79de5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79de920"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79deab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79dec40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79dedd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79dd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79dd1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79dd340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79dd4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2af6f79d4b10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2af6f79d4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79ba020"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79ba1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79ba340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79ba4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79ba660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79ba7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79ba980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79bab10"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79baca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2af6f79f7a20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2af6f79f7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f6020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2af6f79d93e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2af6f79d93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79d9760"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79d98f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79d9a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79d9c10"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79d9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2af6f79e25a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2af6f79e25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79e2a20"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79e2bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79e2d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79e1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79e11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79e1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79e14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79e1660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2af6f79c8700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2af6f79c8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79c8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79c8c10"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79c8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79e5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79e51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2af6f79f4a20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2af6f79f4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f3020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2af6f79e1be0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2af6f79e1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79e0020"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79e01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79e0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79e04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79e0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79e07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79e0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79e0b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2af6f79cb890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2af6f79cb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79cbc10"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79cbda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79ca020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79ca1b0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2af6f79c2060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2af6f79c2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f79c23e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f79c2570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79c2700"/>
        <function-ref name="get" scoped="" ref="0x2af6f79c2890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79c2a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79c2bb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f79c2d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79c1020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f79c11b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f79c1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f79c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2af6f79fbda0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2af6f79fbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79fa180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79fa310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79fa4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79fa630"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2af6f79b80c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2af6f79b80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79b8440"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79b85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79b8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79b88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79b8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79b8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79b8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79d2020"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2af6f79dda50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2af6f79dda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79dddd0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79dc020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79dc1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79dc340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79dc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79dc660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79dc7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79dc980"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2af6f79e7690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2af6f79e7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79e7a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79e7ba0"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79e7d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79c9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79c91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2af6f79f6a20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2af6f79f6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f5020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2af6f79cccf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2af6f79cccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79d00a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79d0230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79d03c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79d0550"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2af6f79d81f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2af6f79d81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79d8570"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79d8700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79d8890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79d8a20"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79d8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2af6f79f3a20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2af6f79f3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f1020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2af6f79df0c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2af6f79df0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79df440"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79df5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79df760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79df8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79dfa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79dfc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79dfda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79de020"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2af6f79e56c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2af6f79e56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f79e5a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f79e5bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79e5d60"/>
        <function-ref name="get" scoped="" ref="0x2af6f79e4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79e41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79e4340"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f79e44d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79e4660"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f79e47f0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f79e4980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f79e4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2af6f79fab80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2af6f79fab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f9020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79f91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79f9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79f94d0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2af6f79f8a20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2af6f79f8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f79f7020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f79f71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f79f7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f79f74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f79f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2af6f79f9a20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2af6f79f9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79f8020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79f81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79f8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79f84d0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2af6f79da570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2af6f79da570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f79da8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f79daa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f79dac10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f79dada0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f79d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2af6f79db020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2af6f79db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f79db3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f79db530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f79db6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f79db850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f79db9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f79dbb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f79dbd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f79da020"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f79da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2af6f7a242f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2af6f7a242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a24670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2af6f7a25c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2af6f7a25c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2af6f7a24940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2af6f7a24940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a24cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2af6f7a255b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7a255b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a25950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f7a28c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7a28c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7a260a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7a26230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a263c0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7a26550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a266e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a26870"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7a26a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a26b90"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7a26d20"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7a25020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7a251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2af6f7a412f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2af6f7a412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a41670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2af6f7a42c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2af6f7a42c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2af6f7a41940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2af6f7a41940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a41cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2af6f7a425b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7a425b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a42950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f7a20c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7a20c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7a430a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7a43230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a433c0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7a43550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a436e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a43870"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7a43a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a43b90"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7a43d20"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7a42020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7a421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7a88a90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7a88a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a88e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7a87020"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7a871b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a87340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a874d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7a87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7a3d9d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7a3d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7a3dd50"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7a89020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a891b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7a89340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7a894d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a89660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7a897f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7a89980"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7a89b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7a85020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7a89de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7a89de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a88180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7a88310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7a884a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7a88630"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7a887c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7a87930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7a87930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7a87cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7a87e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a86020"/>
        <function-ref name="get" scoped="" ref="0x2af6f7a861b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a86340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a864d0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7a86660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a867f0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7a86980"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7a86b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7a86ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7a7f160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7a7f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a7f4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7a7f670"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7a7f800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a7f990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a7fb20"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7a7fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7a82020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7a82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7a823a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7a82530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a826c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7a82850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7a829e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a82b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7a82d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7a80020"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7a801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7a7d7a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7a7d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a7db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7a80480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7a80480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a80800"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7a80990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7a80b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7a80cb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7a80e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7a7e020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7a7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7a7e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7a7e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a7e6c0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7a7e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a7e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a7eb70"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7a7ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a7d020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7a7d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7a7d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7a7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7a9e7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7a9e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a9eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7a9ecb0"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7a9ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a9d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a9d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7a9d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7aa06d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7aa06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7aa0a50"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7aa0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7aa0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7a9f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7a9f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a9f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7a9f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7a9f660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7a9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7a9cc50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7a9cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7a9fac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7a9fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a9fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7a9e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7a9e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7a9e340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7a9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7a9d610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7a9d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7a9d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7a9db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a9dcb0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7a9de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a9c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a9c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7a9c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a9c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7a9c660"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7a9c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7a9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7a96cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7a96cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a950a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7a95230"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7a953c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a95550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a956e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7a95870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7a99b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7a99b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7a97020"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7a971b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a97340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7a974d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7a97660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a977f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7a97980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7a97b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7a97ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7a932f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7a932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7a93670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7a96020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7a96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a963a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7a96530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7a966c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7a96850"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7a969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7a95b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7a95b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7a94020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7a941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a94340"/>
        <function-ref name="get" scoped="" ref="0x2af6f7a944d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a94660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a947f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7a94980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a94b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7a94ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7a94e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7a93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7a8e2f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7a8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a8e670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7a8e800"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7a8e990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7a8eb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7a8ecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7a8ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7a90220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7a90220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7a905a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7a90730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7a908c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7a90a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7a90be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7a90d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7a8f020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7a8f1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7a8f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7ab27a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7ab27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ab2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7a8f610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7a8f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7a8f990"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7a8fb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7a8fcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7a8fe40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7a8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7ab3160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7ab3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7ab34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7ab3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7ab3800"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ab3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ab3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ab3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7ab3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ab2020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7ab21b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7ab2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7ab24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7aac7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7aac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7aacb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7aaccb0"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7aace40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7aab020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7aab1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7aab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7aaf6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7aaf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7aafa50"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7aafbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7aafd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7aae020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7aae1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7aae340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7aae4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7aae660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7aae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7aaac50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7aaac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7aa9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7aaeac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7aaeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7aaee40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7aac020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7aac1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7aac340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7aac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7aab610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7aab610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7aab990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7aabb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7aabcb0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7aabe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7aaa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7aaa1b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7aaa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7aaa4d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7aaa660"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7aaa7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7aaa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7aa5cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7aa5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7aa40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7aa4230"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7aa43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7aa4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7aa46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7aa4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7aa7b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7aa7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7aa6020"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7aa61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7aa6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7aa64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7aa6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7aa67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7aa6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7aa6b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7aa6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7aa22f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7aa22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7aa2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7aa5020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7aa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7aa53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7aa5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7aa56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7aa5850"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7aa59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7aa4b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7aa4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7aa3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7aa31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7aa3340"/>
        <function-ref name="get" scoped="" ref="0x2af6f7aa34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7aa3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7aa37f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7aa3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7aa3b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7aa3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7aa3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7aa2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7ac22f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7ac22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7ac2670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7ac2800"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7ac2990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ac2b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ac2cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7ac2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7ac5220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7ac5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7ac55a0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7ac5730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7ac58c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7ac5a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7ac5be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ac5d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7ac4020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7ac41b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7ac4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7ac07a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7ac07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ac0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7ac4610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7ac4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7ac4990"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7ac4b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7ac4cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7ac4e40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7ac2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7ac1160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7ac1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7ac14e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7ac1670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7ac1800"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ac1990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ac1b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ac1cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7ac1e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ac0020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7ac01b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7ac0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7ac04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7abb7a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7abb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7abbb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7abbcb0"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7abbe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7aba020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7aba1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7aba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7abd6d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7abd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7abda50"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7abdbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7abdd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7abc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7abc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7abc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7abc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7abc660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7abc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7ab9c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7ab9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ab8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7abcac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7abcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7abce40"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7abb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7abb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7abb340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7abb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7aba610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7aba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7aba990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7abab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7abacb0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7abae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ab9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ab91b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7ab9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ab94d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7ab9660"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7ab97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7ab9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f7ab4cb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f7ab4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7ad80a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f7ad8230"/>
        <function-ref name="captured" scoped="" ref="0x2af6f7ad83c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ad8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ad86e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f7ad8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7ab6b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7ab6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f7ab5020"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f7ab51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7ab5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f7ab54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f7ab5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ab57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f7ab5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f7ab5b10"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f7ab5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2af6f7ad62f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2af6f7ad62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ad6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af6f7ab4020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2af6f7ab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f7ab43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f7ab4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f7ab46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f7ab4850"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7ab49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af6f7ad8b40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f7ad8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7ad7020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7ad71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7ad7340"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ad74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ad7660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ad77f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7ad7980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ad7b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7ad7ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7ad7e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7ad6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2af6f7ad0240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2af6f7ad0240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ad05c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2af6f7ad4aa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2af6f7ad4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ad4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2af6f7ad1260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2af6f7ad1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ad15e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2af6f7ad19f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2af6f7ad19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f7ad1d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2af6f75b5080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af6f75b5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af6f75b5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2af6f74782d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2af6f74782d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af6f7478650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2af6f764d7d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2af6f764d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2af6f764db50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2af6f7963b50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2af6f7963b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2af6f7b1ab10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2af6f7b1a1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2af6f7b1a340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2af6f7b1a4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2af6f7b1a020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2af6f7b1a660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2af6f7b1a7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2af6f7b1a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af6f7b0edc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2af6f7b0edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7b0d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af6f7af0590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af6f7af0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af6f7af0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2af6f7b0e6c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2af6f7b0e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7b0ea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2af6f7af0c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af6f7af0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7b0e020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af6f7b0e1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af6f7b0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af6f739e1d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2af6f739e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f739e550"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f739e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af6f74083a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af6f74083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7408720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af6f74088b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af6f7408a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af6f785c040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2af6f785c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f785c3c0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f785c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2af6f78595d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2af6f78595d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af6f7859950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af6f785e140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2af6f785e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f785e4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af6f785e650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af6f785e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f7b2aae0" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f7b2aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7b2ae60"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f7b29020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7b291b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f7b29340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7b294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f7b2a490" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f7b2a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f7b2a810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f794c550" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f794c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af6f7b2a1b0"/>
        <function-ref name="startDone" scoped="" ref="0x2af6f794ca60"/>
        <function-ref name="startSlave" scoped="" ref="0x2af6f794cbf0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f794cd80"/>
        <function-ref name="startMaster" scoped="" ref="0x2af6f7b2a020"/>
        <function-ref name="isMaster" scoped="" ref="0x2af6f794c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2af6f7b42470" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2af6f7b42470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f7b427f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f7b42980"/>
        <function-ref name="start" scoped="" ref="0x2af6f7b42b10"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7b42ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2af6f7b48d30" loc="42:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2af6f7b48d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f7b470e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f7b23490" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f7b23490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7b23810"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f7b239a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7b23b30"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f7b23cc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7b23e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2af6f7b41290" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2af6f7b41290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7b39090"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f7b31970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7b314f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f7b39960"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7b39e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRandom" ref="0x2af6f7b4eca0" loc="35:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRandom" scoped="" ref="0x2af6f7b4eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af6f7b510a0"/>
        <function-ref name="rand32" scoped="" ref="0x2af6f7b51230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2af6f7b4aa70" loc="38:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2af6f7b4aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7b4adf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f7b49020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7b491b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f7b49340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7b494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqDelayTimer" ref="0x2af6f7b51710" loc="36:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqDelayTimer" scoped="" ref="0x2af6f7b51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f7b4bc40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f7b4c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f7b4b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f7b4cae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f7b4a590"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f7b4a110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f7b4c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f7b4f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f7b4b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f7b4f860"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7b4fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2af6f7b47400" loc="44:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2af6f7b47400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7b47780"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f7b47910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7b47aa0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f7b47c30"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7b47dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f7b21170" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f7b21170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f7b214f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2af6f7b2f0b0" loc="32:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2af6f7b2f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f7b2f430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2af6f7b24640" loc="22:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2af6f7b24640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TDMALink"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af6f7b231c0"/>
        <function-ref name="startDone" scoped="" ref="0x2af6f7b24b50"/>
        <function-ref name="startSlave" scoped="" ref="0x2af6f7b24ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f7b24e70"/>
        <function-ref name="startMaster" scoped="" ref="0x2af6f7b23030"/>
        <function-ref name="isMaster" scoped="" ref="0x2af6f7b249c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2af6f7b53de0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2af6f7b53de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af6f7b56c60"/>
        <function-ref name="eventTime" scoped="" ref="0x2af6f7b521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2af6f7b49820" loc="39:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2af6f7b49820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f7b49ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2af6f7b48020" loc="41:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2af6f7b48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7b483a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f7b48530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f7b486c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f7b48850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7b489e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2af6f7b3a880" loc="29:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af6f7b3a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af6f7b3ac00"/>
        <function-ref name="setRetries" scoped="" ref="0x2af6f7b3ad90"/>
        <function-ref name="getRetries" scoped="" ref="0x2af6f7b1d020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af6f7b1d1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af6f7b1d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f7b21800" loc="27:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f7b21800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f7b21b80"/>
        <function-ref name="source" scoped="" ref="0x2af6f7b21d10"/>
        <function-ref name="address" scoped="" ref="0x2af6f7b20020"/>
        <function-ref name="destination" scoped="" ref="0x2af6f7b201b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f7b20340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f7b204d0"/>
        <function-ref name="type" scoped="" ref="0x2af6f7b20660"/>
        <function-ref name="setType" scoped="" ref="0x2af6f7b207f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f7b20980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f7b20b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f7b20ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2af6f7b68d40" loc="46:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f7b68d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af6f7b45bd0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af6f7b45270"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af6f7b45400"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f7b45590"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af6f7b45720"/>
        <function-ref name="start" scoped="" ref="0x2af6f7b458b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af6f7b45a40"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2af6f7b450e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f7bda490" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f7bda490"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f7bda810"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7bda9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2af6f7bfcd50" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af6f7bfcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af6f7bd6100"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2af6f7bfe220" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af6f7bfe220"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7bfe5a0"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7bfe730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f7bd72a0" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f7bd72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7bd7620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2af6f7bdd680" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2af6f7bdd680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f7bdda00"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7bddb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f7bfea70" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f7bfea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f7bfedf0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7bd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af6f7bf17c0" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af6f7bf17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7bf1b40"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7bf1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af6f7c11660" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af6f7c11660"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7c119e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af6f7c11b70"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7c11d00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af6f7bf1020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af6f7bf11b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af6f7bf1340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7bf14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f7bd9cc0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f7bd9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f7bf20a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7bf2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f811c8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f811c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f811cc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f811ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af6f811a060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af6f811a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f811a3e0"/>
        <function-ref name="receive" scoped="" ref="0x2af6f811a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af6f811a800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f811a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f811ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af6f811b0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af6f811b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f811b440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af6f811b5d0"/>
        <function-ref name="receive" scoped="" ref="0x2af6f811b760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af6f811b8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af6f811ba80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af6f811bc10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f811bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f811dc00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f811dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f811c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f811c1b0"/>
        <function-ref name="request" scoped="" ref="0x2af6f811c340"/>
        <function-ref name="granted" scoped="" ref="0x2af6f811c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f811c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af6f7c611d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f7c611d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f7c61550"/>
        <function-ref name="configure" scoped="" ref="0x2af6f7c616e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af6f7c5d560" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af6f7c5d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7c5d8e0"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7c5da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af6f7c5a6c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f7c5a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f7c5aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af6f7c60020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af6f7c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7c603a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af6f7c60530"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7c606c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af6f7c60850"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af6f7c609e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af6f7c60b70"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7c60d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af6f7c5c3f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af6f7c5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f7c5c770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f7c5c900"/>
        <function-ref name="request" scoped="" ref="0x2af6f7c5ca90"/>
        <function-ref name="granted" scoped="" ref="0x2af6f7c5cc20"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f7c5cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f7c634d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f7c634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f7c63850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f7c639e0"/>
        <function-ref name="request" scoped="" ref="0x2af6f7c63b70"/>
        <function-ref name="granted" scoped="" ref="0x2af6f7c63d00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f7c62020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af6f7c84c20" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f7c84c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f7c58020"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f7c581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af6f7d0cdc0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f7d0cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f7d0b180"/>
        <function-ref name="configure" scoped="" ref="0x2af6f7d0b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2af6f7d0a890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2af6f7d0a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7d0ac30"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7d0adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2af6f7d08020" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f7d08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f7d083c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2af6f7d08690" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af6f7d08690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f7d08a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f7d08ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f7d08d30"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f7d07020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f7d071b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f7d07340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f7d074d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f7d07660"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f7d077f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f7d07980"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f7d07b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f7d07ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f7d07e30"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f7d06120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f7d062b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f7d06440"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f7d065d0"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f7d06760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f7d068f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f7d06a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f7d06c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f7d06da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f7d05020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f7d051b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7d05340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f7d056d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f7d05860"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f7d059f0"/>
        <function-ref name="tx" scoped="" ref="0x2af6f7d05b80"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f7d05d10"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f7d04020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f7d041b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f7d04340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f7d044d0"/>
        <function-ref name="rx" scoped="" ref="0x2af6f7d04660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f7d047f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f7d04980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f7d04b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f7d04ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f7d04e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2af6f7d0b6d0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af6f7d0b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f7d0ba70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af6f7d0bc00"/>
        <function-ref name="receive" scoped="" ref="0x2af6f7d0bd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af6f7d0a020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af6f7d0a1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af6f7d0a340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f7d0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f7d03c90" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f7d03c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f7d02ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7d004e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7d00020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7d009a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af6f7d09230" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af6f7d09230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f7d095d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f7d09760"/>
        <function-ref name="request" scoped="" ref="0x2af6f7d098f0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f7d09a80"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f7d09c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f7d0c020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f7d0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f7d0c3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f7d0c550"/>
        <function-ref name="request" scoped="" ref="0x2af6f7d0c6e0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f7d0c870"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f7d0ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af6f7d03290" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f7d03290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f7d03630"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f7d037c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f7d00dd0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f7d00dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f7cff180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f7cff310"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f7cff4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f7cff630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f7cff7c0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7cff950"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f7cffae0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f7cfe1b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f7cffe00"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f7cffc70"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f7cfe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af6f7d203b0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f7d203b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f7d20730"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f7d208c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2af6f7d26080" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f7d26080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f7d26400"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7d26590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af6f7d268b0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f7d268b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f7d26c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f7d26dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f7d25020"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f7d251b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f7d25340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f7d254d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f7d25660"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f7d257f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f7d25980"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f7d25b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f7d25ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f7d25e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f7d23020"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f7d232b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f7d23440"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f7d235d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f7d23760"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f7d238f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f7d23a80"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f7d23c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f7d23da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f7d22020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f7d221b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f7d22340"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7d224d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f7d22860"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f7d229f0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f7d22b80"/>
        <function-ref name="tx" scoped="" ref="0x2af6f7d22d10"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f7d21020"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f7d211b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f7d21340"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f7d214d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f7d21660"/>
        <function-ref name="rx" scoped="" ref="0x2af6f7d217f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f7d21980"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f7d21b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f7d21ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f7d21e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f7d20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af6f7d38800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af6f7d38800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7d38b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7d38d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7d37020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7d371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7d37340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7d374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7d37660"/>
        <function-ref name="get" scoped="" ref="0x2af6f7d377f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7d37980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7d37b10"/>
        <function-ref name="set" scoped="" ref="0x2af6f7d37ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7d37e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7d36020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7d362b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7d36440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af6f7d18dc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af6f7d18dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f7d17180"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f7d17310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2af6f7d36800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2af6f7d36800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7d36b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7d36d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7d35020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7d351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7d35340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7d354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7d35660"/>
        <function-ref name="get" scoped="" ref="0x2af6f7d357f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7d35980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7d35b10"/>
        <function-ref name="set" scoped="" ref="0x2af6f7d35ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7d35e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7d34020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7d342b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7d34440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2af6f7d34800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2af6f7d34800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7d34b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7d34d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7d33020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7d331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7d33340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7d334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7d33660"/>
        <function-ref name="get" scoped="" ref="0x2af6f7d337f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7d33980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7d33b10"/>
        <function-ref name="set" scoped="" ref="0x2af6f7d33ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7d33e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7d32020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7d322b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7d32440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2af6f7d1c020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af6f7d1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f7d1c3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f7d1c530"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f7d1c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f7d1c850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f7d1c9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f7d1cb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f7d1cd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f7d1b020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f7d1b1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f7d1b340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f7d1b4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f7d1b660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f7d1b7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f7d1ba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f7d1bc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f7d1bda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f7d1a020"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f7d1a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f7d1a340"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f7d1a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f7d1a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f7d1a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f7d1a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f7d1ab10"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7d1aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f7d19220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f7d193b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f7d19540"/>
        <function-ref name="tx" scoped="" ref="0x2af6f7d196d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f7d19860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f7d199f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f7d19b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f7d19d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f7d18020"/>
        <function-ref name="rx" scoped="" ref="0x2af6f7d181b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f7d18340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f7d184d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f7d18660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f7d187f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f7d18980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2af6f7d1f710" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f7d1f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f7d1fa90"/>
        <function-ref name="stop" scoped="" ref="0x2af6f7d1fc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2af6f7d15800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2af6f7d15800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7d15b80"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7d15d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7d39020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7d391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7d39340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7d394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7d39660"/>
        <function-ref name="get" scoped="" ref="0x2af6f7d397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7d39980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7d39b10"/>
        <function-ref name="set" scoped="" ref="0x2af6f7d39ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7d39e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7d38020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7d382b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7d38440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af6f7d3b860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af6f7d3b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7d3bbe0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7d3bd70"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7d16020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7d161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7d16340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7d164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7d16660"/>
        <function-ref name="get" scoped="" ref="0x2af6f7d167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7d16980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7d16b10"/>
        <function-ref name="set" scoped="" ref="0x2af6f7d16ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7d16e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7d15020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7d152b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7d15440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af6f7db0cc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af6f7db0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7daf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7daf230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7daf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7daf550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7daf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7daf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dafa00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dafb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dafd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dae020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dae760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af6f7dcecc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af6f7dcecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dcd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dcd230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dcd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dcd550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dcd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dcd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dcda00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dcdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dcdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dcc020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dcc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dcc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dcc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dcc760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dcc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2af6f7e1e3d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2af6f7e1e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e1e750"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e1e8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e1ea70"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e1ec00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e1ed90"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e1d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e1d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e1d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e1d660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e1d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e1d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e1db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e1dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2af6f7e2d3e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2af6f7e2d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e2d760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e2d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e2da80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e2dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e2dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e2c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e2c1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e2c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e2c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e2c660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e2c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e2c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e2cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e2cda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2af6f7e1c3f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2af6f7e1c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e1c770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e1c900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e1ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e1cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e1cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e1b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e1b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e1b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e1b660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e1b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e1b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e1bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e1bda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2af6f7dcacc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2af6f7dcacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dc80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dc8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dc83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dc8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dc86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dc8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dc8a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dc8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dc8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dc7020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dc71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dc7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dc74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dc7760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dc78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2af6f7de7020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2af6f7de7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7de73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7de7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7de76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7de7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7de79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7de7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7de7d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7de6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7de61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7de6340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7de64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7de6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7de67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7de6a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7de6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2af6f7e07020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2af6f7e07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e073a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e07530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e076c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e07850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e079e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e07b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e07d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e06020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e06340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e06660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e06a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e06c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2af6f7df6020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2af6f7df6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7df63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7df6530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7df66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7df6850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7df69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7df6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7df6d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7df5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7df51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7df5340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7df54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7df5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7df57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7df5a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7df5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2af6f7e163f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2af6f7e163f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e16770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e16900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e16a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e16c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e16db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e15020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e151b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e15340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e154d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e15660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e157f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e15980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e15b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e15da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2af6f7e3a3e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2af6f7e3a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e3a760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e3a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e3aa80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e3ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e3ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e38020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e381b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e38340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e384d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e38660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e387f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e38980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e38b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e38da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2af6f7e253f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2af6f7e253f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e25770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e25900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e25a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e25c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e25db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e58020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e581b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e58340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e584d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e58660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e587f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e58980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e58b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e58da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af6f7daacc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af6f7daacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7da90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7da9230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7da93c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7da9550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7da96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7da9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7da9a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7da9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7da9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7da8020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7da81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7da8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7da84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7da8760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7da88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2af6f7e143f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2af6f7e143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e14770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e14900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e14a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e14c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e14db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e131b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e13340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e134d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e13660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e137f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e13980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e13b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e13da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af6f7da6cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af6f7da6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7da50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7da5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7da53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7da5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7da56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7da5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7da5a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7da5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7da5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dd6020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dd61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dd6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dd64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dd6760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dd68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2af6f7dc3cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2af6f7dc3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dc20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dc2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dc23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dc2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dc26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dc2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dc2a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dc2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dc2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dc1020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dc11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dc1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dc14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dc1760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dc18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2af6f7de1020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2af6f7de1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7de13a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7de1530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7de16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7de1850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7de19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7de1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7de1d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7de0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7de01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7de0340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7de04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7de0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7de07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7de0a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7de0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2af6f7e00020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2af6f7e00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e003a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e00530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e006c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e00850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e009e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e00b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e00d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dff340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dffa80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2af6f7e24020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2af6f7e24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e243a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e24530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e246c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e24850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e249e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e24b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e24d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e23020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e23340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e23660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e23a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e23c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af6f7db4cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af6f7db4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7db30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7db3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7db33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7db3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7db36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7db3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7db3a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7db3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7db3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7db2020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7db21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7db2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7db24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7db2760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7db28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af6f7dd2cc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af6f7dd2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dd1180"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dd1310"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dd14a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dd1630"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dd17c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dd1950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dd1ae0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dd1c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dd1e00"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dd0020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dd01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dd0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dd04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dd0760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dd08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2af6f7df0cc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2af6f7df0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7def0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7def230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7def3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7def550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7def6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7def870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7defa00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7defb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7defd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dee020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dee760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2af6f7e203f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2af6f7e203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e20770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e20900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e20a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e20c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e20db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e1f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e1f1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e1f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e1f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e1f660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e1f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e1f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e1fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e1fda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2af6f7e333e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2af6f7e333e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e33760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e338f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e33a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e33c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e33da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e32020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e321b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e32340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e324d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e32660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e327f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e32980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e32b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e32da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2af6f7e273e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2af6f7e273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e27760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e278f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e27a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e27c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e27da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e26020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e261b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e26340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e264d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e26660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e267f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e26980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e26b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e26da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2af6f7e0c3f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2af6f7e0c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e0c770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e0c900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e0ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e0cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e0cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e0b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e0b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e0b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e0b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e0b660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e0b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e0b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e0bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e0bda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2af6f7deccc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2af6f7deccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7deb410"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7deb5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7deb730"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7deb8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7deba50"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7debbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7debd70"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dea340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7deaa80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7deac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2af6f7dd7020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2af6f7dd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dd73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dd7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dd76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dd7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dd79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dd7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dd7d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e0a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e0a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e0a340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e0a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e0a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e0a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e0aa80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2af6f7dfa020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2af6f7dfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dfa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dfa530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dfa6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dfa850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dfa9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dfab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dfad00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7df9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7df91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7df9340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7df94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7df9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7df97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7df9a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7df9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2af6f7e313e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2af6f7e313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e31760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e318f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e31a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e31c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e31da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e30020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e301b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e30340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e304d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e30660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e307f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e30980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e30b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e30da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2af6f7e123e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2af6f7e123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e12760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e128f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e12a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e12c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e12da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e111b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e11340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e114d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e11660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e117f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e11980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e11b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e11da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af6f7daecc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af6f7daecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dad230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dad550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dada00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dadb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dadd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dac020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dac760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af6f7dcccc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af6f7dcccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dcb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dcb230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dcb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dcb550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dcb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dcb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dcba00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dcbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dcbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dca020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dca760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2af6f7dfe020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2af6f7dfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dfe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dfe530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dfe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dfe850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dfe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dfeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dfed00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dfd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dfd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dfd340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dfd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dfd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dfd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dfda80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dfdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2af6f7dc7cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2af6f7dc7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dc60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dc6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dc63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dc6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dc66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dc6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dc6a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dc6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dc6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dc5020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dc51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dc5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dc54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dc5760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dc58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2af6f7de5020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2af6f7de5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7de53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7de5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7de56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7de5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7de59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7de5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7de5d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7de4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7de41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7de4340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7de44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7de4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7de47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7de4a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7de4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2af6f7e05020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2af6f7e05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e053a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e05530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e056c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e05850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e059e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e05b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e05d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e04020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e04340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e04660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e04a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e04c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2af6f7df4020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2af6f7df4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7df43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7df4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7df46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7df4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7df49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7df4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7df4d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7df3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7df31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7df3340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7df34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7df3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7df37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7df3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7df3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2af6f7e0e3f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2af6f7e0e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e0e770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e0e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e0ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e0ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e0edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e0d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e0d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e0d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e0d660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e0d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e0d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e0db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e0dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af6f7dbae10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af6f7dbae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7db71c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7db7350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7db74e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7db7670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7db7800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7db7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7db7b20"/>
        <function-ref name="get" scoped="" ref="0x2af6f7db7cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7db7e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7db6020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7db61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7db6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7db64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7db6760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7db68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af6f7dd6cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af6f7dd6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dd50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dd5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dd53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dd5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dd56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dd5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dd5a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dd5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dd5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dd4020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dd41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dd4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dd44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dd4760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dd48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2af6f7dc1cc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2af6f7dc1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dc00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dc0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dc03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dc0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dc06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dc0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dc0a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dc0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dc0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dbf020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dbf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dbf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dbf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dbf760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dbf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2af6f7ddf020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2af6f7ddf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ddf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ddf530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ddf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ddf850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ddf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ddfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ddfd00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dde020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dde1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dde340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dde4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dde660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dde7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ddea80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ddec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2af6f7e3e3f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2af6f7e3e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e3e770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e3e900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e3ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e3ec20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e3edb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e3d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e3d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e3d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e3d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e3d660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e3d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e3d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e3db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e3dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2af6f7e373e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2af6f7e373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e37760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e378f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e37a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e37c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e37da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e36020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e361b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e36340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e364d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e36660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e367f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e36980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e36b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e36da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2af6f7e2b3e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2af6f7e2b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e2b760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e2b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e2ba80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e2bc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e2bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e2a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e2a1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e2a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e2a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e2a660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e2a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e2a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e2ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e2ada0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2af6f7ddb020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2af6f7ddb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ddb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ddb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ddb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ddb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ddb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ddbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ddbd00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dda020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dda1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dda340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dda4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dda660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dda7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ddaa80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ddac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2af6f7e3c3f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2af6f7e3c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e3c770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e3c900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e3ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e3cc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e3cdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e3b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e3b1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e3b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e3b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e3b660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e3b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e3b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e3bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e3bda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af6f7db2cc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af6f7db2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7db10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7db1230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7db13c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7db1550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7db16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7db1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7db1a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7db1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7db1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7db0020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7db01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7db0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7db04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7db0760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7db08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af6f7dd0cc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af6f7dd0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dcf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dcf230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dcf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dcf550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dcf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dcf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dcfa00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dcfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dcfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dce020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dce760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2af6f7deecc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2af6f7deecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ded0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ded230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ded3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ded550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ded6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ded870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7deda00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dedb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dedd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dec020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dec760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2af6f7e103f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2af6f7e103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e10770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e10900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e10a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e10c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e10db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e0f1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e0f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e0f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e0f660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e0f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e0f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e0fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e0fda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2af6f7e2f3e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2af6f7e2f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e2f760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e2f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e2fa80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e2fc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e2fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e2e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e2e1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e2e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e2e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e2e660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e2e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e2e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e2eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e2eda0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2af6f7de9020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2af6f7de9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7de93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7de9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7de96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7de9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7de99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7de9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7de9d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7de8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7de81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7de8340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7de84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7de8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7de87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7de8a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7de8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2af6f7e09020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2af6f7e09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e093a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e09530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e096c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e09850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e099e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e09b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e09d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e08020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e081b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e08340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e084d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e08660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e087f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e08a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e08c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2af6f7df8020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2af6f7df8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7df83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7df8530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7df86c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7df8850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7df89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7df8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7df8d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7df7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7df71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7df7340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7df74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7df7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7df77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7df7a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7df7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af6f7daccc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af6f7daccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dab230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dab550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7daba00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dabb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dabd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7daa020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7daa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7daa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7daa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7daa760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7daa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2af6f7dfc020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2af6f7dfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dfc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dfc530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dfc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dfc850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dfc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dfcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dfcd00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dfb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dfb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dfb340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dfb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dfb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dfb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dfba80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dfbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af6f7da8cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af6f7da8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7da70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7da7230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7da73c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7da7550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7da76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7da7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7da7a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7da7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7da7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7da6020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7da61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7da6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7da64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7da6760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7da68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2af6f7dc5cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2af6f7dc5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dc40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dc4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dc43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dc4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dc46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dc4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dc4a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dc4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dc4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dc3020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dc31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dc3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dc34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dc3760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dc38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2af6f7de3020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2af6f7de3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7de33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7de3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7de36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7de3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7de39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7de3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7de3d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7de2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7de21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7de2340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7de24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7de2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7de27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7de2a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7de2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2af6f7e03020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2af6f7e03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e033a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e03530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e036c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e03850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e03b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e03d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e02340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e02660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e02a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e02c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2af6f7df2020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2af6f7df2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7df23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7df2530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7df26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7df2850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7df29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7df2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7df2d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7df1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7df11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7df1340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7df14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7df1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7df17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7df1a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7df1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af6f7db6cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af6f7db6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7db50a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7db5230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7db53c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7db5550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7db56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7db5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7db5a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7db5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7db5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7db4020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7db41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7db4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7db44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7db4760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7db48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af6f7dd4cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af6f7dd4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dd30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dd3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dd33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dd3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dd36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dd3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dd3a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dd3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dd3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dd2020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dd21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dd2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dd24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dd2760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2af6f7dbfcc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2af6f7dbfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dbe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dbe230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dbe3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dbe550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dbe6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dbe870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dbea00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dbeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dbed20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7df0020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7df01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7df0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7df04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7df0760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7df08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2af6f7ddd020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2af6f7ddd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ddd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ddd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ddd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ddd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ddd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dddb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dddd00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ddc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ddc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ddc340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ddc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ddc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ddc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ddca80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ddcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2af6f7e183d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2af6f7e183d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e18750"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e188e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e18a70"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e18c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e18d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e171b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e17340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e174d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e17660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e177f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e17980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e17b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e17da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2af6f7e353e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2af6f7e353e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e35760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e358f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e35a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e35c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e35da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e34020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e341b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e34340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e344d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e34660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e347f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e34980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e34b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e34da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2af6f7e1a3f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2af6f7e1a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e1a770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e1a900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e1aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e1ac20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e1adb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e19020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e191b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e19340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e194d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e19660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e197f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e19980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e19b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e19da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2af6f7dd9020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2af6f7dd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7dd93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7dd9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7dd96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7dd9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7dd99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7dd9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7dd9d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f7dd8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7dd81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7dd8340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7dd84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7dd8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7dd87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7dd8a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7dd8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2af6f7e293e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2af6f7e293e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e29760"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e298f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e29a80"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e29c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e29da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e28020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e281b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e28340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e28660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e287f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e28980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e28b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e28da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2af6f7e573f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2af6f7e573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e57770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e57900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e57a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e57c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e57db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e56020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e561b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e56340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e56660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e567f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e56980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e56b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e56da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2af6f7e22060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2af6f7e22060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e227e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e22970"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e22b00"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e22c90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e22e20"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e21020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e211b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e21340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e214d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e21660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e217f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e21980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e21b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e21da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e613f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e61770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e61900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e61a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e61c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e61db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e60020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e601b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e60340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e604d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e60660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e607f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e60980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e60b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e60da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e5de00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e5de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e5c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e5c350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e5c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e5c670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e5c800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e5c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e5cb20"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e5ccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e5ce40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e5b020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e5b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e5b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e5b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e5b760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e8e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e8e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e8eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e8ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e8ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e8d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e8d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e8d4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e8d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e8d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e8d980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e8db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e8dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e8de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e8c120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e8c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e88100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e88100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e88480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e88610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e887a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e88930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e88ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e88c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e88de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e87020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e87340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e87660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e87a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e87c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e84d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e84d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e830e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e83270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e83400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e83590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e83720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e838b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e83a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e83bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e83d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e82020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e82340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e82760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e7f740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e7f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e7fac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e7fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e7fde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e7e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e7e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e7e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e7e4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e7e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e7e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e7e980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e7eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e7eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e7ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e7d120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e7d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e7a100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e7a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e7a480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e7a610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e7a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e7a930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e7aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e7ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e7ade0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e79020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e79340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e79660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e79a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e79c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e76d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e76d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e750e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e75270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e75400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e75590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e75720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e758b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e75a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e75bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e75d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e74020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e74340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e74760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ea7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ea7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ea7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ea7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ea7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ea6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ea61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ea6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ea64d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ea6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ea67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ea6980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ea6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ea6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ea6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ea5120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ea52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ea2100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ea2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ea2480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ea2610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ea27a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ea2930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ea2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ea2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ea2de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ea1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ea11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ea1340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ea14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ea1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ea17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ea1a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ea1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e9ed10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e9ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e9c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e9c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e9c400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e9c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e9c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e9c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e9ca40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e9cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e9cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e9b020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e9b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e9b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e9b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e9b760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e9b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e98740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e98740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e98ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e98c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e98de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e97020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e97340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e974d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e97660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e97980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e97b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e97ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e97e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e96120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e93260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e93260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7e935e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7e93770"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7e93900"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7e93a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7e93c20"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7e93db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7e92020"/>
        <function-ref name="get" scoped="" ref="0x2af6f7e921b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7e92340"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7e924d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f7e92660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7e927f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7e92980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7e92c10"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7e92da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7e8fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7e8fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ec40e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ec4270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ec4400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ec4590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ec4720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ec48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ec4a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ec4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ec4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ec3020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ec31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ec3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ec34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ec3760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ec38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ec0740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ec0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ec0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ec0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ec0de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ebf020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ebf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ebf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ebf4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ebf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ebf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ebf980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ebfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ebfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ebfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ebe120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ebe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ebb100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ebb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ebb480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ebb610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ebb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ebb930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ebbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ebbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ebbde0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eba340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7eba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7eba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7eba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ebaa80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ebac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7eb7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7eb7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7eb60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7eb6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7eb6400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7eb6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7eb6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7eb68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7eb6a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eb6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eb6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eb5020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7eb51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7eb5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7eb54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7eb5760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7eb58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7eb2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7eb2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7eb2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7eb2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7eb2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7eb1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7eb11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7eb1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7eb14d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eb1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eb17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eb1980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7eb1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7eb1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7eb1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7eb0120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7eb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ead100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ead100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ead480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ead610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ead7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ead930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7eadac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7eadc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7eadde0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eab340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7eab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7eab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7eab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7eaba80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7eabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7eded10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7eded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7edd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7edd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7edd400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7edd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7edd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7edd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7edda40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7edc020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7edc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7edc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7edc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7edc760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7edc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ed9740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ed9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ed9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ed9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ed9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ed8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ed81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ed8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ed84d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ed8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ed87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ed8980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ed8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ed8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ed8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ed7120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ed72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ed4100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ed4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ed4480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ed4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ed47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ed4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ed4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ed4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ed4de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ed3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ed31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ed3340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ed34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ed3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ed37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ed3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ed3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ed0d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ed0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ecf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ecf270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ecf400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ecf590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ecf720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ecf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ecfa40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ecfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ecfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ece020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ece1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ece340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ece4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ece760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ece8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ecb740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ecb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ecbac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ecbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ecbde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7eca020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7eca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7eca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7eca4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eca980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ecab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ecaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ecae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ec9120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ec92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ec63f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ec63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ec6770"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ec6900"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ec6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ec6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ec6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ec5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ec51b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ec5340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ec54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ec5660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ec57f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ec5980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ec5b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ec5da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7efb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ef9e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ef9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ef81c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ef8350"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ef84e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ef8670"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ef8800"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ef8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ef8b20"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ef8cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ef8e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ef7020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ef71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ef7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ef74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ef7760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ef78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ef3740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ef3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ef3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ef3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ef3de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ef2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ef21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ef2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ef24d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ef2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ef27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ef2980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ef2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ef2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ef2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ef1120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ef12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7eee100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7eee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7eee480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7eee610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7eee7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7eee930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7eeeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7eeec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7eeede0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eed340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7eed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7eed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7eed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7eeda80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7eedc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7eead10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7eead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ee90e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ee9270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ee9400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ee9590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ee9720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ee98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ee9a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ee9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ee9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ee8020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ee81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ee8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ee84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ee8760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ee88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ee5740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ee5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ee5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ee5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ee5de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ee4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ee41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ee4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ee44d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ee4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7ee47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7ee4980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ee4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7ee4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7ee4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7ee3120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ee32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7ee0100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7ee0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ee0480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ee0610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7ee07a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ee0930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ee0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7ee0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ee0de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f17020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f17340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f17660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f17a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f17c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f14d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f14d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f130e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f13270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f13400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f13590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f13720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f138b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f13a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f13bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f13d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f12020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f12340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f12760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f128f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f0f740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f0f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f0fac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f0fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f0fde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f0e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f0e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f0e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f0e4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f0e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f0e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f0e980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f0eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f0eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f0ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f0d120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f0d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f0a100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f0a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f0a480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f0a610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f0a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f0a930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f0aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f0ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f0ade0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f08020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f081b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f08340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f084d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f08660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f087f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f08a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f08c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f05d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f05d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f040e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f04270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f04400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f04590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f04720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f048b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f04a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f04bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f04d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f03020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f03340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f03760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f00740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f00740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f00ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f00c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f00de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7eff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7eff1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7eff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7eff4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7eff660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7eff7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7eff980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7effb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7effca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7effe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7efe120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7efe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f33100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f33100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f33480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f33610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f337a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f33930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f33ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f33c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f33de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f32020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f32340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f32660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f32a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f32c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f2fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f2fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f2e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f2e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f2e400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f2e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f2e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f2e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f2ea40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f2ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f2ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f2d020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f2d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f2d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f2d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f2d760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f2d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f2a740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f2a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f2aac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f2ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f2ade0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f29020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f29340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f294d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f29660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f297f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f29980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f29b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f29ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f29e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f28120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f25100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f25100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f25480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f25610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f257a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f25930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f25ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f25c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f25de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f24020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f24340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f24660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f24a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f24c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f21d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f21d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f200e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f20270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f20400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f20590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f20720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f208b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f20a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f20bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f20d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f1f020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f1f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f1f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f1f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f1f760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f1f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f1c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f1c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f1cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f1cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f1cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f1a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f1a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f1a4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f1a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f1a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f1a980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f1ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f1aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f1ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f19120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f4e100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f4e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f4e480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f4e610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f4e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f4e930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f4eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f4ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f4ede0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f4d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f4d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f4d340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f4d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f4d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f4d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f4da80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f4dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f4ad10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f4ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f490e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f49270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f49400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f49590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f49720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f498b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f49a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f49bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f49d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f48020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f48340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f48760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f45740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f45740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f45ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f45c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f45de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f44020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f441b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f44340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f444d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f44660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f447f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f44980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f44b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f44ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f44e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f43120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f40100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f40100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f40480"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f40610"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f407a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f40930"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f40ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f40c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f40de0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f3f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f3f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f3f340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f3f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f3f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f3f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f3fa80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f3fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f3cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f3cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f3b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f3b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f3b400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f3b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f3b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f3b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f3ba40"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f3bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f3bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f3a020"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f3a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f3a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f3a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f3a760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f3a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af6f7f37740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2af6f7f37740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7f37ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7f37c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f7f37de0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7f36020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7f361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f7f36340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7f364d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7f36660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f7f367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f7f36980"/>
        <function-ref name="set" scoped="" ref="0x2af6f7f36b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f7f36ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f7f36e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f7f35120"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7f352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f7fd19a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f7fd19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f7fce7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7fcd1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7fceca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7fcd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2af6f7fcc9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2af6f7fcc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f7fc9810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7fc71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7fc9cd0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7fc7670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af6f7ff4c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f7ff4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f7ff2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f7ff21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f7ff2340"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ff24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f7ff2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ff27f0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f7ff2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7ff2b10"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7ff2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f7ff2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f7ff1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f7fc5b80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f7fc5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f7fc49b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f7ff4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f7fc4e70"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f7ff4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2af6f7fd0970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f7fd0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f7fd0cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f7fd0e80"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f7fee030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f7fee1c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f7fee350"/>
        <function-ref name="get" scoped="" ref="0x2af6f7fee4e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f7fee670"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f7feecb0"/>
        <function-ref name="set" scoped="" ref="0x2af6f7fee800"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f7fee990"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f7feeb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2af6f7fe2910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2af6f7fe2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7fe2c90"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7fe2e20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7fe8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7fe81b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7fe8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7fe84d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f7fe8660"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7fe87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f7fedc40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f7fedc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7fea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2af6f7fe8b10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2af6f7fe8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7fe7020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7fe71b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7fe7340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7fe74d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f7fe7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7fe77f0"/>
        <function-ref name="set" scoped="" ref="0x2af6f7fe7980"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7fe7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2af6f7fea2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f7fea2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f7fea620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f7fea7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f7fea940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f7feaad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f7feac60"/>
        <function-ref name="get" scoped="" ref="0x2af6f7feadf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f7fe9020"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f7fe9660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7fe91b0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f7fe9340"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f7fe94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2af6f7fe7e30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2af6f7fe7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7fe11e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7fe1370"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7fe1500"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7fe1690"/>
        <function-ref name="get" scoped="" ref="0x2af6f7fe1820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7fe19b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f7fe1b40"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7fe1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2af6f8001360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2af6f8001360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f80016e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8001870"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8001a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8001b90"/>
        <function-ref name="get" scoped="" ref="0x2af6f8001d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8000020"/>
        <function-ref name="set" scoped="" ref="0x2af6f80001b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8000340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2af6f80006a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2af6f80006a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8000a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8000bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8000d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7fff020"/>
        <function-ref name="get" scoped="" ref="0x2af6f7fff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7fff340"/>
        <function-ref name="set" scoped="" ref="0x2af6f7fff4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7fff660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2af6f7ffec40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f7ffec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f7ffd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2af6f7fff9c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2af6f7fff9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7fffd40"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ffe020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ffe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f7ffe340"/>
        <function-ref name="get" scoped="" ref="0x2af6f7ffe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f7ffe660"/>
        <function-ref name="set" scoped="" ref="0x2af6f7ffe7f0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f7ffe980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f8026930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8026930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8026cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8026e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f8025020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f80251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8025340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f80254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8025660"/>
        <function-ref name="get" scoped="" ref="0x2af6f80257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f8025980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f8025b10"/>
        <function-ref name="set" scoped="" ref="0x2af6f8025ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f8025e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f8024020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f80242b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8024440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f7ffb710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f7ffb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f7ffba90"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f7ffbc20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f7ffbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8026020"/>
        <function-ref name="get" scoped="" ref="0x2af6f80261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8026340"/>
        <function-ref name="set" scoped="" ref="0x2af6f80264d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8026660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f8021480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8021480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8021800"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8021990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f8021b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8021cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8021e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f8020020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f80201b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8020340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f80204d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f8020660"/>
        <function-ref name="set" scoped="" ref="0x2af6f80207f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f8020980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f8020b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f8020da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f801f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f80221d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f80221d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8022550"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f80226e0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8022870"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8022a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f8022b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8022d20"/>
        <function-ref name="set" scoped="" ref="0x2af6f8021020"/>
        <function-ref name="clr" scoped="" ref="0x2af6f80211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f801c020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f801c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f801c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f801c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f801c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f801c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f801c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f801cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f801cd00"/>
        <function-ref name="get" scoped="" ref="0x2af6f801b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f801b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f801b340"/>
        <function-ref name="set" scoped="" ref="0x2af6f801b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f801b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f801b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f801ba80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f801bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f801ed70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f801ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f801d180"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f801d310"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f801d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f801d630"/>
        <function-ref name="get" scoped="" ref="0x2af6f801d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f801d950"/>
        <function-ref name="set" scoped="" ref="0x2af6f801dae0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f801dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f9463c70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f9463c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f9462020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f94621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f945dd70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f945dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f945c180"/>
        <function-ref name="configure" scoped="" ref="0x2af6f945c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af6f945d5d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f945d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f945d950"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f945dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f9463020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f9463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f94633a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f9463530"/>
        <function-ref name="request" scoped="" ref="0x2af6f94636c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f9463850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f94639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af6f9462be0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f9462be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f9461020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f94611b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f9461340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f94614d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f9461660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f94617f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f9461980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f9461b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f9461ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f9461e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f9460020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f94601b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f9460340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f94605d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f9460760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f94608f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f9460a80"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f9460c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f9460da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f945f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f945f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f945f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f945f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f945f660"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f945f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f945fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f945fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f945e020"/>
        <function-ref name="tx" scoped="" ref="0x2af6f945e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f945e340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f945e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f945e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f945e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f945e980"/>
        <function-ref name="rx" scoped="" ref="0x2af6f945eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f945eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f945ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f945d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f945d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f945d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f9462440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f9462440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f94627c0"/>
        <function-ref name="userId" scoped="" ref="0x2af6f9462950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f80322c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f80322c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f8032640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f80327d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f806c8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f806c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f806cc20"/>
        <function-ref name="configure" scoped="" ref="0x2af6f806cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af6f80341d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af6f80341d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f8034550"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f80346e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8033020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8033020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f80333a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8033530"/>
        <function-ref name="request" scoped="" ref="0x2af6f80336c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8033850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f80339e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f8032ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8032ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f8032e50"/>
        <function-ref name="userId" scoped="" ref="0x2af6f806c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af6f8056a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8056a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f8056e10"/>
        <function-ref name="userId" scoped="" ref="0x2af6f8055020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af6f806ab60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af6f806ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f8069020"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f80691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2af6f8056480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af6f8056480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f8056800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af6f80695b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f80695b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f8069950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2af6f8069c20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2af6f8069c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f8056020"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f80561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f80d2020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f80d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f80d23c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f80d2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f80d1cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f80d1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f80d00a0"/>
        <function-ref name="configure" scoped="" ref="0x2af6f80d0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af6f80d27a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f80d27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f80d2b20"/>
        <function-ref name="requested" scoped="" ref="0x2af6f80d2cb0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f80d2e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f80d1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f80d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f80d3210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f80d3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f80d35b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f80d3740"/>
        <function-ref name="request" scoped="" ref="0x2af6f80d38d0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f80d3a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f80d3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f80d1400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f80d1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f80d1780"/>
        <function-ref name="userId" scoped="" ref="0x2af6f80d1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f97c1ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f97c1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f97c00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af6f97c0330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af6f97c0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af6f97c06b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af6f97c0840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af6f97c09d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af6f97c0b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f986c3a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f986c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f986c740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f986c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f9869210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9869210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f98695b0"/>
        <function-ref name="configure" scoped="" ref="0x2af6f9869740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af6f98699d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af6f98699d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af6f9869d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af6f9868020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af6f98681b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af6f9868340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af6f986cb20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f986cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f986a020"/>
        <function-ref name="requested" scoped="" ref="0x2af6f986a1b0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f986a340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f986a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f986a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f9868590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f9868590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f9868910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f9868aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f9868c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f9868dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f9867020"/>
        <function-ref name="get" scoped="" ref="0x2af6f98671b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f9867340"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f9867980"/>
        <function-ref name="set" scoped="" ref="0x2af6f9867660"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f98674d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f98677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f97be540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f97be540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f97be8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f97bea70"/>
        <function-ref name="request" scoped="" ref="0x2af6f97bec00"/>
        <function-ref name="granted" scoped="" ref="0x2af6f97bed90"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f986c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f986a8b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f986a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f986ac30"/>
        <function-ref name="userId" scoped="" ref="0x2af6f986adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2af6f9867c50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2af6f9867c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f9866020"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f98661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2af6f80f5400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af6f80f5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2af6f80f5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2af6f80f59d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f80f59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f80f5d50"/>
        <function-ref name="requested" scoped="" ref="0x2af6f80f4020"/>
        <function-ref name="granted" scoped="" ref="0x2af6f80f41b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f80f4340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f80f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2af6f80ccb20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f80ccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f80f5020"/>
        <function-ref name="stop" scoped="" ref="0x2af6f80f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af6f80f4720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f80f4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f80f4aa0"/>
        <function-ref name="userId" scoped="" ref="0x2af6f80f4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2af6f9837b00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2af6f9837b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2af6f9837e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2af6f98360f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f98360f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f9836470"/>
        <function-ref name="requested" scoped="" ref="0x2af6f9836600"/>
        <function-ref name="granted" scoped="" ref="0x2af6f9836790"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f9836920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f9836ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2af6f98373a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2af6f98373a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f9837720"/>
        <function-ref name="stop" scoped="" ref="0x2af6f98378b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af6f9836d00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f9836d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f98340a0"/>
        <function-ref name="userId" scoped="" ref="0x2af6f9834230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2af6f8115080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2af6f8115080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f8115400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2af6f81156f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f81156f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8115a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8115c00"/>
        <function-ref name="request" scoped="" ref="0x2af6f8115d90"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8114020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f81141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f81187a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f81187a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8118b20"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8118cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2af6f8148430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af6f8148430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af6f81487b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8147780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8147780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8147b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2af6f8147de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2af6f8147de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2af6f8144180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2af6f813d020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2af6f813d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af6f813d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2af6f813d740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2af6f813d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f813dac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f813dc50"/>
        <function-ref name="start" scoped="" ref="0x2af6f813dde0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f813c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f8135320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f8135320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f81356a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f8135830"/>
        <function-ref name="start" scoped="" ref="0x2af6f81359c0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8135b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f8134370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f8134370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f81346f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8134880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8134a10"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8134ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8134d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f8132020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f8132020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f81323a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f8132530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f81326c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8132850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f81329e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8133530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8133530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f81338b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f8167490" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f8167490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f8167810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f81679a0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f8167b30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f8167cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f8167e50"/>
        <function-ref name="get" scoped="" ref="0x2af6f8166020"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f81661b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f81667f0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8166340"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f81664d0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f8166660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af6f81619f0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f81619f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f8161d70"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f8167020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f81671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f8132c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f8132c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f81310a0"/>
        <function-ref name="source" scoped="" ref="0x2af6f8131230"/>
        <function-ref name="address" scoped="" ref="0x2af6f81313c0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f8131550"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f81316e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f8131870"/>
        <function-ref name="type" scoped="" ref="0x2af6f8131a00"/>
        <function-ref name="setType" scoped="" ref="0x2af6f8131b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f8131d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f8168020"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f81681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f81c3d90" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f81c3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f81c2180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f81c2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f81c24a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f81c2630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f81c27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f81c2a50" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f81c2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f81c2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f815db40" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f815db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f81c6020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f81c61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f81c6340"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f81c64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f81c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f81c4720" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f81c4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f81c4aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f81c4c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f81c4dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f81c3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f81c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f81c69e0" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f81c69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f81c6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af6f81c3400" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f81c3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f81c3780"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f81c3910"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f81c3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f81c5020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f81c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f81c53a0"/>
        <function-ref name="source" scoped="" ref="0x2af6f81c5530"/>
        <function-ref name="address" scoped="" ref="0x2af6f81c56c0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f81c5850"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f81c59e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f81c5b70"/>
        <function-ref name="type" scoped="" ref="0x2af6f81c5d00"/>
        <function-ref name="setType" scoped="" ref="0x2af6f81c4020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f81c41b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f81c4340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f81c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f81bd4e0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f81bd4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f81bd860"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f81bd9f0"/>
        <function-ref name="start" scoped="" ref="0x2af6f81bdb80"/>
        <function-ref name="stop" scoped="" ref="0x2af6f81bdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f81ba020" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f81ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af6f78edd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f81ba3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f81ba530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f81ba6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f81ba850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f81ba9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f81c0e60" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f81c0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f81bd210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f81bc4c0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f81bc4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af6f78edd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f81bc840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f81b8940" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f81b8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f81b8cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f81b8e50"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f81b4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f81b41b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f81b4340"/>
        <function-ref name="get" scoped="" ref="0x2af6f81b44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f81b4660"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f81b4ca0"/>
        <function-ref name="set" scoped="" ref="0x2af6f81b47f0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f81b4980"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f81b4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2af6f81b8020" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2af6f81b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af6f78edd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af6f81b83a0"/>
        <function-ref name="offset" scoped="" ref="0x2af6f81b8530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af6f81b86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f81ed2f0" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f81ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f81ed670"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f81ed800"/>
        <function-ref name="start" scoped="" ref="0x2af6f81ed990"/>
        <function-ref name="stop" scoped="" ref="0x2af6f81edb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2af6f8253e40" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2af6f8253e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f82521e0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8252370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2af6f81dc060" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2af6f81dc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f81dc3e0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f81dc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2af6f8203d10" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2af6f8203d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f82010e0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8201270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f81adc30" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f81adc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f81ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2af6f81d9c50" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2af6f81d9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2af6f81db020"/>
        <function-ref name="flush" scoped="" ref="0x2af6f81db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2af6f8212400" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2af6f8212400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8212780"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8212910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2af6f81dd8e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2af6f81dd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2af6f81ddc60"/>
        <function-ref name="resetSend" scoped="" ref="0x2af6f81dddf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2af6f81ea020"/>
        <function-ref name="resetReceive" scoped="" ref="0x2af6f81ea1b0"/>
        <function-ref name="putData" scoped="" ref="0x2af6f81ea340"/>
        <function-ref name="putDone" scoped="" ref="0x2af6f81ea4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2af6f81ea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f81ea8e0" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f81ea8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f81eac60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f81eadf0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f81e2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f81e21b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f81e2340"/>
        <function-ref name="get" scoped="" ref="0x2af6f81e24d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f81e2660"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f81e2ca0"/>
        <function-ref name="set" scoped="" ref="0x2af6f81e27f0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f81e2980"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f81e2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2af6f824e0c0" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2af6f824e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f824e440"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f824e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2af6f81e6130" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2af6f81e6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2af6f81e64b0"/>
        <function-ref name="nextByte" scoped="" ref="0x2af6f81e6640"/>
        <function-ref name="startSend" scoped="" ref="0x2af6f81e67d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2af6f81e6960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2af6f81e35c0" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af6f81e35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2af6f81e3940"/>
        <function-ref name="byteReceived" scoped="" ref="0x2af6f81e3ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x2af6f81e3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2af6f82e0c50" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2af6f82e0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f82df020"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f82df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f82e5830" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f82e5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af6f78edd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f82e5bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f82e5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f82e4020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f82e41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f82e4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2af6f82df480" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2af6f82df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f82df800"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f82df990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f82e5110" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f82e5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af6f78edd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f82e54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2af6f82e4760" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2af6f82e4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2af6f78edd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af6f82e4b00"/>
        <function-ref name="offset" scoped="" ref="0x2af6f82e4c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af6f82e4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f82e2590" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f82e2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f82e2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f82e2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f82e2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f82e2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f82e0020"/>
        <function-ref name="get" scoped="" ref="0x2af6f82e01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f82e0340"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f82e0980"/>
        <function-ref name="set" scoped="" ref="0x2af6f82e0660"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f82e04d0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f82e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2af6f82e39d0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2af6f82e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2af6f82e3d50"/>
        <function-ref name="nextByte" scoped="" ref="0x2af6f82e2020"/>
        <function-ref name="startSend" scoped="" ref="0x2af6f82e21b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2af6f82e2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2af6f82e30e0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2af6f82e30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2af6f82e3460"/>
        <function-ref name="byteReceived" scoped="" ref="0x2af6f82e35f0"/>
        <function-ref name="endPacket" scoped="" ref="0x2af6f82e3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2af6f8322ca0" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2af6f8322ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f83210a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2af6f8321230"/>
        <function-ref name="receive" scoped="" ref="0x2af6f83213c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2af6f8321550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2af6f83216e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2af6f8321870"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8321a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2af6f8325b70" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2af6f8325b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2af6f8322020"/>
        <function-ref name="resetSend" scoped="" ref="0x2af6f83221b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x2af6f8322340"/>
        <function-ref name="resetReceive" scoped="" ref="0x2af6f83224d0"/>
        <function-ref name="putData" scoped="" ref="0x2af6f8322660"/>
        <function-ref name="putDone" scoped="" ref="0x2af6f83227f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2af6f8322980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f8321c80" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f8321c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f83200a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f8320230"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f83203c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f8320550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f83206e0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8320870"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f8320a00"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f831f1b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8320b90"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f8320d20"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f831f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2af6f83486c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2af6f83486c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2af6f8348a40"/>
        <function-ref name="offset" scoped="" ref="0x2af6f8348bd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2af6f8348d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f8335020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f8335020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f83353a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f8335530"/>
        <function-ref name="start" scoped="" ref="0x2af6f83356c0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8335850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f8334050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f8334050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f83343d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8334560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f83346f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8334880"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8334a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af6f8333df0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af6f8333df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f83321c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f8332450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f8332450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f83327d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f8332960"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8332af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8332c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f8332e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af6f836d9e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f836d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8327020"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8327750"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f832d890"/>
        <function-ref name="set" scoped="" ref="0x2af6f8327e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af6f83618a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f83618a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af6f8361c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af6f8361db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af6f8367020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af6f83671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8333210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8333210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8333590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af6f8330800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8330800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f8330b80"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f8330d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f832f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f8331120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f8331120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f83314a0"/>
        <function-ref name="source" scoped="" ref="0x2af6f8331630"/>
        <function-ref name="address" scoped="" ref="0x2af6f83317c0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f8331950"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f8331ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f8331c70"/>
        <function-ref name="type" scoped="" ref="0x2af6f8331e00"/>
        <function-ref name="setType" scoped="" ref="0x2af6f8330020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f83301b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f8330340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f83304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af6f836caf0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f836caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f83690d0"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8369800"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f836b970"/>
        <function-ref name="set" scoped="" ref="0x2af6f8368020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f8355680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f8355680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f8355a00"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f8355b90"/>
        <function-ref name="start" scoped="" ref="0x2af6f8355d20"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af6f8384d40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8384d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f838c0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f838c270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f838c400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f838c590"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f838c720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f838c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2af6f8381500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2af6f8381500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2af6f8381980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f834f760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f834f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f834fae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f834fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f834fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f834e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f834e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f83547f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f83547f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8354b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8354d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8353020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f83531b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8353340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af6f8351880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af6f8351880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8351c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af6f838f970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f838f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f838fcf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f838fe80"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f834d030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f834d1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f834d350"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f834d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af6f838cbb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f838cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af6f838a020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af6f838a1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af6f838a340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af6f838a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8353b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8353b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af6f834d810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f834d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f834db90"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f834dd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f834c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af6f838a790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af6f838a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af6f838ab10"/>
        <function-ref name="setRetries" scoped="" ref="0x2af6f838aca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2af6f838ae30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af6f8382020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af6f83821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f8350020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f8350020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f83503a0"/>
        <function-ref name="source" scoped="" ref="0x2af6f8350530"/>
        <function-ref name="address" scoped="" ref="0x2af6f83506c0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f8350850"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f83509e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f8350b70"/>
        <function-ref name="type" scoped="" ref="0x2af6f8350d00"/>
        <function-ref name="setType" scoped="" ref="0x2af6f834f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f834f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f834f340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f834f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af6f838ba80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f838ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af6f838be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f837a340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f837a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f837a6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f837a850"/>
        <function-ref name="start" scoped="" ref="0x2af6f837a9e0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f837ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af6f8373080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8373080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af6f8373400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af6f83722e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af6f83722e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af6f8372660"/>
        <function-ref name="setRetries" scoped="" ref="0x2af6f83727f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2af6f8372980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af6f8372b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af6f8372ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af6f8375740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8375740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f8375ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f8375c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f8375de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f8374020"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f83741b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f8374340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af6f8376350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8376350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f83766d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8376860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f83769f0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8376b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8376d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af6f8373700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8373700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af6f8373a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af6f8373c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af6f8373da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af6f8372020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2af6f8378e70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2af6f8378e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8377220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af6f8374670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8374670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f83749f0"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f8374b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f8374d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8379430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8379430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f83797b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8379940"/>
        <function-ref name="request" scoped="" ref="0x2af6f8379ad0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8379c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8379df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2af6f8378160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2af6f8378160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f83784e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8378670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8378800"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8378990"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8378b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af6f8377560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af6f8377560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f83778e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f8377a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8377c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8377d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f8376020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af6f83750f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f83750f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8375470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f83719f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f83719f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f8371d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f83b8020"/>
        <function-ref name="start" scoped="" ref="0x2af6f83b81b0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f83b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af6f83b6990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f83b6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f83b6d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f83b5020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f83b51b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f83b5340"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f83b54d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f83b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f83b8600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f83b8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f83b8980"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f83b8b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f83b8ca0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f83b8e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f83b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f83b6300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f83b6300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f83b6680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f83b2690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f83b2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f83b2a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f83b2ba0"/>
        <function-ref name="start" scoped="" ref="0x2af6f83b2d30"/>
        <function-ref name="stop" scoped="" ref="0x2af6f83b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af6f83b0020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f83b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f83b03a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f83b0530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f83b06c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f83b0850"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f83b09e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f83b0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2af6f83a6060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2af6f83a6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f83a63e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f83a6570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f83a6700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f83a6890"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f83a6a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f83a6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af6f839de20" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f839de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f839c1c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f839c350"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f839c4e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f839c670"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f839c800"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f839c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2af6f839f2a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2af6f839f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f839f620"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f839f7b0"/>
        <function-ref name="modify" scoped="" ref="0x2af6f839f940"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f839fad0"/>
        <function-ref name="resend" scoped="" ref="0x2af6f839fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f83b12e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f83b12e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f83b1660"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f83b17f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f83b1980"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f83b1b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f83b1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2af6f83a6e80" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af6f83a6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af6f83a5220"/>
        <function-ref name="rand32" scoped="" ref="0x2af6f83a53b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2af6f83ae6f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2af6f83ae6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f83aea70"/>
        <function-ref name="stop" scoped="" ref="0x2af6f83aec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8395430" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8395430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f83957b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8395940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8395ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2af6f83a73f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af6f83a73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af6f83a7770"/>
        <function-ref name="rfOff" scoped="" ref="0x2af6f83a7900"/>
        <function-ref name="rxOn" scoped="" ref="0x2af6f83a7a90"/>
        <function-ref name="startVReg" scoped="" ref="0x2af6f83a7c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af6f83a7db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af6f83ae020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af6f83ae1b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af6f83ae340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f83a5670" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f83a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f83a59f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f83a5b80"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f83a5d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f839d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f839d1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f839d340"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f839d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f839db10"/>
        <function-ref name="set" scoped="" ref="0x2af6f839d660"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f839d7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f839d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2af6f83b0e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f83b0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f83af210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f83af3a0"/>
        <function-ref name="request" scoped="" ref="0x2af6f83af530"/>
        <function-ref name="granted" scoped="" ref="0x2af6f83af6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f83af850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2af6f83dabc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2af6f83dabc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f839a0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f839a230"/>
        <function-ref name="isState" scoped="" ref="0x2af6f839a3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f839a550"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f839a6e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f839a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2af6f83d65d0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2af6f83d65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f83d6950"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f83d6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2af6f83d7660" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2af6f83d7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f83d79e0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f83d7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2af6f83d8730" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2af6f83d8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f83d8ab0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f83d8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2af6f8415550" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af6f8415550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af6f84158d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af6f8415a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af6f8415bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2af6f8415d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af6f8422020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af6f84221b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af6f8422340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af6f84224d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af6f8422660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af6f84227f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af6f8422980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af6f8422b10"/>
        <function-ref name="sync" scoped="" ref="0x2af6f8422ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2af6f8421020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af6f84211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2af6f8410890" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2af6f8410890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f84134c0"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8413940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2af6f84214b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af6f84214b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af6f8421830"/>
        <function-ref name="rfOff" scoped="" ref="0x2af6f84219c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2af6f8421b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2af6f8421ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af6f8421e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af6f8414030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af6f84141c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af6f8414350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8423020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f84233a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8423530"/>
        <function-ref name="request" scoped="" ref="0x2af6f84236c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8423850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f84239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2af6f840b1a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af6f840b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af6f840b520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af6f840b6b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af6f840b840"/>
        <function-ref name="syncDone" scoped="" ref="0x2af6f840b9d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af6f840bb60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af6f840bcf0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af6f840be80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af6f840a030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af6f840a1c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af6f840a350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af6f840a4e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af6f840a670"/>
        <function-ref name="sync" scoped="" ref="0x2af6f840a800"/>
        <function-ref name="getChannel" scoped="" ref="0x2af6f840aa90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af6f840ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2af6f842e1e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f842e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f842e560"/>
        <function-ref name="write" scoped="" ref="0x2af6f842e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2af6f844f970" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f844f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af6f844fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2af6f8448790" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2af6f8448790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8446020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f844e020"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f844e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f844e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f84464e0"/>
        <function-ref name="start" scoped="" ref="0x2af6f84045d0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8404ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2af6f8432020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8432020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f84323a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8432530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2af6f8445ce0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2af6f8445ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f84440a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8444230"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f84443c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8444550"/>
        <function-ref name="get" scoped="" ref="0x2af6f84446e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8444870"/>
        <function-ref name="set" scoped="" ref="0x2af6f8444a00"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8444b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2af6f8408500" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2af6f8408500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8407130"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f84075b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2af6f84682f0" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2af6f84682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8468670"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8468800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2af6f842ea80" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af6f842ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f842ee00"/>
        <function-ref name="write" scoped="" ref="0x2af6f842d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2af6f842d3c0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f842d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f842d740"/>
        <function-ref name="write" scoped="" ref="0x2af6f842d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2af6f8430cd0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8430cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f84380a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8438230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2af6f8439390" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f8439390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af6f8439710"/>
        <function-ref name="changed" scoped="" ref="0x2af6f84398a0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af6f8439a30"/>
        <function-ref name="setAddress" scoped="" ref="0x2af6f8439bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af6f84469d0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af6f84469d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8446d50"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8445020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f84451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8445340"/>
        <function-ref name="get" scoped="" ref="0x2af6f84454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8445660"/>
        <function-ref name="set" scoped="" ref="0x2af6f84457f0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8445980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2af6f842cae0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f842cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f842b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2af6f8443020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2af6f8443020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f84433a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8443530"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f84436c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8443850"/>
        <function-ref name="get" scoped="" ref="0x2af6f84439e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8443b70"/>
        <function-ref name="set" scoped="" ref="0x2af6f8443d00"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8442020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8412d60" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8412d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f840c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2af6f84328f0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f84328f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8432c70"/>
        <function-ref name="write" scoped="" ref="0x2af6f8432e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2af6f842b440" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af6f842b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f842b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af6f842bb60" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af6f842bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8475020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f84751b0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8475340"/>
        <function-ref name="granted" scoped="" ref="0x2af6f84754d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8475660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2af6f8474880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2af6f8474880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8474c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8474d90"/>
        <function-ref name="request" scoped="" ref="0x2af6f8473020"/>
        <function-ref name="granted" scoped="" ref="0x2af6f84731b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8473340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2af6f8409020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2af6f8409020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2af6f84093a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2af6f8409530"/>
        <function-ref name="rxOn" scoped="" ref="0x2af6f84096c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2af6f8409850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2af6f84099e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2af6f8409b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2af6f8409d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2af6f8408020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2af6f84385d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af6f84385d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8438950"/>
        <function-ref name="write" scoped="" ref="0x2af6f8438ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2af6f8430420" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8430420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f84307a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8430930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2af6f842abb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af6f842abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f842c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f8473600" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f8473600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f8473980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f8473b10"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f8473ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f8473e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f8472020"/>
        <function-ref name="get" scoped="" ref="0x2af6f84721b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f8472340"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f8472980"/>
        <function-ref name="set" scoped="" ref="0x2af6f84724d0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f8472660"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f84727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2af6f846a410" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2af6f846a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f846a790"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f846a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f840c470" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f840c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f840c7f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f840c980"/>
        <function-ref name="request" scoped="" ref="0x2af6f840cb10"/>
        <function-ref name="granted" scoped="" ref="0x2af6f840cca0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f840ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2af6f8433e20" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af6f8433e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f843c1c0"/>
        <function-ref name="write" scoped="" ref="0x2af6f843c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2af6f84334a0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af6f84334a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8433920"/>
        <function-ref name="write" scoped="" ref="0x2af6f8433ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2af6f843ec00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2af6f843ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f8441020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f84411b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af6f8441340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af6f84414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2af6f8475a10" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2af6f8475a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8475d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8474020"/>
        <function-ref name="request" scoped="" ref="0x2af6f84741b0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8474340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f84744d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2af6f842c3b0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af6f842c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f842c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f84db7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f84db7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f84dbb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2af6f84d8220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f84d6b30"/>
        <function-ref name="fired" scoped="" ref="0x2af6f84d7a60"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f84d64e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f84d6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f84d4020"/>
        <function-ref name="start" scoped="" ref="0x2af6f84d7090"/>
        <function-ref name="stop" scoped="" ref="0x2af6f84d75a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f84d3a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f84d3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f84d3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2af6f84d22e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2af6f84d22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f85deb30"/>
        <function-ref name="fired" scoped="" ref="0x2af6f85dfae0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f85de4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f85de020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f85dc020"/>
        <function-ref name="start" scoped="" ref="0x2af6f85df110"/>
        <function-ref name="stop" scoped="" ref="0x2af6f85df620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f98da180" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f98da180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f98d8b30"/>
        <function-ref name="fired" scoped="" ref="0x2af6f98d99f0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f98d84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f98d8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f98d7020"/>
        <function-ref name="start" scoped="" ref="0x2af6f98d9020"/>
        <function-ref name="stop" scoped="" ref="0x2af6f98d9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f98db8e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f98db8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f98dbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f98d32a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f98d32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f98d0b30"/>
        <function-ref name="fired" scoped="" ref="0x2af6f98d2aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f98d04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f98d0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f98cf020"/>
        <function-ref name="start" scoped="" ref="0x2af6f98d20d0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f98d25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f98d4a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f98d4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f98d4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af6f9959c10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9959c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f9958020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f99581b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f9958340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f99584d0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9958660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af6f98bd1b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f98bd1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f98bd530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f98bd6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f98bd850"/>
        <function-ref name="get" scoped="" ref="0x2af6f98bd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f98bdb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f98bdd00"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f995a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f995a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f995a340"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f995a4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f995a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af6f995a8f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f995a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f995ac70"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f995ae00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9959020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f99591b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f9959340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f99594d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f9959660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f99597f0"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f9959980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af6f84ffba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f84ffba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f84fe020"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f84fe1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f84fe340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f84fe4d0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f84fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af6f85034d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f85034d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8503850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f85039e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f8503b70"/>
        <function-ref name="get" scoped="" ref="0x2af6f8503d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f8502020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f85021b0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f8502340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f85024d0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8502660"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f85027f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f8502980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af6f8500280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f8500280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f8500600"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f8500790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f8500920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f8500ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f8500c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f8500dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f84ff020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f84ff1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f84ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af6f994fa80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f994fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f994fe00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f994e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f994e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f994e340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f994e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af6f9952020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9952020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f99523a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f9952530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f99526c0"/>
        <function-ref name="get" scoped="" ref="0x2af6f9952850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f99529e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9952b70"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f9952d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9950020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f99501b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f9950340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f99504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9956da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9956da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9953670"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9954610"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9953020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9954ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9953b30"/>
        <function-ref name="start" scoped="" ref="0x2af6f9955bf0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9954150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f9956510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f9956510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f9956890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af6f9950760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9950760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f9950ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f9950c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9950e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f994f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f994f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f994f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f994f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f994f660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f994f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f8552020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8552020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8552e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8551800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8551340"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8551cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2af6f8580950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2af6f8580950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f857f780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f857e150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f857fc40"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f857e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f854c5f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f854c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8582430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8582db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f85828f0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f85802a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f98cd5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f98cd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f98cbe50"/>
        <function-ref name="fired" scoped="" ref="0x2af6f98cce00"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f98cb800"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f98cb340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f98c9340"/>
        <function-ref name="start" scoped="" ref="0x2af6f98cc430"/>
        <function-ref name="stop" scoped="" ref="0x2af6f98cc940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af6f98c7d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af6f98c7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f98c4670"/>
        <function-ref name="fired" scoped="" ref="0x2af6f98c5550"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f98c4020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f98c5a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f98c4b30"/>
        <function-ref name="start" scoped="" ref="0x2af6f98c6b60"/>
        <function-ref name="stop" scoped="" ref="0x2af6f98c5090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f98c99b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f98c99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f98c87e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f98c71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f98c8ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f98c7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2af6f85d76a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2af6f85d76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d7a20"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d6020"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d6340"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d64d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2af6f85d69d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2af6f85d69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d6d50"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d5020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d5340"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d5660"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d57f0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2af6f85d5ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2af6f85d5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d4230"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d4550"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d4870"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d4a00"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2af6f85d8370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af6f85d8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d86f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d8880"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d8a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d8ba0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d8d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d7020"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d71b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2af6f85d2380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2af6f85d2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d2700"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d2890"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d2bb0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d2d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d1020"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d11b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2af6f85d90e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2af6f85d90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d9460"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d95f0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d9780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d9910"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d9aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d9c30"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d9dc0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2af6f85d3020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2af6f85d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d3530"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85d3850"/>
        <function-ref name="get" scoped="" ref="0x2af6f85d39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85d3b70"/>
        <function-ref name="set" scoped="" ref="0x2af6f85d3d00"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f85cf930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85cf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85cfcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85cfe40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f85ce020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85ce340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f85ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85ce660"/>
        <function-ref name="get" scoped="" ref="0x2af6f85ce7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f85ce980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f85ceb10"/>
        <function-ref name="set" scoped="" ref="0x2af6f85ceca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f85cee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f85cd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f85cd2b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85cd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f85d0710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85d0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85d0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85d0c20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85d0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85cf020"/>
        <function-ref name="get" scoped="" ref="0x2af6f85cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85cf340"/>
        <function-ref name="set" scoped="" ref="0x2af6f85cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85cf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f85ca480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85ca800"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85ca990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f85cab20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85cacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85cae40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f85c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85c81b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85c8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f85c84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f85c8660"/>
        <function-ref name="set" scoped="" ref="0x2af6f85c87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f85c8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f85c8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f85c8da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f85cb1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85cb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85cb530"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85cb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85cb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85cb9e0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85cbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85cbd00"/>
        <function-ref name="set" scoped="" ref="0x2af6f85ca020"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f85c4020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85c43a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85c4530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f85c46c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85c4850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85c49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f85c4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85c4d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f85c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f85c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f85c3340"/>
        <function-ref name="set" scoped="" ref="0x2af6f85c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f85c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f85c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f85c3a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f85c6d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85c6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85c5180"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85c5310"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85c54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85c5630"/>
        <function-ref name="get" scoped="" ref="0x2af6f85c57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85c5950"/>
        <function-ref name="set" scoped="" ref="0x2af6f85c5ae0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85c5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f85c0de0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85c0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85bf180"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85bf310"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f85bf4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85bf630"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85bf7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f85bf950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85bfae0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85bfc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f85bfe00"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f85be020"/>
        <function-ref name="set" scoped="" ref="0x2af6f85be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f85be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f85be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f85be760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f85c1b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85c1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85c0020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85c01b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85c0340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85c04d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85c0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85c07f0"/>
        <function-ref name="set" scoped="" ref="0x2af6f85c0980"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85c0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f85bb930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f85bb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85bbcb0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85bbe40"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f85ba020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85ba340"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f85ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85ba660"/>
        <function-ref name="get" scoped="" ref="0x2af6f85ba7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f85ba980"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f85bab10"/>
        <function-ref name="set" scoped="" ref="0x2af6f85baca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f85bae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f85b9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f85b92b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85b9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f85bc710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85bc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85bca90"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85bcc20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85bcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85bb020"/>
        <function-ref name="get" scoped="" ref="0x2af6f85bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85bb340"/>
        <function-ref name="set" scoped="" ref="0x2af6f85bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f85bb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f8609480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8609480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8609800"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8609990"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f8609b20"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8609cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8609e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f8608020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f86081b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8608340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f86084d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f8608660"/>
        <function-ref name="set" scoped="" ref="0x2af6f86087f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f8608980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f8608b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f8608da0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8607020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f85b71b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f85b71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f85b7530"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f85b76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f85b7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f85b79e0"/>
        <function-ref name="get" scoped="" ref="0x2af6f85b7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f85b7d00"/>
        <function-ref name="set" scoped="" ref="0x2af6f8609020"/>
        <function-ref name="clr" scoped="" ref="0x2af6f86091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f8603020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8603020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f86033a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8603530"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f86036c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8603850"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f86039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f8603b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8603d00"/>
        <function-ref name="get" scoped="" ref="0x2af6f8602020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f86021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f8602340"/>
        <function-ref name="set" scoped="" ref="0x2af6f86024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f8602660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f86027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f8602a80"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8602c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f8606d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f8606d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8604180"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8604310"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f86044a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8604630"/>
        <function-ref name="get" scoped="" ref="0x2af6f86047c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8604950"/>
        <function-ref name="set" scoped="" ref="0x2af6f8604ae0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8604c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2af6f85eb5a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2af6f85eb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af6f85eb920"/>
        <function-ref name="disable" scoped="" ref="0x2af6f85ebab0"/>
        <function-ref name="captured" scoped="" ref="0x2af6f85ebc40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af6f85ebdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2af6f85ef210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2af6f85ef210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f85ef590"/>
        <function-ref name="disable" scoped="" ref="0x2af6f85ef720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af6f85ef8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af6f85efa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2af6f85efe30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af6f85efe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f85ee1e0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f85ee370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af6f85ee500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af6f85ee690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2af6f862bda0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2af6f862bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f862a180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2af6f862a310"/>
        <function-ref name="captured" scoped="" ref="0x2af6f862a4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f862a630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f862a7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2af6f862a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2af6f862c020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2af6f862c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af6f862c3a0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f862c530"/>
        <function-ref name="captured" scoped="" ref="0x2af6f862c6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af6f862c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af6f862cae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f862cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f862ce60"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f862b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f862b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f862b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f862b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f862b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f862b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f862b980"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f862bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2af6f862ac20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f862ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8629020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f86291b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f8629340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f86294d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8629660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f86297f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8629980"/>
        <function-ref name="get" scoped="" ref="0x2af6f8629b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f8629ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f8629e30"/>
        <function-ref name="set" scoped="" ref="0x2af6f8628020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f86281b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f8628340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f86285d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8628760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af6f861bc40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af6f861bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f861a020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f861a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f861a340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f861a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f861a660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f861a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af6f8611bc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af6f8611bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f860f020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f860f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f860f340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f860f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f860f660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f860f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af6f8618bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af6f8618bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8617020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86171b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8617340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86174d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8617660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af6f8616bc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af6f8616bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8615020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86151b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8615340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86154d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8615660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af6f8621d20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af6f8621d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f861c0e0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f861c270"/>
        <function-ref name="disable" scoped="" ref="0x2af6f861c400"/>
        <function-ref name="edge" scoped="" ref="0x2af6f861c590"/>
        <function-ref name="enable" scoped="" ref="0x2af6f861c720"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f861c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af6f8613bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af6f8613bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f86120a0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8612230"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86123c0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8612550"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86126e0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8612870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af6f861abc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af6f861abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8619020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86191b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8619340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86194d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8619660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af6f860fbc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af6f860fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f860e020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f860e1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f860e340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f860e4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f860e660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f860e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af6f861de70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af6f861de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8622220"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86223b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8622540"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86226d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8622860"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86229f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af6f8615bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af6f8615bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8614020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86141b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8614340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86144d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8614660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af6f861cc80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af6f861cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f861b0a0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f861b230"/>
        <function-ref name="disable" scoped="" ref="0x2af6f861b3c0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f861b550"/>
        <function-ref name="enable" scoped="" ref="0x2af6f861b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f861b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af6f8612c40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af6f8612c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8611020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86111b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8611340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86114d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8611660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af6f8619bc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af6f8619bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8618020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86181b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8618340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86184d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8618660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af6f8617bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af6f8617bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8616020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86161b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8616340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86164d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8616660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af6f8622dc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af6f8622dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8621180"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8621310"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86214a0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8621630"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86217c0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8621950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af6f8614bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af6f8614bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8613020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86131b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8613340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86134d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8613660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2af6f865ba30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2af6f865ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f865bdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f865a020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f865a1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f865a340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f865a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f865a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2af6f8651bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2af6f8651bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8650020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86501b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8650340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86504d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8650660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2af6f8658a30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2af6f8658a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8658db0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8657020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86571b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8657340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86574d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8657660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2af6f8656a30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2af6f8656a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8656db0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8655020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86551b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8655340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86554d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8655660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2af6f865da30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2af6f865da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f865ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f865c020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f865c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f865c340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f865c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f865c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2af6f8653a30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2af6f8653a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8652020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86521b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8652340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86524d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8652660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2af6f865aa30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2af6f865aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f865adb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8659020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86591b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8659340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86594d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8659660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2af6f8650bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2af6f8650bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f864f020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f864f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f864f340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f864f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f864f660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f864f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2af6f860d9d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2af6f860d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f860dd50"/>
        <function-ref name="fired" scoped="" ref="0x2af6f865e020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f865e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f865e340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f865e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f865e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2af6f8655a30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2af6f8655a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8655db0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8654020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86541b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8654340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86544d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8654660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2af6f865ca30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2af6f865ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f865cdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f865b020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f865b1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f865b340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f865b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f865b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2af6f8652bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2af6f8652bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8651020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f86511b0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8651340"/>
        <function-ref name="edge" scoped="" ref="0x2af6f86514d0"/>
        <function-ref name="enable" scoped="" ref="0x2af6f8651660"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f86517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2af6f8659a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2af6f8659a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8659db0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8658020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86581b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8658340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86584d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8658660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2af6f8657a30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2af6f8657a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8657db0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8656020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86561b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8656340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86564d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8656660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2af6f865ea30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2af6f865ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f865edb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f865d020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f865d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f865d340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f865d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f865d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2af6f8654a30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2af6f8654a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8654db0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8653020"/>
        <function-ref name="disable" scoped="" ref="0x2af6f86531b0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f8653340"/>
        <function-ref name="enable" scoped="" ref="0x2af6f86534d0"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f8653660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2af6f872c610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2af6f872c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f872c990"/>
        <function-ref name="fired" scoped="" ref="0x2af6f872cb20"/>
        <function-ref name="disable" scoped="" ref="0x2af6f872ccb0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f872ce40"/>
        <function-ref name="enable" scoped="" ref="0x2af6f871f020"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f871f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2af6f872da30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2af6f872da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f872ddb0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f872c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af6f872c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af6f872c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2af6f871d610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2af6f871d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f871d990"/>
        <function-ref name="fired" scoped="" ref="0x2af6f871db20"/>
        <function-ref name="disable" scoped="" ref="0x2af6f871dcb0"/>
        <function-ref name="edge" scoped="" ref="0x2af6f871de40"/>
        <function-ref name="enable" scoped="" ref="0x2af6f871c020"/>
        <function-ref name="getValue" scoped="" ref="0x2af6f871c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2af6f871ea70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2af6f871ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f871edf0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f871d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af6f871d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af6f871d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af6f8a73e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8a73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a72410"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a725a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af6f8a7d160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af6f8a7d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af6f8a77e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8a77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a76210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af6f8a71880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8a71880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a71c00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a71d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af6f8a690a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af6f8a690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a69420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a695b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af6f8a700a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af6f8a700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a70420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a705b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af6f8ac5500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8ac5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ac5880"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ac5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af6f8a60500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8a60500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a60880"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a60a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af6f8a7c490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8a7c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af6f8a65880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af6f8a65880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a65c00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a65d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af6f8a61500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8a61500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a61880"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a61a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af6f8a76e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af6f8a76e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a75210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af6f8a75e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8a75e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a73210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af6f8a6b880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8a6b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6bc00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af6f8a6d0a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af6f8a6d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6d420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af6f8a70880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8a70880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a70c00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a70d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f8a7fa90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8a7fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8a7fe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8a7e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8a7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af6f8a7be00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8a7be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a791c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af6f8a79490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af6f8a79490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a79910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af6f8a64c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8a64c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a630a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a63230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af6f8a79be0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8a79be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af6f8a61ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8a61ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a600a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a60230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af6f8a7b160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8a7b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af6f8a650a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af6f8a650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a65420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af6f8a75670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8a75670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a759f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a75b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af6f8a76670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8a76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a769f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a76b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af6f8a7ead0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8a7ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af6f8a670a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8a670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a67420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a675b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af6f8a69880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af6f8a69880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a69c00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a69d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af6f8a67880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8a67880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a67c00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a67d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af6f8ac6ce0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8ac6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ac50a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ac5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af6f8a60ce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8a60ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ac60a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ac6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af6f8a6d880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af6f8a6d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6dc00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af6f8a680a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af6f8a680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a68420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a685b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af6f8a62ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8a62ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a610a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a61230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af6f8a6f880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8a6f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6fc00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af6f8ac5ce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8ac5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8ac40a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8ac4230"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ac43c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8ac4550"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8ac46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af6f8a7e480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8a7e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af6f8a77670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af6f8a77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a779f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af6f8a73670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8a73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a739f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a73b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af6f8a6a0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8a6a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6a420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af6f8a6f0a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8a6f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6f420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af6f8a6a880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8a6a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6ac00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af6f8a72870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8a72870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a72bf0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a72d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af6f8a7d7b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af6f8a7d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af6f8a710a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8a710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a71420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a715b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8a80e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8a80e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8a7f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8a7f350"/>
        <function-ref name="request" scoped="" ref="0x2af6f8a7f4e0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8a7f670"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8a7f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af6f8a782f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8a782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a78670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af6f8a77020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af6f8a77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af6f8a62500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af6f8a62500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a62880"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a62a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af6f8a63ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8a63ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a620a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a62230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af6f8a7b7b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8a7b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af6f8a63500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8a63500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a63880"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a63a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af6f8ac6500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af6f8ac6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ac6880"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ac6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af6f8a6b0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8a6b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6b420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af6f8a68880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af6f8a68880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a68c00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a68d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af6f8a7de00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af6f8a7de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af6f8a7cae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8a7cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a7ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af6f8a6e0a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8a6e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6e420"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af6f8a78940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af6f8a78940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8a78cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af6f8a6e880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af6f8a6e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a6ec00"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a6ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af6f8a640a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af6f8a640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a64820"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a649b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af6f8ac49b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8ac49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8ac4d30"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8ac3020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ac31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8ac3340"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8ac34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2af6f878c630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2af6f878c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f878c9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f878cb40"/>
        <function-ref name="write" scoped="" ref="0x2af6f878ccd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f878ce60"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f878b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f878e680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f878e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f878ea00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f878eb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f878ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2af6f878b8c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2af6f878b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f878bc40"/>
        <function-ref name="write" scoped="" ref="0x2af6f878bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2af6f878a6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2af6f878a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f878aa70"/>
        <function-ref name="write" scoped="" ref="0x2af6f878ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8791960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8791960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8791ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8791e70"/>
        <function-ref name="request" scoped="" ref="0x2af6f878e030"/>
        <function-ref name="granted" scoped="" ref="0x2af6f878e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f878e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2af6f8789510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2af6f8789510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8789890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2af6f8773680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8773680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8773a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8773b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2af6f8783bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2af6f8783bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8782020"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f87821b0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8782340"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f87824d0"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8782660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f8787930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8787930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8787cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8787e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8784020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2af6f877c080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af6f877c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af6f877c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2af6f877b020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2af6f877b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f877b3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f877b530"/>
        <function-ref name="isState" scoped="" ref="0x2af6f877b6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f877b850"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f877b9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f877bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af6f877e400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af6f877e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f877e780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f877e910"/>
        <function-ref name="request" scoped="" ref="0x2af6f877eaa0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f877ec30"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f877edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2af6f8781020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2af6f8781020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f87813a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8781530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2af6f8781db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2af6f8781db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8780180"/>
        <function-ref name="write" scoped="" ref="0x2af6f8780310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f877bdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f877bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f87741c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f8774350"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f87744e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f8774670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f8774800"/>
        <function-ref name="get" scoped="" ref="0x2af6f8774990"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f8774b20"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f87721b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8774cb0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f8774e40"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f8772020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8784810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8784810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8784b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8784d20"/>
        <function-ref name="request" scoped="" ref="0x2af6f8783020"/>
        <function-ref name="granted" scoped="" ref="0x2af6f87831b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8783340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2af6f876e120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2af6f876e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f876e4a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f876e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2af6f8780ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2af6f8780ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f877e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f87c7770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f87c7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f87c7af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f87c7c80"/>
        <function-ref name="isState" scoped="" ref="0x2af6f87c7e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f87c4020"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f87c41b0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f87c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f87c3280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f87c3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f87c3600"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f87c3790"/>
        <function-ref name="isState" scoped="" ref="0x2af6f87c3920"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f87c3ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f87c3c40"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f87c3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f87bf020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f87bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f87bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f87bfb70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f87bfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8819020"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f88191b0"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8819340"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f88194d0"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8819660"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f88197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af6f8a41020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8a41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8a413a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8a41530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af6f88008f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af6f88008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af6f8800c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8801c40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8801c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8800020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f88001b0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8800340"/>
        <function-ref name="granted" scoped="" ref="0x2af6f88004d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8800660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f99bcaf0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f99bcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f99bce70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f99bb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af6f99b9440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af6f99b9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f99b97c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f99b9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af6f99b9be0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f99b9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f99b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af6f99bb2c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af6f99bb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af6f99bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f99bee70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f99bee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f99bc220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f99bc3b0"/>
        <function-ref name="request" scoped="" ref="0x2af6f99bc540"/>
        <function-ref name="granted" scoped="" ref="0x2af6f99bc6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f99bc860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af6f99bb8d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f99bb8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af6f99bbc50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af6f99bbde0"/>
        <function-ref name="splitRead" scoped="" ref="0x2af6f99b9020"/>
        <function-ref name="write" scoped="" ref="0x2af6f99b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af6f87ed6b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f87ed6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f87eda30"/>
        <function-ref name="configure" scoped="" ref="0x2af6f87edbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af6f8847850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af6f8847850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8847bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8847d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af6f8845a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f8845a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f8845dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af6f87ec020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af6f87ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af6f87ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af6f8846690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af6f8846690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8846a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8846ba0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8846d30"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8845020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f88451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f87ef430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f87ef430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f87ef7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f87ef940"/>
        <function-ref name="request" scoped="" ref="0x2af6f87efad0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f87efc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f87efdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af6f87ec6a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f87ec6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af6f87eca20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af6f87ecbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2af6f87ecd40"/>
        <function-ref name="write" scoped="" ref="0x2af6f8847020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af6f88432a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f88432a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f8843620"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f88437b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2af6f88a4250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f88a4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f88a45f0"/>
        <function-ref name="configure" scoped="" ref="0x2af6f88a4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2af6f88a3c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2af6f88a3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f88a2020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f88a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2af6f88a13e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2af6f88a13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2af6f88a1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2af6f88a4a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2af6f88a4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2af6f88a4d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2af6f88a1a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af6f88a1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f88a1dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f88a0020"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f88a01b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f88a0340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f88a04d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f88a0660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f88a07f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f88a0980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f88a0b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f88a0ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f88a0e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f889f020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f889f1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f889f440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f889f5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f889f760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f889f8f0"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f889fa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f889fc10"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f889fda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f889e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f889e1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f889e340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f889e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f889e660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f889e9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f889eb80"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f889ed10"/>
        <function-ref name="tx" scoped="" ref="0x2af6f889d020"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f889d1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f889d340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f889d4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f889d660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f889d7f0"/>
        <function-ref name="rx" scoped="" ref="0x2af6f889d980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f889db10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f889dca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f889de30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f889c020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f889c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f889cc20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f889cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f889b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f889b1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f889b340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f889b4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f889b660"/>
        <function-ref name="get" scoped="" ref="0x2af6f889b7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f889b980"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f889a020"/>
        <function-ref name="set" scoped="" ref="0x2af6f889bca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f889bb10"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f889be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2af6f88a25b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2af6f88a25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f88a2950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f88a2ae0"/>
        <function-ref name="request" scoped="" ref="0x2af6f88a2c70"/>
        <function-ref name="granted" scoped="" ref="0x2af6f88a2e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f88a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8849470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8849470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8849810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f88499a0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8849b30"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8849cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8849e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2af6f88a3060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2af6f88a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2af6f88a33e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2af6f88a3570"/>
        <function-ref name="splitRead" scoped="" ref="0x2af6f88a3700"/>
        <function-ref name="write" scoped="" ref="0x2af6f88a3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2af6f889c480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2af6f889c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f889c800"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f889c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2af6f889a2f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2af6f889a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f889a670"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f889a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2af6f888d5e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af6f888d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f888d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af6f888ed10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f888ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f888d0e0"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f888d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af6f8892020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f8892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f88923a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f8892530"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f88926c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f8892850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f88929e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f8892b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f8892d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f8891020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f88911b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f8891340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f88914d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f8891660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f88917f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f8891a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f8891c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f8891da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f8890020"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f88901b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f8890340"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f88904d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f8890660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f88907f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f8890980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f8890b10"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f8890ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f888f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f888f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f888f540"/>
        <function-ref name="tx" scoped="" ref="0x2af6f888f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f888f860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f888f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f888fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f888fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f888e020"/>
        <function-ref name="rx" scoped="" ref="0x2af6f888e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f888e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f888e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f888e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f888e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f888e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af6f88b0b20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af6f88b0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f88af020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f88af1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f88af340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f88af4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f88af660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f88af7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f88af980"/>
        <function-ref name="get" scoped="" ref="0x2af6f88afb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f88afca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f88afe30"/>
        <function-ref name="set" scoped="" ref="0x2af6f88ae020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f88ae1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f88ae340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f88ae5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f88ae760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af6f8884780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af6f8884780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f8884b00"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f8884c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2af6f88aeb20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2af6f88aeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f88ad020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f88ad1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f88ad340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f88ad4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f88ad660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f88ad7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f88ad980"/>
        <function-ref name="get" scoped="" ref="0x2af6f88adb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f88adca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f88ade30"/>
        <function-ref name="set" scoped="" ref="0x2af6f88ac020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f88ac1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f88ac340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f88ac5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f88ac760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2af6f88acb20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2af6f88acb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f88ab020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f88ab1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f88ab340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f88ab4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f88ab660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f88ab7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f88ab980"/>
        <function-ref name="get" scoped="" ref="0x2af6f88abb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f88abca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f88abe30"/>
        <function-ref name="set" scoped="" ref="0x2af6f88aa020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f88aa1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f88aa340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f88aa5d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f88aa760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2af6f888bc70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2af6f888bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f8888020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f88881b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f8888340"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f88884d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f8888660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f88887f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f8888980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f8888b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f8888ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f8888e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f8887020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f88871b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f8887340"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f88875d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f8887760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f88878f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f8887a80"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f8887c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f8887da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f8886020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f88861b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f8886340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f88864d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f8886660"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f88867f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f8886b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f8886d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f8885020"/>
        <function-ref name="tx" scoped="" ref="0x2af6f88851b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f8885340"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f88854d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f8885660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f88857f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f8885980"/>
        <function-ref name="rx" scoped="" ref="0x2af6f8885b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f8885ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f8885e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f8884020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f88841b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f8884340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2af6f88b9d10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2af6f88b9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af6f88820e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af6f8882270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af6f8882400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af6f8882590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af6f8882720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af6f88828b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af6f8882a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af6f8882bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f8882d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af6f8881020"/>
        <function-ref name="getData" scoped="" ref="0x2af6f88811b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af6f8881340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af6f88814d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af6f8881760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af6f88818f0"/>
        <function-ref name="getIV" scoped="" ref="0x2af6f8881a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af6f8881c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af6f8881da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af6f88b8020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af6f88b81b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af6f88b8340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af6f88b84d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af6f88b8660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af6f88b87f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af6f88b8980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af6f88b8d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af6f88b7020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af6f88b71b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af6f88b7340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af6f88b74d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af6f88b7660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af6f88b77f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af6f88b7980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af6f88b7b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af6f88b7ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af6f88b7e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af6f88b6020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af6f88b61b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af6f88b6340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af6f88b64d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af6f88b6660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af6f88b67f0"/>
        <function-ref name="setData" scoped="" ref="0x2af6f88b6980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af6f88b6b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af6f88b6ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af6f88b6e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af6f88b5020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af6f88b51b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af6f88b5340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af6f88b58d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af6f88b5a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af6f88b5bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af6f88b5d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af6f88b4020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af6f88b41b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af6f88b4340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af6f88b44d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af6f88b4660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af6f88b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2af6f88b2b20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2af6f88b2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f88b1020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f88b11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f88b1340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f88b14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f88b1660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f88b17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f88b1980"/>
        <function-ref name="get" scoped="" ref="0x2af6f88b1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f88b1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f88b1e30"/>
        <function-ref name="set" scoped="" ref="0x2af6f88b0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f88b01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f88b0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f88b05d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f88b0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af6f8883150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f8883150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f88834d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af6f88b4bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af6f88b4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f88b3020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f88b31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f88b3340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f88b34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f88b3660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f88b37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f88b3980"/>
        <function-ref name="get" scoped="" ref="0x2af6f88b3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f88b3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f88b3e30"/>
        <function-ref name="set" scoped="" ref="0x2af6f88b2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f88b21b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f88b2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f88b25d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f88b2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f99b15d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f99b15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f99b1950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f99b1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2af6f9a557c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2af6f9a557c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f9a55b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f9a4ea80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9a4ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f9a4ee00"/>
        <function-ref name="configure" scoped="" ref="0x2af6f9a4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2af6f9a55dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af6f9a55dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af6f9a54180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af6f9a54310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af6f9a544a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af6f9a54630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af6f9a547c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af6f9a54950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af6f9a54ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af6f9a54c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f9a54e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af6f9a53020"/>
        <function-ref name="getData" scoped="" ref="0x2af6f9a531b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af6f9a53340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af6f9a534d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af6f9a53760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af6f9a538f0"/>
        <function-ref name="getIV" scoped="" ref="0x2af6f9a53a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af6f9a53c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af6f9a53da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af6f9a52020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af6f9a521b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af6f9a52340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af6f9a524d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af6f9a52660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af6f9a527f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af6f9a52980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af6f9a52d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af6f9a51020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af6f9a511b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af6f9a51340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af6f9a514d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af6f9a51660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af6f9a517f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af6f9a51980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af6f9a51b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af6f9a51ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af6f9a51e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af6f9a50020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af6f9a501b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af6f9a50340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af6f9a504d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af6f9a50660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af6f9a507f0"/>
        <function-ref name="setData" scoped="" ref="0x2af6f9a50980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af6f9a50b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af6f9a50ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af6f9a50e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af6f9a4f020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af6f9a4f1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af6f9a4f340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af6f9a4f8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af6f9a4fa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af6f9a4fbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af6f9a4fd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af6f9a4e020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af6f9a4e1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af6f9a4e340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af6f9a4e4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af6f9a4e660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af6f9a4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2af6f9a55020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2af6f9a55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f9a553a0"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f9a55530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f99b2860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f99b2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f99b2be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f99b2d70"/>
        <function-ref name="request" scoped="" ref="0x2af6f99b1020"/>
        <function-ref name="granted" scoped="" ref="0x2af6f99b11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f99b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2af6f99b05a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2af6f99b05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f99b0920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f99b0ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f99b0c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f99b0dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f99af020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f99af1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f99af340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f99af4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f99af660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f99af7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f99af980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f99afb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f99afca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f99ae020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f99ae1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f99ae340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f99ae4d0"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f99ae660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f99ae7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f99ae980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f99aeb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f99aeca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f99aee30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f99ad020"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f99ad1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f99ad540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f99ad6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f99ad860"/>
        <function-ref name="tx" scoped="" ref="0x2af6f99ad9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f99adb80"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f99add10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f99ac020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f99ac1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f99ac340"/>
        <function-ref name="rx" scoped="" ref="0x2af6f99ac4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f99ac660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f99ac7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f99ac980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f99acb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f99acca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f99b1d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f99b1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f99b0180"/>
        <function-ref name="userId" scoped="" ref="0x2af6f99b0310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f898c2c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f898c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f898c640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f898c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f898b8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f898b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f898bc20"/>
        <function-ref name="configure" scoped="" ref="0x2af6f898bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af6f898f4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af6f898f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f898f850"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f898f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f898d020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f898d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f898d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f898d530"/>
        <function-ref name="request" scoped="" ref="0x2af6f898d6c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f898d850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f898d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af6f898e3f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f898e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f898e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f898cad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f898cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f898ce50"/>
        <function-ref name="userId" scoped="" ref="0x2af6f898b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2af6f8987e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8987e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f8986210"/>
        <function-ref name="userId" scoped="" ref="0x2af6f89863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2af6f8988060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2af6f8988060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f8988400"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f8988590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2af6f8987840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2af6f8987840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f8987bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2af6f8988990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2af6f8988990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f8988d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2af6f8987060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2af6f8987060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2af6f89873e0"/>
        <function-ref name="txDone" scoped="" ref="0x2af6f8987570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f8983850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f8983850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f8983bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f8983d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f8980570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f8980570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f8980910"/>
        <function-ref name="configure" scoped="" ref="0x2af6f8980aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af6f8982020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f8982020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f89823a0"/>
        <function-ref name="requested" scoped="" ref="0x2af6f8982530"/>
        <function-ref name="granted" scoped="" ref="0x2af6f89826c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8982850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f89829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8984a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8984a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8984e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8983020"/>
        <function-ref name="request" scoped="" ref="0x2af6f89831b0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8983340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f89834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f8982c30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f8982c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f8980020"/>
        <function-ref name="userId" scoped="" ref="0x2af6f89801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f9a8ca40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f9a8ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f9a8cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af6f9a8b0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af6f9a8b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af6f9a8b420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af6f9a8b5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af6f9a8b740"/>
        <function-ref name="dequeue" scoped="" ref="0x2af6f9a8b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2af6f9a88020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2af6f9a88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2af6f9a883c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f9a88550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2af6f9a87cf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2af6f9a87cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2af6f9a850e0"/>
        <function-ref name="configure" scoped="" ref="0x2af6f9a85270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af6f9a85500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af6f9a85500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af6f9a85880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af6f9a85a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af6f9a85ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af6f9a85d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2af6f9a887a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2af6f9a887a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f9a88b20"/>
        <function-ref name="requested" scoped="" ref="0x2af6f9a88cb0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f9a88e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f9a87020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2af6f9a871b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f9a84020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f9a84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f9a843a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f9a84530"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f9a846c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f9a84850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f9a849e0"/>
        <function-ref name="get" scoped="" ref="0x2af6f9a84b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f9a84d00"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f9a834d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f9a831b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f9a83020"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f9a83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f9a89270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f9a89270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f9a89610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f9a897a0"/>
        <function-ref name="request" scoped="" ref="0x2af6f9a89930"/>
        <function-ref name="granted" scoped="" ref="0x2af6f9a89ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f9a89c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2af6f9a87400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2af6f9a87400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2af6f9a87780"/>
        <function-ref name="userId" scoped="" ref="0x2af6f9a87910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2af6f9a837a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2af6f9a837a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f9a83b20"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f9a83cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2af6f8979540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2af6f8979540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af6f89798c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af6f8979a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af6f8979be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af6f8979d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af6f8976020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af6f89761b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af6f8976340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af6f89764d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f8976660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af6f89767f0"/>
        <function-ref name="getData" scoped="" ref="0x2af6f8976980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af6f8976b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af6f8976ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af6f8975020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af6f89751b0"/>
        <function-ref name="getIV" scoped="" ref="0x2af6f8975340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af6f89754d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af6f8975660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af6f89757f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af6f8975980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af6f8975b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af6f8975ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2af6f8975e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af6f8974020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af6f89741b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af6f8974540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af6f89746d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af6f8974860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af6f89749f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af6f8974b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af6f8974d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af6f8973020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af6f89731b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af6f8973340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af6f89734d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af6f8973660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af6f89737f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af6f8973980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af6f8973b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af6f8973ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af6f8973e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af6f8972020"/>
        <function-ref name="setData" scoped="" ref="0x2af6f89721b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af6f8972340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af6f89724d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af6f8972660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af6f89727f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af6f8972980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af6f8972b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af6f8971420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af6f89715b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af6f8971740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af6f89718d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af6f8971a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af6f8971bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af6f8971d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af6f8970020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af6f89701b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af6f8970340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2af6f8965250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2af6f8965250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2af6f89655d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2af6f8965760"/>
        <function-ref name="setUctl" scoped="" ref="0x2af6f89658f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2af6f8965a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2af6f8965c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2af6f8965da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2af6f89c6020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2af6f89c61b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2af6f89c6340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2af6f89c64d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2af6f89c6660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2af6f89c67f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2af6f89c6980"/>
        <function-ref name="getUbr" scoped="" ref="0x2af6f89c6c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2af6f89c6da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2af6f89c5020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2af6f89c51b0"/>
        <function-ref name="isUart" scoped="" ref="0x2af6f89c5340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2af6f89c54d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2af6f89c5660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2af6f89c57f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2af6f89c5980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2af6f89c5b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2af6f89c5ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f89c5e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2af6f89c4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2af6f89c43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2af6f89c4540"/>
        <function-ref name="tx" scoped="" ref="0x2af6f89c46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2af6f89c4860"/>
        <function-ref name="disableUart" scoped="" ref="0x2af6f89c49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2af6f89c4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2af6f89c4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2af6f89c3020"/>
        <function-ref name="rx" scoped="" ref="0x2af6f89c31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2af6f89c3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2af6f89c34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2af6f89c3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2af6f89c37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2af6f89c3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2af6f89c1cb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2af6f89c1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f89c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f89c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f89c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f89c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f89c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f89c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f89c0a00"/>
        <function-ref name="get" scoped="" ref="0x2af6f89c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f89c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f89bf020"/>
        <function-ref name="set" scoped="" ref="0x2af6f89bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f89bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f89bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f89bf760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f89bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2af6f896c430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2af6f896c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2af6f896c7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2af6f896c940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2af6f896cad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2af6f896cc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2af6f896cdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2af6f896b020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2af6f896b1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2af6f896b340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f896b4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2af6f896b660"/>
        <function-ref name="getData" scoped="" ref="0x2af6f896b7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2af6f896b980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2af6f896bb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2af6f896bda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2af6f896a020"/>
        <function-ref name="getIV" scoped="" ref="0x2af6f896a1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2af6f896a340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2af6f896a4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2af6f896a660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2af6f896a7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2af6f896a980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2af6f896ab10"/>
        <function-ref name="isI2C" scoped="" ref="0x2af6f896aca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2af6f896ae30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2af6f8969020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2af6f89693b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2af6f8969540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2af6f89696d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2af6f8969860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2af6f89699f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2af6f8969b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2af6f8969d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2af6f8968020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2af6f89681b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2af6f8968340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2af6f89684d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2af6f8968660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2af6f89687f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2af6f8968980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2af6f8968b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2af6f8968ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2af6f8968e30"/>
        <function-ref name="setData" scoped="" ref="0x2af6f8967020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2af6f89671b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2af6f8967340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2af6f89674d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2af6f8967660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2af6f89677f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2af6f8967980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2af6f8966020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2af6f89661b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2af6f8966340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2af6f89664d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2af6f8966660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2af6f89667f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2af6f8966980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2af6f8966b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2af6f8966ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2af6f8966e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2af6f89c3d40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2af6f89c3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f89c20e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f89c2270"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f89c2400"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f89c2590"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f89c2720"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f89c28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f89c2a40"/>
        <function-ref name="get" scoped="" ref="0x2af6f89c2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f89c2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f89c1020"/>
        <function-ref name="set" scoped="" ref="0x2af6f89c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f89c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f89c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f89c1760"/>
        <function-ref name="clr" scoped="" ref="0x2af6f89c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af6f8aabc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8aabc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aaa210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aaa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af6f8ab6da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af6f8ab6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af6f8aaeb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8aaeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aad020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af6f8aa9670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8aa9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa99f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af6f8aa2e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af6f8aa2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa0210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af6f8aa9e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af6f8aa9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa7210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af6f8a952f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8a952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a95670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a95800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af6f8a972f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8a972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a97670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a97800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af6f8ab3120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8ab3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af6f8a9d670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af6f8a9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af6f8a982f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8a982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a98670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af6f8aadc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af6f8aadc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aac020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af6f8aacc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8aacc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aab020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af6f8aa3670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8aa3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa39f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af6f8aa5e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af6f8aa5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa4210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af6f8aa7670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8aa7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa79f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f8ab7760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8ab7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8ab7ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8ab7c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8ab7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af6f8ab2aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8ab2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af6f8ab1120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af6f8ab1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af6f8a9ca70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8a9ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9cdf0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af6f8ab1870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8ab1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af6f8a98ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8a98ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a98e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af6f8ab3dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8ab3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af6f8a9ee50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af6f8a9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9d210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af6f8aac480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8aac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aac800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aac990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af6f8aad480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8aad480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aad800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af6f8ab6750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8ab6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af6f8a9fe50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8a9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9e210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af6f8aa0670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af6f8aa0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa09f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af6f8a9e670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8a9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af6f8a96ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8a96ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a96e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af6f8a97ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8a97ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a97e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af6f8aa4670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af6f8aa4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa49f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af6f8aa0e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af6f8aa0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9f210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af6f8a99ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8a99ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a99e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af6f8aa6670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8aa6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa69f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af6f8a95ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8a95ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8a95e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8afa020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8afa1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8afa340"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8afa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af6f8ab6100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8ab6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab6480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af6f8aae370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af6f8aae370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aae6f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aae880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af6f8aab480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8aab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aab800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af6f8aa3e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8aa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa2210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af6f8aa7e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8aa7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa6210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af6f8aa2670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8aa2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa29f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af6f8aaa670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8aaa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aaa9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aaab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af6f8ab5450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af6f8ab5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af6f8aaae50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8aaae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa9210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8ab8a80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8ab8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8ab8e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8ab7020"/>
        <function-ref name="request" scoped="" ref="0x2af6f8ab71b0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8ab7340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8ab74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af6f8ab0020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8ab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af6f8ab0cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af6f8ab0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af6f8a992f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af6f8a992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a99670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a99800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af6f8a9bad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8a9bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9be50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af6f8ab2450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8ab2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af6f8a9b2f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8a9b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9b670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af6f8a962f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af6f8a962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a96670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a96800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af6f8aa4e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8aa4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa3210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af6f8a9f670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af6f8a9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9f9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af6f8ab5aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af6f8ab5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af6f8ab3770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8ab3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab3af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af6f8aa6e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8aa6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa5210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af6f8ab0670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af6f8ab0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ab09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af6f8aa5670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af6f8aa5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8aa59f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8aa5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af6f8a9de50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af6f8a9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8a9c610"/>
        <function-ref name="write" scoped="" ref="0x2af6f8a9c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af6f8afa7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8afa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8afab20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8afacb0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8afae40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8af8020"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8af81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af6f8ae4c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8ae4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae3210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af6f8aefda0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af6f8aefda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aee180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af6f8ae8b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8ae8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae7020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af6f8ae2670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8ae2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae29f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af6f8adbe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af6f8adbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ada210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ada3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af6f8ae2e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af6f8ae2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae1210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af6f8ace2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8ace2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ace670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ace800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af6f8ad12f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8ad12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad1670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af6f8aed120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8aed120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aed4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af6f8ad6670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af6f8ad6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad69f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af6f8ad22f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8ad22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad2670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af6f8ae7c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af6f8ae7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae6020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af6f8ae6c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8ae6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae4020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af6f8adc670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8adc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8adc9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af6f8adfe50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af6f8adfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8add210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8add3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af6f8ae1670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8ae1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae19f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f8af0760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8af0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8af0ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8af0c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8af0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af6f8aecaa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8aecaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aece20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af6f8aea120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af6f8aea120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aea5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af6f8ad5a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8ad5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad5df0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af6f8aea870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8aea870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aeabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af6f8ad2ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8ad2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad2e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af6f8aeddc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8aeddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af6f8ad8e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af6f8ad8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad6210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af6f8ae6480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8ae6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae6800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af6f8ae7480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8ae7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae7800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af6f8aef750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8aef750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aefad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af6f8ad9e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8ad9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad8210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af6f8ada670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af6f8ada670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ada9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af6f8ad8670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8ad8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad89f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af6f8acfad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8acfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8acfe50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ace020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af6f8ad1ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8ad1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad1e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8acf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af6f8add670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af6f8add670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8add9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8addb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af6f8adae50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af6f8adae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad9210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af6f8ad3ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8ad3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad3e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af6f8ae0670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8ae0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae09f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af6f8acead0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8acead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8acee50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8acd020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8acd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8acd340"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8acd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af6f8aef100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8aef100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aef480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af6f8ae8370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af6f8ae8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae86f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af6f8ae4480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8ae4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae4800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af6f8adce50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8adce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8adb210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af6f8ae1e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8ae1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae0210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af6f8adb670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8adb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8adb9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af6f8ae3670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8ae3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae39f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af6f8aee450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af6f8aee450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aee7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af6f8ae3e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8ae3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ae2210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ae23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8af19e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8af19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8af1d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8af0020"/>
        <function-ref name="request" scoped="" ref="0x2af6f8af01b0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8af0340"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8af04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af6f8ae9020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8ae9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ae93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af6f8ae9cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af6f8ae9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ae80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af6f8ad32f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af6f8ad32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad3670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af6f8ad4ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8ad4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad4e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af6f8aec450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8aec450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aec7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af6f8ad42f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8ad42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad4670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af6f8acf2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af6f8acf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8acf670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8acf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af6f8adde50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8adde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8adc210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af6f8ad9670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af6f8ad9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad99f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af6f8aeeaa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af6f8aeeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aeee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af6f8aed770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8aed770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8aedaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af6f8ae0e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8ae0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8adf210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af6f8ae9670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af6f8ae9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ae99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af6f8adf670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af6f8adf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8adf9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8adfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af6f8ad6e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af6f8ad6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ad5610"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ad57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af6f8acd7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8acd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8acdb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8acdcb0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8acde40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8acc020"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8acc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2af6f8b2cb30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f8b2cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af6f8b29020"/>
        <function-ref name="changed" scoped="" ref="0x2af6f8b291b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af6f8b29340"/>
        <function-ref name="setAddress" scoped="" ref="0x2af6f8b294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2af6f8b2bd30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f8b2bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af6f8b150e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2af6f8b11310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2af6f8b11310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2af6f8b11690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2af6f8b0d8c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af6f8b0d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8b0dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2af6f8b03020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af6f8b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8b033a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2af6f8b61cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af6f8b61cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8afc0a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8afc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2af6f8afc5b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2af6f8afc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8afc930"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8afcac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2af6f8afd210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2af6f8afd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8afd590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2af6f8b50020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af6f8b50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8b503a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8b50530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2af6f8b508c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2af6f8b508c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b50c40"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b50dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b4f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b4f1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b4f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b4f4d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b4f660"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b4f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2af6f8b47b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b47b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af6f8b49970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2af6f8b4e490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2af6f8b4e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8b4e810"/>
        <function-ref name="write" scoped="" ref="0x2af6f8b4e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2af6f8b4ed30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2af6f8b4ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b4b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b4b270"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b4b400"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b4b590"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b4b720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b4b8b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b4ba40"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b4bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2af6f8b90020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af6f8b90e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2af6f8b8dd20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2af6f8b8dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2af6f8b8cb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f8b7d260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8b7d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8b7c090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8b7ca10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8b7c550"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8b7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2af6f8b7a890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2af6f8b7a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8b766e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8b75090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8b76ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8b75550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af6f8b70190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f8b70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8b70510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f8b706a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f8b70830"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b709c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f8b70b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8b70ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f8b70e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8b6f030"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8b6f1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f8b6f350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f8b6f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f8b73060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8b73060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792e460"/>
            <typename><typedef-ref name="TMicro" ref="0x2af6f792e7d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8b73e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8b72820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8b72360"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8b72ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2af6f8b515a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2af6f8b515a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b51920"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b51ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b51c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b51dd0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b6b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b6b1b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b6b340"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b6b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2af6f8b69c50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2af6f8b69c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b68020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b681b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2af6f8b68340"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b684d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b68660"/>
        <function-ref name="getResistor" scoped="" ref="0x2af6f8b687f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b68980"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b68b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2af6f8b68ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2af6f8b68e30"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b67020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2af6f8b671b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2af6f8b67340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2af6f8b675d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b67760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2af6f8b6a9e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2af6f8b6a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b6ad60"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b69020"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b69340"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b69660"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b697f0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b69980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f8b6ca20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f8b6ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8b6cda0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8bcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af6f8bbdcb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8bbdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f8bbc0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f8bbc230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f8bbc3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f8bbc550"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f8bbc6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f8bbc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2af6f8bb99f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2af6f8bb99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af6f8bb9d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2af6f8bbd020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2af6f8bbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8bbd3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8bbd530"/>
        <function-ref name="modify" scoped="" ref="0x2af6f8bbd6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8bbd850"/>
        <function-ref name="resend" scoped="" ref="0x2af6f8bbd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f8bc06d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f8bc06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8bc0a50"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8bc0be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2af6f8bbb190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2af6f8bbb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af6f8bbb510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af6f8bb2650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f8bb2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f8bb29d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f8bb2b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f8bb2cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f8bb2e80"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f8bb1030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f8bb11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2af6f8baa7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af6f8baa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8ba8d50"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8ba74c0"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f8ba8620"/>
        <function-ref name="set" scoped="" ref="0x2af6f8ba7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2af6f8c00020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8c00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c003a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c00530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2af6f8c00890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8c00890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c00c10"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c00da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2af6f8bb15e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2af6f8bb15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af6f8bb1960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2af6f8c04530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8c04530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c048b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2af6f8ba5880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2af6f8ba5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2af6f8ba5c00"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8ba5d90"/>
        <function-ref name="captured" scoped="" ref="0x2af6f8ba4020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2af6f8ba41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2af6f8bb07f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2af6f8bb07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8bac090"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8bad090"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f8bada10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8bad550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f8bac550"/>
        <function-ref name="start" scoped="" ref="0x2af6f8baf6a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8bafbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af6f8baca00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8baca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f8bacd80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f8bab020"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f8bab1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f8bab340"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f8bab4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f8bab660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2af6f8b98550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8b98550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8b988d0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8b98a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2af6f8b98e00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8b98e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c051c0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c05350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2af6f8bfad40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8bfad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8bfd0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af6f8bfd270"/>
        <function-ref name="sfd" scoped="" ref="0x2af6f8bfd400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8bb38c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8bb38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8bb3c40"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8bb3dd0"/>
        <function-ref name="modify" scoped="" ref="0x2af6f8bb2020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8bb21b0"/>
        <function-ref name="resend" scoped="" ref="0x2af6f8bb2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2af6f8b9ad10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8b9ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8b990e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8b99270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8b99400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2af6f8c04c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8c04c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af6f8b9d820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af6f8b9d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b9dba0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b9dd30"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b9c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b9c1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b9c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b9c4d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b9c660"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b9c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8bb5820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8bb5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8bb5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8bab9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8bab9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8babd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8baa020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8baa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2af6f8b9fb30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8b9fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8ba5020"/>
        <function-ref name="isSet" scoped="" ref="0x2af6f8ba51b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8ba5340"/>
        <function-ref name="set" scoped="" ref="0x2af6f8ba54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2af6f8c023e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8c023e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c02960"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c02af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af6f8b9a020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af6f8b9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8b9a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8b9a530"/>
        <function-ref name="request" scoped="" ref="0x2af6f8b9a6c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8b9a850"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8b9a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2af6f8ba4500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2af6f8ba4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8ba4980"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8ba4b10"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8ba4ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8ba4e30"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b9d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b9d1b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b9d340"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2af6f8bff130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8bff130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8bff4b0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8bff640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2af6f8bff9c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8bff9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8bffd40"/>
        <function-ref name="write" scoped="" ref="0x2af6f8bfe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2af6f8c056d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8c056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c05a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2af6f8b9cb40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2af6f8b9cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8b9b020"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8b9b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8b9b340"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8b9b4d0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8b9b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8b9b7f0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8b9b980"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8b9bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f8bfd6c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f8bfd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f8bfda40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f8bfdbd0"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f8bfdd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f8bfc020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f8bfc1b0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8bfc340"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f8bfc4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f8bfcb10"/>
        <function-ref name="set" scoped="" ref="0x2af6f8bfc660"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f8bfc7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f8bfc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2af6f8c015e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8c015e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c01960"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c01af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f8bb3020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f8bb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8bb33a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8bb3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2af6f8b99780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8b99780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8b99b00"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8b99c90"/>
        <function-ref name="write" scoped="" ref="0x2af6f8b99e20"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8b98020"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8b981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2af6f8c05de0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af6f8c05de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c04180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2af6f8c02e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af6f8c02e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c01220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2af6f8bb1d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2af6f8bb1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af6f8bb0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af6f8ca4c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8ca4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca2210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af6f8c40020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af6f8c40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af6f8ca7c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8ca7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca6020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af6f8ca1670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8ca1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca19f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af6f8c9ae50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af6f8c9ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c99210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af6f8ca1e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af6f8ca1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca0210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af6f8c8d2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8c8d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c8d670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c8d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af6f8c902f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8c902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c90670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c90800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af6f8c3f370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8c3f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af6f8c95670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af6f8c95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c959f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af6f8c912f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8c912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c91670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c91800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af6f8ca6c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af6f8ca6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca5020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af6f8ca5c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8ca5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca4020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af6f8c9b670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8c9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9b9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af6f8c9ee50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af6f8c9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9c210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af6f8ca0670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8ca0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca09f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f8c428f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8c428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8c42c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8c42e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8c41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af6f8c3ed00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8c3ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af6f8c3c370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af6f8c3c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af6f8c94a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8c94a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c94df0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af6f8c3cac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8c3cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af6f8c91ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8c91ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c91e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af6f8c3e060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8c3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af6f8c97e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af6f8c97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c95210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af6f8ca5480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8ca5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca5800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af6f8ca6480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8ca6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca6800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af6f8c41940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8c41940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c41cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af6f8c98e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8c98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c97210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af6f8c99670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af6f8c99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c999f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af6f8c97670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8c97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c979f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af6f8c8ead0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8c8ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c8ee50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af6f8c90ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8c90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c90e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af6f8c9c670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af6f8c9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9c9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af6f8c99e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af6f8c99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c98210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af6f8c92ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8c92ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c92e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af6f8c9f670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8c9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9f9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af6f8c8dad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8c8dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8c8de50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8c8c020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c8c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8c8c340"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8c8c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af6f8c412f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8c412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c41670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af6f8ca7490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af6f8ca7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca7810"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af6f8ca4480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8ca4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca4800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af6f8c9be50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8c9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9a210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af6f8ca0e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8ca0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9f210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af6f8c9a670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8c9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af6f8ca2670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8ca2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca29f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af6f8c40670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af6f8c40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c409f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af6f8ca2e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8ca2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8ca1210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8ca13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8c44c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8c44c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8c42020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8c421b0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8c42340"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8c424d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8c42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af6f8ca8160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8ca8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ca84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af6f8ca8e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af6f8ca8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ca71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af6f8c922f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af6f8c922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c92670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c92800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af6f8c93ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8c93ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c93e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af6f8c3e6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8c3e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af6f8c932f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8c932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c93670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c93800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af6f8c8e2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af6f8c8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c8e670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af6f8c9ce50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8c9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9b210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af6f8c98670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af6f8c98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c989f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af6f8c40cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af6f8c40cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af6f8c3f9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8c3f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8c3fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af6f8c9fe50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8c9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9e210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af6f8ca87b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af6f8ca87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8ca8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af6f8c9e670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af6f8c9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c9e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af6f8c95e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af6f8c95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8c94610"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c947a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af6f8c8c7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8c8c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8c8cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8c8ccb0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8c8ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8c8b020"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8c8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2af6f8c80df0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8c80df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8c7d1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af6f8c7d350"/>
        <function-ref name="sfd" scoped="" ref="0x2af6f8c7d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8c7d7c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8c7d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8c7db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2af6f8c7c020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2af6f8c7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af6f8c7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f8c805c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f8c805c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8c80940"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8c80ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2af6f8c75380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2af6f8c75380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8c75700"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8c75890"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8c75a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8c75bb0"/>
        <function-ref name="get" scoped="" ref="0x2af6f8c75d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8c73020"/>
        <function-ref name="set" scoped="" ref="0x2af6f8c731b0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8c73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2af6f8cdbb90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af6f8cdbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af6f8cda020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af6f8cda1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af6f8cda340"/>
        <function-ref name="syncDone" scoped="" ref="0x2af6f8cda4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af6f8cda660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af6f8cda7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af6f8cda980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af6f8cdab10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af6f8cdaca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af6f8cdae30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af6f8cd9020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af6f8cd91b0"/>
        <function-ref name="sync" scoped="" ref="0x2af6f8cd9340"/>
        <function-ref name="getChannel" scoped="" ref="0x2af6f8cd95d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af6f8cd9760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2af6f8cc49d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2af6f8cc49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8cc4d50"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8cc3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2af6f8cd9d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2af6f8cd9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8cd7330"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8cd7a60"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f8cd8ba0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8cd5210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2af6f8c736b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2af6f8c736b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8c73a30"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8c73bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8c73d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8c72020"/>
        <function-ref name="get" scoped="" ref="0x2af6f8c721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8c72340"/>
        <function-ref name="set" scoped="" ref="0x2af6f8c724d0"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8c72660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2af6f8cd4cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8cd4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8cd30a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cd3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2af6f8cd3590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8cd3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8cd3910"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cd3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2af6f8cd26d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8cd26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8cd2a50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cd2be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af6f8cdc330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8cdc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f8cdc6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f8cdc840"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f8cdc9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f8cdcb60"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f8cdccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f8cdce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2af6f8c78550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2af6f8c78550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8c788d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2af6f8c78a60"/>
        <function-ref name="sfd" scoped="" ref="0x2af6f8c78bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2af6f8cdd3a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af6f8cdd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8cdd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2af6f8c76020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2af6f8c76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af6f8c763a0"/>
        <function-ref name="isInput" scoped="" ref="0x2af6f8c76530"/>
        <function-ref name="toggle" scoped="" ref="0x2af6f8c766c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af6f8c76850"/>
        <function-ref name="get" scoped="" ref="0x2af6f8c769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af6f8c76b70"/>
        <function-ref name="set" scoped="" ref="0x2af6f8c76d00"/>
        <function-ref name="clr" scoped="" ref="0x2af6f8c75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2af6f8cd1020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8cd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8cd13a0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cd1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8c79620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8c79620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8c799a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8cdb1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8cdb1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8cdb560"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8cdb6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8cdb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8c77020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8c77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8c773a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2af6f8cdf6e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2af6f8cdf6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8cdfa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8cdfbf0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8cdfd80"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8cde020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8cde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2af6f8cd3e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8cd3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8cd21c0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cd2350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2af6f8cde530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8cde530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8cde8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8cdea40"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cdebd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8cded60"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8cdd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2af6f8cd18b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8cd18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8cd1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2af6f8c777c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2af6f8c777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2af6f8c77b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f8cd0150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f8cd0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f8cd04d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f8cd0660"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f8cd07f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f8cd0980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f8cd0b10"/>
        <function-ref name="get" scoped="" ref="0x2af6f8cd0ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f8cd0e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f8ccf4d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8ccf020"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f8ccf1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f8ccf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2af6f8cd43e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8cd43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8cd4760"/>
        <function-ref name="write" scoped="" ref="0x2af6f8cd48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2af6f8cd5b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8cd5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2af6f8c72a50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2af6f8c72a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2af6f8c72dd0"/>
        <function-ref name="disable" scoped="" ref="0x2af6f8cdf020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2af6f8cdf1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2af6f8cdf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2af6f8cddad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8cddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8cdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2af6f8c79ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2af6f8c79ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2af6f8c780a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8c78230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af6f8d42a70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8d42a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af6f8d42df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af6f8d46670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f8d469f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f8d46b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f8d46d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f8d43020"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f8d431b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f8d43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af6f8d41550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d41550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8d40b00"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8d3f2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f8d403d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8d3f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2af6f8d420c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d420c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8d42440"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8d425d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8d42760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2af6f8d39480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8d39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8d39800"/>
        <function-ref name="isSet" scoped="" ref="0x2af6f8d39990"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8d39b20"/>
        <function-ref name="set" scoped="" ref="0x2af6f8d39cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af6f8d3d660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f8d3d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8d3cce0"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8d3b460"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f8d3c5b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8d3bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f8d436e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f8d436e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f8d43a60"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f8d43bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f8d43d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2af6f8d33020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2af6f8d33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2af6f8d333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2af6f8d38d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8d38d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f8d350e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f8d35270"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f8d35400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f8d35590"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f8d35720"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f8d358b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2af6f8d2a4a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f8d2a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8d2a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f8d2a9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8d2ab40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8d2acd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f8d2ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2af6f8d33a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f8d33a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8d31020"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8d31750"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f8d328d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f8d31e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2af6f8d34640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8d34640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8d349c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8d34b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8d34ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2af6f8d2b8b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f8d2b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8d2bc30"/>
        <function-ref name="isSet" scoped="" ref="0x2af6f8d2bdc0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8d2a020"/>
        <function-ref name="set" scoped="" ref="0x2af6f8d2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2af6f8d26820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2af6f8d26820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8d284c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2af6f8d28b80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af6f8d28b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8d257d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2af6f8d2faf0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f8d2faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f8d2d0d0"/>
        <function-ref name="clear" scoped="" ref="0x2af6f8d2d800"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f8d2e970"/>
        <function-ref name="set" scoped="" ref="0x2af6f8d2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f8d35c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f8d35c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f8d34020"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f8d341b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f8d34340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af6f8db64e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af6f8db64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8dad150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f8dad7c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8dad7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8dac620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8daa020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8dacae0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8daa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af6f8da5020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8da5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8da1630"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8da4a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8da3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8da34a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8da0020"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8da1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8da3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8da5c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8da1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8da4110"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8da45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af6f8da0610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af6f8da0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8d9f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8da6130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8da6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8da64b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f8de3870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f8de3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8de0090"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8de1090"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f8de1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8de1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f8de0550"/>
        <function-ref name="start" scoped="" ref="0x2af6f8de26a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8de2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8de3020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8de3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8de33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9ba0260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9ba0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9b9eb30"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9b9fa60"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9b9e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9b9e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9b9d020"/>
        <function-ref name="start" scoped="" ref="0x2af6f9b9f090"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9b9f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f9ba19d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f9ba19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f9ba1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af6f9b88a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9b88a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f9b88e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f9b87020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f9b871b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f9b87340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9b874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af6f9b8a020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9b8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9b8a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f9b8a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9b8a6c0"/>
        <function-ref name="get" scoped="" ref="0x2af6f9b8a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9b8a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9b8ab70"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f9b8ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9b89020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9b891b0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f9b89340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f9b894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af6f9b89760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9b89760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f9b89ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f9b89c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9b89e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f9b88020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f9b881b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9b88340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f9b884d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f9b88660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f9b887f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af6f9b7e760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9b7e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f9b7eae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f9b7ec70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f9b7ee00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f9b7d020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9b7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af6f9b81dd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9b81dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9b80180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f9b80310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9b804a0"/>
        <function-ref name="get" scoped="" ref="0x2af6f9b80630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9b807c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9b80950"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f9b80ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9b80c70"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9b80e00"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f9b7f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f9b7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9b85bf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9b85bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9b814e0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9b834e0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9b83e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9b839a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9b819a0"/>
        <function-ref name="start" scoped="" ref="0x2af6f9b84a80"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9b83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f9b85360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f9b85360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f9b856e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af6f9b7f440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9b7f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f9b7f7c0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f9b7f950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9b7fae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f9b7fc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f9b7fe00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9b7e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f9b7e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f9b7e340"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f9b7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f8d90b70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8d90b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8d8d9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8d8c360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8d8de70"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8d8c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2af6f8df8b90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2af6f8df8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8df69d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8df54e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8df5020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8df59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af6f8d88610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8d88610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8df95b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8df8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8df9a70"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8df84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9b9b5f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9b9b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9b98e50"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9b99e00"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9b98800"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9b98340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9b97340"/>
        <function-ref name="start" scoped="" ref="0x2af6f9b99430"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9b99940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af6f9b95d20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af6f9b95d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9b91670"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9b92550"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9b91020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9b92a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9b91b30"/>
        <function-ref name="start" scoped="" ref="0x2af6f9b93b60"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9b92090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f9b979b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f9b979b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f9b967e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9b951b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9b96ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9b95670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af6f8e219c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2af6f8e219c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8e21d40"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8e20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af6f8e25850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f8e25850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8e21090"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8e22090"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f8e22a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8e22550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f8e21550"/>
        <function-ref name="start" scoped="" ref="0x2af6f8e246a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8e24bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f8e2a2f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f8e2a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8e26870"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8e29e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8e27c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8e27780"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8e251e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8e26cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8e27300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8e29020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8e26260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8e294f0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8e299c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af6f8e44a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2af6f8e44a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8e44d80"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8e43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af6f8e49640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2af6f8e49640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8e45c40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8e461e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8e45020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8e46ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8e44590"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8e44110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8e46660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8e48390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8e45630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8e48860"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8e48d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f8e4f150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f8e4f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8e4b700"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8e4ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8e4ca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8e4c5b0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8e49090"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8e4bba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8e4c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8e4fd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8e4b0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8e4e2a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8e4e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af6f8e402b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af6f8e402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8e3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f8e3f690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f8e3f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f8e3e5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f8e3d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f8e3ea70"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f8e3d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f8e368c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f8e368c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8e98cf0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8e99320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8e980d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8e99c20"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8e96660"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8e961e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8e997a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8e9a4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8e986e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8e9a9b0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8e9ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af6f8ea22c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2af6f8ea22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8e9f870"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8ea1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8ea0c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8ea0780"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8e9d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8e9fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8ea0300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8ea1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8e9f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8ea14f0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8ea19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2af6f8e86c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2af6f8e86c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e85210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2af6f8e90020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2af6f8e90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2af6f8e8ac70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2af6f8e8ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e88020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2af6f8e84670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2af6f8e84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e849f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e84b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2af6f8e7de50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2af6f8e7de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7b210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2af6f8e84e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2af6f8e84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e82210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2af6f8e702f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2af6f8e702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e70670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e70800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2af6f8e722f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2af6f8e722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e72670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e72800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2af6f8e8e370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2af6f8e8e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2af6f8e78670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2af6f8e78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e789f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2af6f8e732f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2af6f8e732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e73670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e73800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2af6f8e88c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2af6f8e88c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e87020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2af6f8e87c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2af6f8e87c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e86020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2af6f8e7e670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2af6f8e7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7e9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2af6f8e80e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2af6f8e80e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7f210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2af6f8e82670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2af6f8e82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e829f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e82b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2af6f8e92970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2af6f8e92970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2af6f8e92cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2af6f8e92e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2af6f8e91030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2af6f8e8dd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2af6f8e8dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2af6f8e8c370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2af6f8e8c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2af6f8e77a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2af6f8e77a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e77df0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2af6f8e8cac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2af6f8e8cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2af6f8e73ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2af6f8e73ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e73e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2af6f8e8d060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2af6f8e8d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2af6f8e79e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2af6f8e79e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e78210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2af6f8e87480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2af6f8e87480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e87800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e87990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2af6f8e88480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2af6f8e88480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e88800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e88990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2af6f8e91950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2af6f8e91950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e91cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2af6f8e7ae50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2af6f8e7ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e79210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2af6f8e7b670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2af6f8e7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7b9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2af6f8e79670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2af6f8e79670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e799f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e79b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2af6f8e71ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2af6f8e71ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e71e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2af6f8e72ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2af6f8e72ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e72e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2af6f8e7f670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2af6f8e7f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7f9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2af6f8e7be50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2af6f8e7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7a210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2af6f8e74ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2af6f8e74ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e74e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2af6f8e81670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2af6f8e81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e819f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e81b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2af6f8e70ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2af6f8e70ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8e70e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8e6f020"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e6f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8e6f340"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8e6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2af6f8e91300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2af6f8e91300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e91680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2af6f8e8a490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2af6f8e8a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e8a810"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e8a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2af6f8e86480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2af6f8e86480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e86800"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e86990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2af6f8e7ee50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2af6f8e7ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7d210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2af6f8e82e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2af6f8e82e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e81210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2af6f8e7d670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2af6f8e7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7d9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2af6f8e85670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2af6f8e85670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e859f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e85b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2af6f8e90670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2af6f8e90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2af6f8e85e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2af6f8e85e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e84210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8e93d00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8e93d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8e920a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8e92230"/>
        <function-ref name="request" scoped="" ref="0x2af6f8e923c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8e92550"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8e926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2af6f8e8b160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2af6f8e8b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2af6f8e8be00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2af6f8e8be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2af6f8e742f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2af6f8e742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e74670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e74800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2af6f8e76ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2af6f8e76ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e76e50"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2af6f8e8d6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2af6f8e8d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2af6f8e762f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2af6f8e762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e76670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e76800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2af6f8e712f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2af6f8e712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e71670"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e71800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2af6f8e7fe50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2af6f8e7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7e210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2af6f8e7a670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2af6f8e7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e7a9f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e7ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2af6f8e90cc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2af6f8e90cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2af6f8e8e9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2af6f8e8e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2af6f8e81e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2af6f8e81e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e80210"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2af6f8e8b7b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2af6f8e8b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2af6f8e8bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2af6f8e80670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2af6f8e80670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e809f0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e80b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2af6f8e78e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2af6f8e78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2af6f8e77610"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e777a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2af6f8e6f7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2af6f8e6f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2af6f8e6fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2af6f8e6fcb0"/>
        <function-ref name="write" scoped="" ref="0x2af6f8e6fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x2af6f8e6e020"/>
        <function-ref name="readDone" scoped="" ref="0x2af6f8e6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2af6f8ebba20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af6f8ebba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af6f8ebbda0"/>
        <function-ref name="rand32" scoped="" ref="0x2af6f8eb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2af6f8eb8920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2af6f8eb8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8ebb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8ebf9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8ebf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8ebfd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2af6f8eb3a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af6f8eb3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af6f8eb3da0"/>
        <function-ref name="rand32" scoped="" ref="0x2af6f8eb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2af6f8eb4940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2af6f8eb4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8eb3560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8eb4080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8eb4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8eb4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f8ebdaa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f8ebdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8ebde20"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8eb5020"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8eb51b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8eb5340"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8eb54d0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8eb5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8f17020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8f17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f173a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f17530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f176c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f17850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8f18220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8f18220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f185a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f18730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f188c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f18a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f18be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8f13e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8f13e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f12210"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f123a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f12530"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f126c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f12850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8f16a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8f16a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f16da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f13020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f131b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f13340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f134d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2af6f8f118f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2af6f8f118f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2af6f8f11c70"/>
        <function-ref name="rand32" scoped="" ref="0x2af6f8f11e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8f13750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8f13750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8f13ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8f0f170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8f0f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f0f4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8f0f680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8f0f810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2af6f8f12ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f8f12ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8f12e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8f11020"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8f111b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8f11340"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8f114d0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8f11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f8eff690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f8eff690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8effa10"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8effba0"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8effd30"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8efe020"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8efe1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8efe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f8ef8950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f8ef8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8ef8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8efbaa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8efbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8efbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2af6f8ef8200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2af6f8ef8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8ef8580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f8ef33f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f8ef33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8ef3770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8ef4b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8ef4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8ef3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8ef7e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8ef7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8ef41e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8ef3a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8ef3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8ef3df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8ef2020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8ef21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2af6f8ef4570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2af6f8ef4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8ef48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f8f3c020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f8f3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8f3c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8f3c6b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8f3c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f3ca30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f3cbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f3cd50"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f3b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8f41960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8f41960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f41ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f41e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f40030"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f401c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f40350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af6f8f40ca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8f40ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f3f0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f3f230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f3f3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f3f550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f3f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8f405f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8f405f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8f40970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8f42cb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8f42cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8f410a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8f41230"/>
        <function-ref name="request" scoped="" ref="0x2af6f8f413c0"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8f41550"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8f416e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af6f8f3fa50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f8f3fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8f3fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af6f8f3d170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af6f8f3d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8f3d4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f8f3d680"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f3d810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f3d9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f8f3db30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8f33d70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8f33d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f32180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f32310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f324a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f32630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f327c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f8f32b10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f8f32b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8f31020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2af6f8f7cdb0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2af6f8f7cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8f7b180"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8f7b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af6f8f312f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f8f312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f8f31670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f8f31800"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f8f31990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f8f31b20"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f8f31cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f8f31e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2af6f8f35a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2af6f8f35a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f35da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f34020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f341b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f34340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f344d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2af6f8f2fb70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2af6f8f2fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af6f8f2e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af6f8f2e1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af6f8f2e340"/>
        <function-ref name="dequeue" scoped="" ref="0x2af6f8f2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8f2f170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8f2f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f2f4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8f2f680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8f2f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2af6f8f35370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2af6f8f35370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8f356f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2af6f8f377b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2af6f8f377b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f8f37b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f8f37cc0"/>
        <function-ref name="request" scoped="" ref="0x2af6f8f37e50"/>
        <function-ref name="granted" scoped="" ref="0x2af6f8f36020"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f8f361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2af6f8f364d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2af6f8f364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8f36850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f369e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f36b70"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8f36d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8f35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2af6f8f34840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2af6f8f34840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8f34bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2af6f8f33020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2af6f8f33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f8f333a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f8f33530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8f336c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8f33850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f8f339e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f8fd6dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f8fd6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f8fd5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2af6f8fd5410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2af6f8fd5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2af6f8fd5790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2af6f8fd5920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2af6f8fd5ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2af6f8fd5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f8fcab80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f8fcab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f8fc9020"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f8fc91b0"/>
        <function-ref name="start" scoped="" ref="0x2af6f8fc9340"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8fc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8fc8860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8fc8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8fc8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fc8d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8fc7020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8fc71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8fc7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f8fc7690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f8fc7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8fc7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8fcecf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8fcecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8fcb0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fcb230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8fcb3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8fcb550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8fcb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af6f8fca080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8fca080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af6f8fca400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af6f8fca590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af6f8fca720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af6f8fca8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2af6f8fc9800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2af6f8fc9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8fc9b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8fc9d10"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8fc8020"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8fc81b0"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8fc8340"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8fc84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2af6f8fc7d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2af6f8fc7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f8fc5180"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f8fc5310"/>
        <function-ref name="start" scoped="" ref="0x2af6f8fc54a0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8fc5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8fcb980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8fcb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8fcbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af6f8fc22d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f8fc22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af6f8fc2650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af6f8fc27e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af6f8fc2970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af6f8fc2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f8fc4580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f8fc4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8fc4900"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8fc4a90"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8fc4c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8fc4db0"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8fc3020"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8fc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8fb5d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8fb5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8fb4180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fb4310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8fb44a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8fb4630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8fb47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8fb62a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8fb62a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8fb6620"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fb67b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8fb6940"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8fb6ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8fb6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af6f8fb5020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af6f8fb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af6f8fb53a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2af6f8fb5530"/>
        <function-ref name="getRetries" scoped="" ref="0x2af6f8fb56c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af6f8fb5850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af6f8fb59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f8fb0dd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f8fb0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8faf180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8faf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8faf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8faf630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8faf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2af6f8fa42a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2af6f8fa42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f8fa4620"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f8fa47b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2af6f8fad650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2af6f8fad650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8fa9c40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8faa1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8fa9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8faaae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8fa8590"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8fa8110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8faa660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8fac390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8fa9630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8fac860"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8facd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f8fb33b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f8fb33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8fb3730"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fb38c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8fb3a50"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8fb3be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8fb3d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2af6f8fafaf0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2af6f8fafaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8fafe70"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8fae030"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8fae1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8fae350"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8fae4e0"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8fae670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f8fa8a30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f8fa8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fa8db0"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f8fa7020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f8fa71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2af6f8fae9a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f8fae9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f8faed20"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f8fad020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f8fad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2af6f8fb0080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2af6f8fb0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2af6f8fb0400"/>
        <function-ref name="setRetries" scoped="" ref="0x2af6f8fb0590"/>
        <function-ref name="getRetries" scoped="" ref="0x2af6f8fb0720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2af6f8fb08b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2af6f8fb0a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2af6f8ff5350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2af6f8ff5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2af6f8ff56d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2af6f8ff5860"/>
        <function-ref name="isState" scoped="" ref="0x2af6f8ff59f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2af6f8ff5b80"/>
        <function-ref name="requestState" scoped="" ref="0x2af6f8ff5d10"/>
        <function-ref name="forceState" scoped="" ref="0x2af6f8ff4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f8ff3750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f8ff3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f8fefc40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f8ff01e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f8fef020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f8ff0ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f8fee590"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f8fee110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f8ff0660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f8ff2390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f8fef630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f8ff2860"/>
        <function-ref name="stop" scoped="" ref="0x2af6f8ff2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f904f690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f904f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f904fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f9050860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f9050860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9050be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9050d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f904f020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f904f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f904f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2af6f904d610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2af6f904d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2af6f904d990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2af6f904db20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2af6f904dcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2af6f904de40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2af6f904c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2af6f904c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2af6f904c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2af6f904c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2af6f904c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2af6f904c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2af6f904c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2af6f904cb10"/>
        <function-ref name="sync" scoped="" ref="0x2af6f904cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2af6f904b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2af6f904b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2af6f9052830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2af6f9052830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f9052bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f9052d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f9050020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f90501b0"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f9050340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f90504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2af6f9053b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2af6f9053b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2af6f9052020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2af6f904a1f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2af6f904a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2af6f904a570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2af6f904a700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2af6f904a890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2af6f904aa20"/>
        <function-ref name="setCca" scoped="" ref="0x2af6f904abb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2af6f904ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f90548f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f90548f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9054c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9054e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9053020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f90531b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9053340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f8fdcda0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f8fdcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f8fdb180"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f8fdb310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f8fdb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f8fdb630"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f8fdb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af6f8fdac00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af6f8fdac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f9055020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2af6f904fce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2af6f904fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2af6f904e0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2af6f904e230"/>
        <function-ref name="getRssi" scoped="" ref="0x2af6f904e3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2af6f904e550"/>
        <function-ref name="getPower" scoped="" ref="0x2af6f904e6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2af6f904e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2af6f904b4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2af6f904b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2af6f904b950"/>
        <function-ref name="changed" scoped="" ref="0x2af6f904bae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2af6f904bc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2af6f904be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2af6f904eb70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2af6f904eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2af6f904d020"/>
        <function-ref name="getHeader" scoped="" ref="0x2af6f904d1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2af6f904d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f8fda020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f8fda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f8fda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f9049d30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f9049d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f90480e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f9048270"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f9048400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f9048590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f9048720"/>
        <function-ref name="get" scoped="" ref="0x2af6f90488b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f9048a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f90471b0"/>
        <function-ref name="set" scoped="" ref="0x2af6f9048bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f9048d60"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f9047020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f90552d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f90552d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9055650"/>
        <function-ref name="source" scoped="" ref="0x2af6f90557e0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9055970"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9055b00"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9055c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9055e20"/>
        <function-ref name="type" scoped="" ref="0x2af6f9054020"/>
        <function-ref name="setType" scoped="" ref="0x2af6f90541b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9054340"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f90544d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9054660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2af6f90490f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2af6f90490f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2af6f9049470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2af6f9049600"/>
        <function-ref name="request" scoped="" ref="0x2af6f9049790"/>
        <function-ref name="granted" scoped="" ref="0x2af6f9049920"/>
        <function-ref name="isOwner" scoped="" ref="0x2af6f9049ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2af6f90b7580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2af6f90b7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2af6f90b7900"/>
        <function-ref name="stopDone" scoped="" ref="0x2af6f90b7a90"/>
        <function-ref name="start" scoped="" ref="0x2af6f90b7c20"/>
        <function-ref name="stop" scoped="" ref="0x2af6f90b7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2af6f90a2060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af6f90a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af6f90a2e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2af6f90a1380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f90b37e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f90b37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f90b3b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f90b3cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f90b3e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f90b2030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f90b21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af6f90b31d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af6f90b31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f90b3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2af6f90b0640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2af6f90b0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2af6f90b09c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2af6f90b0b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2af6f90b0ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2af6f90b0e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2af6f90a8e50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af6f90a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f90a6c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f90a4590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f90a4110"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f90a5580"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f90a5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f90b45c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f90b45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f90b4940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2af6f90b1b20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2af6f90b1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f90b0020"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f90b01b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f90b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2af6f90afaa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af6f90afaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f90ad890"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f90ab1e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f90acd10"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f90ac1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f90ac6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f90b2470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f90b2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f90b27f0"/>
        <function-ref name="source" scoped="" ref="0x2af6f90b2980"/>
        <function-ref name="address" scoped="" ref="0x2af6f90b2b10"/>
        <function-ref name="destination" scoped="" ref="0x2af6f90b2ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f90b2e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f90b1020"/>
        <function-ref name="type" scoped="" ref="0x2af6f90b11b0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f90b1340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f90b14d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f90b1660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f90b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2af6f90abc50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af6f90abc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af6f90a9a40"/>
        <function-ref name="eventTime" scoped="" ref="0x2af6f90a8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2af6f9108e60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2af6f9108e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f9107210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2af6f910ba00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2af6f910ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f910bd80"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f910a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f910a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f910a340"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f910a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2af6f910f910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2af6f910f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af6f910e740"/>
        <function-ref name="eventTime" scoped="" ref="0x2af6f910ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2af6f90984d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2af6f90984d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9097390"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9096c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9096800"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9097c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f90961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f9094340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f9094340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f90946c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9094850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f90949e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9094b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9094d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2af6f910b2c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2af6f910b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f910b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2af6f910a800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2af6f910a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f910ab80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f910ad10"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9109020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f91091b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9109340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2af6f9106130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2af6f9106130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f9105750"/>
        <function-ref name="clear" scoped="" ref="0x2af6f9105e80"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f9105020"/>
        <function-ref name="set" scoped="" ref="0x2af6f91035d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2af6f91096a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2af6f91096a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9109a20"/>
        <function-ref name="source" scoped="" ref="0x2af6f9109bb0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9109d40"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9108020"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f91081b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9108340"/>
        <function-ref name="type" scoped="" ref="0x2af6f91084d0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9108660"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f91087f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9108980"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9108b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f910d6b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f910d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f910da30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2af6f90fe020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2af6f90fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f90fe3a0"/>
        <function-ref name="isSet" scoped="" ref="0x2af6f90fe530"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f90fe6c0"/>
        <function-ref name="set" scoped="" ref="0x2af6f90fe850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2af6f90fed30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2af6f90fed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f90fd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2af6f90fb0f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2af6f90fb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2af6f90fb470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2af6f90fb600"/>
        <function-ref name="led1On" scoped="" ref="0x2af6f90fb790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2af6f90fb920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2af6f90fbab0"/>
        <function-ref name="get" scoped="" ref="0x2af6f90fbc40"/>
        <function-ref name="led1Off" scoped="" ref="0x2af6f90fbdd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2af6f90fa4d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f90fa020"/>
        <function-ref name="led0On" scoped="" ref="0x2af6f90fa1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2af6f90fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2af6f90fc060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2af6f90fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f90fcc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2af6f909ec10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2af6f909ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f909ca40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f909a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f909a020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f909b350"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f909b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9113020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f91133a0"/>
        <function-ref name="source" scoped="" ref="0x2af6f9113530"/>
        <function-ref name="address" scoped="" ref="0x2af6f91136c0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9113850"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f91139e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9113b70"/>
        <function-ref name="type" scoped="" ref="0x2af6f9113d00"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9112020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f91121b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9112340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f91124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2af6f9112b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2af6f9112b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2af6f9111990"/>
        <function-ref name="eventTime" scoped="" ref="0x2af6f910f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2af6f9107550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2af6f9107550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f91079d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2af6f9102270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2af6f9102270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2af6f9101800"/>
        <function-ref name="clear" scoped="" ref="0x2af6f90ff020"/>
        <function-ref name="isValid" scoped="" ref="0x2af6f91010d0"/>
        <function-ref name="set" scoped="" ref="0x2af6f90ff750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f920f020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f920f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f920f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f920f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f920f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f920f850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f920f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f920fc30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f920fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f920e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f920e1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f920e340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f920e4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f920e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f920e8b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f920e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f920ec30"/>
        <function-ref name="source" scoped="" ref="0x2af6f920edc0"/>
        <function-ref name="address" scoped="" ref="0x2af6f920d020"/>
        <function-ref name="destination" scoped="" ref="0x2af6f920d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f920d340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f920d4d0"/>
        <function-ref name="type" scoped="" ref="0x2af6f920d660"/>
        <function-ref name="setType" scoped="" ref="0x2af6f920d7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f920d980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f920db10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f920dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f920c020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f920c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f920c3a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f920c530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f920c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9cc0cb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9cc0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9cbe0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9cbe230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9cbe3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9cbe550"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9cbe6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f9cbe930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f9cbe930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9cbecb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9cbee40"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9cbd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9cbd1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9cbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9cbd590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9cbd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9cbd910"/>
        <function-ref name="source" scoped="" ref="0x2af6f9cbdaa0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9cbdc30"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9cbddc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9cbc020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9cbc1b0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9cbc340"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9cbc4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9cbc660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9cbc7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9cbc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f9cbcc10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f9cbcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f9cbb020"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f9cbb1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f9cbb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9cb2660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9cb2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9cb29e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9cb2b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9cb2d00"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9cb1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9cb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af6f9cb1460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f9cb1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9cb17e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9cb1970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9cb1b00"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9cb1c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9cb1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f9cb00e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9cb00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9cb0460"/>
        <function-ref name="source" scoped="" ref="0x2af6f9cb05f0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9cb0780"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9cb0910"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9cb0aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9cb0c30"/>
        <function-ref name="type" scoped="" ref="0x2af6f9cb0dc0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9caf020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9caf1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9caf340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9caf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f916e940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f916e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f916ecc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f916ee50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f916b020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f916b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f916b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2af6f91a2400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f91a2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f91a27a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f91a2930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f91a2ac0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f91a2c50"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f91a2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2af6f91a34b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f91a34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f91a3850"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f91a39e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f91a3b70"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f91a3d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f91a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2af6f91a0720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f91a0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f91a0aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f91a0c30"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f91a0dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f919e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f919e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2af6f919e480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2af6f919e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f919e800"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f919e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2af6f919ec60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2af6f919ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f919d020"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f919d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f91a1060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f91a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f91a13e0"/>
        <function-ref name="source" scoped="" ref="0x2af6f91a1570"/>
        <function-ref name="address" scoped="" ref="0x2af6f91a1700"/>
        <function-ref name="destination" scoped="" ref="0x2af6f91a1890"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f91a1a20"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f91a1bb0"/>
        <function-ref name="type" scoped="" ref="0x2af6f91a1d40"/>
        <function-ref name="setType" scoped="" ref="0x2af6f91a0020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f91a01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f91a0340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f91a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af6f9208830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af6f9208830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f92064c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f9206b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f9206b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f9205970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9204340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9205e30"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9204800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af6f9203e60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2af6f9203e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f7904bf0"/>
            <typename><typedef-ref name="TMilli" ref="0x2af6f792f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f9200ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af6f91ef680" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.JoinReqDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91ef680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f923bc40"/>
        <function-ref name="fired" scoped="" ref="0x2af6f923d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f923b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f923dae0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f923a590"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f923a110"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f923d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f923e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f923b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f923e860"/>
        <function-ref name="stop" scoped="" ref="0x2af6f923ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af6f91e5020" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af6f91e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f91e2630"/>
        <function-ref name="fired" scoped="" ref="0x2af6f91e4a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f91e3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f91e34a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f91e1020"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f91e2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f91e3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f91e5c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f91e2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f91e4110"/>
        <function-ref name="stop" scoped="" ref="0x2af6f91e45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f91dfa00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f91dfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f91db2a0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f91dd2a0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f91ddc20"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f91dd760"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f91db760"/>
        <function-ref name="start" scoped="" ref="0x2af6f91de890"/>
        <function-ref name="stop" scoped="" ref="0x2af6f91deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f91df1b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f91df1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f91df530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9d114f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9d114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9d0fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9d10da0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9d0f760"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9d0f2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9d0e2a0"/>
        <function-ref name="start" scoped="" ref="0x2af6f9d103d0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9d108e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f9d13b10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f9d13b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f9d11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2af6f9cf9da0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9cf9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f9cf8180"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f9cf8310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f9cf84a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f9cf8630"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9cf87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2af6f9cfb450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9cfb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9cfb7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f9cfb960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9cfbaf0"/>
        <function-ref name="get" scoped="" ref="0x2af6f9cfbc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9cfbe10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9cfa020"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f9cfa1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9cfa340"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9cfa4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f9cfa660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f9cfa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2af6f9cfaa80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9cfaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f9cfae00"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f9cf9020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9cf91b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f9cf9340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f9cf94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9cf9660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f9cf97f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f9cf9980"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f9cf9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2af6f9cefa80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2af6f9cefa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2af6f9cefe00"/>
        <function-ref name="setEvent" scoped="" ref="0x2af6f9cee020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2af6f9cee1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2af6f9cee340"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9cee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2af6f9cf1190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2af6f9cf1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9cf1510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2af6f9cf16a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9cf1830"/>
        <function-ref name="get" scoped="" ref="0x2af6f9cf19c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9cf1b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9cf1ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2af6f9cf1e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9cf0030"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9cf01c0"/>
        <function-ref name="setMode" scoped="" ref="0x2af6f9cf0350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2af6f9cf04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9cf5020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9cf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9cf2870"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9cf4840"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9cf2220"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9cf4d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9cf2d30"/>
        <function-ref name="start" scoped="" ref="0x2af6f9cf5e30"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9cf4380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af6f9cf6660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2af6f9cf6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af6f9cf69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2af6f9cf0770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2af6f9cf0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2af6f9cf0af0"/>
        <function-ref name="getControl" scoped="" ref="0x2af6f9cf0c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2af6f9cf0e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2af6f9cef020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2af6f9cef1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2af6f9cef340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2af6f9cef4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2af6f9cef660"/>
        <function-ref name="setControl" scoped="" ref="0x2af6f9cef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af6f9d0c890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9d0c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9d080d0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9d090d0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9d09a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9d09590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9d08590"/>
        <function-ref name="start" scoped="" ref="0x2af6f9d0b6e0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9d0bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2af6f9d050a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2af6f9d050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9d02b30"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9d049f0"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9d024e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9d02020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9d01020"/>
        <function-ref name="start" scoped="" ref="0x2af6f9d04020"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9d04530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af6f9d08c00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2af6f9d08c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af6f9d07a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af6f9d064e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af6f9d06020"/>
        <function-ref name="overflow" scoped="" ref="0x2af6f9d069a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af6f9253cc0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2af6f9253cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f92520a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f9252230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af6f9257b10" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2af6f9257b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9253390"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9255360"/>
        <function-ref name="startAt" scoped="" ref="0x2af6f9255ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9255820"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af6f9253850"/>
        <function-ref name="start" scoped="" ref="0x2af6f9256970"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9256e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f91d9470" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f91d9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f91d5a20"/>
        <function-ref name="fired" scoped="" ref="0x2af6f91d7020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f91d7da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f91d7920"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f92574a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9257020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f91d74a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f91d8090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f91d5410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f91d8560"/>
        <function-ref name="stop" scoped="" ref="0x2af6f91d8a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af6f9243650" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2af6f9243650"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af6f92439d0"/>
        <function-ref name="runTask" scoped="" ref="0x2af6f9243b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af6f92493b0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2af6f92493b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9245870"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9247e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9246c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9246780"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f92431e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9245cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9246300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9247020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9245260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f92474f0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f92479c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af6f9250d70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2af6f9250d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f924a470"/>
        <function-ref name="fired" scoped="" ref="0x2af6f924d9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f924c7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f924c320"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f924adb0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f924a910"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f924de50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f924f9a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f924cdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f924d020"/>
        <function-ref name="stop" scoped="" ref="0x2af6f924d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9238b30" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9238b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9237020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f92371b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9237340"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f92374d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9237660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f92378b0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f92378b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9237c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9237dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9236020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f92361b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9236340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9236590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9236590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9236910"/>
        <function-ref name="source" scoped="" ref="0x2af6f9236aa0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9236c30"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9236dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9235020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f92351b0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9235340"/>
        <function-ref name="setType" scoped="" ref="0x2af6f92354d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9235660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f92357f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9235980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f9235c10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f9235c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f9234020"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f92341b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f9234340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9d3c3b0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9d3c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9d3c730"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9d3c8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9d3ca50"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9d3cbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9d3cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f9d3b020" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f9d3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9d3b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9d3b530"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9d3b6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9d3b850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9d3b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9d3bc30" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9d3bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9d3a020"/>
        <function-ref name="source" scoped="" ref="0x2af6f9d3a1b0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9d3a340"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9d3a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9d3a660"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9d3a7f0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9d3a980"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9d3ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9d3aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9d3ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9d39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f9d392b0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f9d392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f9d39630"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f9d397c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f9d39950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9ddf640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9ddf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9ddf9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9ddfb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9ddfce0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9ddfe70"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9dde030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af6f9dde2e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f9dde2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9dde660"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9dde7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9dde980"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9ddeb10"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9ddeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f9ddd020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9ddd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9ddd3a0"/>
        <function-ref name="source" scoped="" ref="0x2af6f9ddd530"/>
        <function-ref name="address" scoped="" ref="0x2af6f9ddd6c0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9ddd850"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9ddd9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9dddb70"/>
        <function-ref name="type" scoped="" ref="0x2af6f9dddd00"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9ddc020"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9ddc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9ddc340"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9ddc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f922bdd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f922bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f922a180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f922a310"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f922a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f922a630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f922a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f922b800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f922b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f922bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f922aa10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f922aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f922ad90"/>
        <function-ref name="source" scoped="" ref="0x2af6f9229020"/>
        <function-ref name="address" scoped="" ref="0x2af6f92291b0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9229340"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f92294d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9229660"/>
        <function-ref name="type" scoped="" ref="0x2af6f92297f0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9229980"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9229b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9229ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9229e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9226530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9226530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f92268b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9226a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9226bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9226d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9225020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f9225270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f9225270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f92255f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9225780"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9225910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9225aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9225c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9225e80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9225e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9224220"/>
        <function-ref name="source" scoped="" ref="0x2af6f92243b0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9224540"/>
        <function-ref name="destination" scoped="" ref="0x2af6f92246d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9224860"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f92249f0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9224b80"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9224d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9222020"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f92221b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9222340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f92225d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f92225d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f9222950"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f9222ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f9222c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9dc2920" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9dc2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9dc2ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9dc2e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9dc1020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9dc11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9dc1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f9dc1590" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f9dc1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9dc1910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9dc1aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9dc1c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9dc1dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9dc0270" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9dc0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9dc05f0"/>
        <function-ref name="source" scoped="" ref="0x2af6f9dc0780"/>
        <function-ref name="address" scoped="" ref="0x2af6f9dc0910"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9dc0aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9dc0c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9dc0dc0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9dbf020"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9dbf1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9dbf340"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9dbf4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9dbf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f9dbf8f0" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f9dbf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f9dbfc70"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f9dbfe00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f9dbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9db5b20" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9db5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9db4020"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9db41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9db4340"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9db44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9db4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af6f9db4910" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f9db4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9db4c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9db4e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9db2020"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9db21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9db2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f9db2590" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9db2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9db2910"/>
        <function-ref name="source" scoped="" ref="0x2af6f9db2aa0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9db2c30"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9db2dc0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9db1020"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9db11b0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9db1340"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9db14d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9db1660"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9db17f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9db1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f921f710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f921f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f921fa90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f921fc20"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f921fdb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f921e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f921e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f921f140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f921f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f921f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f921e400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f921e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f921e780"/>
        <function-ref name="source" scoped="" ref="0x2af6f921e910"/>
        <function-ref name="address" scoped="" ref="0x2af6f921eaa0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f921ec30"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f921edc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f921d020"/>
        <function-ref name="type" scoped="" ref="0x2af6f921d1b0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f921d340"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f921d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f921d660"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f921d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f921a020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f921a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f921a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f921a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f921a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f921a850"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f921a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f921ac30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f921ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9219020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f92191b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9219340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f92194d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9219660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f92198b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f92198b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9219c30"/>
        <function-ref name="source" scoped="" ref="0x2af6f9219dc0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9218020"/>
        <function-ref name="destination" scoped="" ref="0x2af6f92181b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9218340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f92184d0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9218660"/>
        <function-ref name="setType" scoped="" ref="0x2af6f92187f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9218980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9218b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9218ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f9217020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f9217020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f92173a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f9217530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f92176c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9d96140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9d96140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9d964c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9d96650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9d967e0"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9d96970"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9d96b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f9d96d50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f9d96d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f9d95100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f9d95290"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9d95420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9d955b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f9d95740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f9d95990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9d95990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9d95d10"/>
        <function-ref name="source" scoped="" ref="0x2af6f9d94020"/>
        <function-ref name="address" scoped="" ref="0x2af6f9d941b0"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9d94340"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9d944d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9d94660"/>
        <function-ref name="type" scoped="" ref="0x2af6f9d947f0"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9d94980"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9d94b10"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9d94ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9d94e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2af6f9d93120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2af6f9d93120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2af6f9d934a0"/>
        <function-ref name="noAck" scoped="" ref="0x2af6f9d93630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2af6f9d937c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2af6f9e3c390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2af6f9e3c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9e3c710"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9e3c8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9e3ca30"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9e3cbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9e3cd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2af6f9e3b060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2af6f9e3b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2af6f9e3b3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f9e3b570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f9e3b700"/>
        <function-ref name="cancel" scoped="" ref="0x2af6f9e3b890"/>
        <function-ref name="sendDone" scoped="" ref="0x2af6f9e3ba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2af6f9e3bc70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f9e3bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f9e3a020"/>
        <function-ref name="source" scoped="" ref="0x2af6f9e3a1b0"/>
        <function-ref name="address" scoped="" ref="0x2af6f9e3a340"/>
        <function-ref name="destination" scoped="" ref="0x2af6f9e3a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f9e3a660"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f9e3a7f0"/>
        <function-ref name="type" scoped="" ref="0x2af6f9e3a980"/>
        <function-ref name="setType" scoped="" ref="0x2af6f9e3ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f9e3aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f9e3ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f9e39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2af6f92c3900" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f92c3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2af6f92c27f0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af6f92c3e10"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af6f92c2020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f92c21b0"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af6f92c2340"/>
        <function-ref name="start" scoped="" ref="0x2af6f92c24d0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af6f92c2660"/>
        <function-ref name="stop" scoped="" ref="0x2af6f92c3c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2af6f9e1c9f0" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2af6f9e1c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9e17020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9e19510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9e18300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9e19e10"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f9e17920"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9e174a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e19990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9e1a670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9e18910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f9e1ab40"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9e19090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2af6f9e21570" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2af6f9e21570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9e1da20"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9e1e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9e1eda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9e1e920"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f9e1c4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9e1c020"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e1e4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9e1f1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9e1d410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f9e1f680"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9e1fb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2af6f9e260a0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2af6f9e260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9e22630"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9e24b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9e23920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9e234a0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f9e21020"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9e22ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e23020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9e26c90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9e22020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f9e241b0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9e24680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2af6f9e28de0" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2af6f9e28de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2af6f9e27c70"/>
        <function-ref name="slotStarted" scoped="" ref="0x2af6f9e27310"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2af6f9e274a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e27630"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2af6f9e277c0"/>
        <function-ref name="start" scoped="" ref="0x2af6f9e27950"/>
        <function-ref name="slotEnded" scoped="" ref="0x2af6f9e27ae0"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2af6f9e27180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af6f9e13310" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e13310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9e10870"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9e12e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9e11c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9e11780"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f9e0e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9e10cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e11300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9e12020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9e10260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f9e124f0"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9e129c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af6f9e0da70" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e0da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9e09020"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9e0b510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9e0a300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9e0be10"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f9e09920"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9e094a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e0b990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9e0c6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9e0a910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f9e0cb80"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9e0b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af6f9e06240" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af6f9e06240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f9e036e0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f9e05c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f9e04a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f9e045f0"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f9e01020"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f9e03b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f9e04170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f9e06e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f9e030d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f9e05340"/>
        <function-ref name="stop" scoped="" ref="0x2af6f9e05810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2af6f92c0c20" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2af6f92c0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2af6f92bf020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2af6f92bf1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2af6f92bf340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2af6f92bf4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2af6f92bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2af6f92c0650" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2af6f92c0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2af6f92c09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2af6f92bf8b0" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2af6f92bf8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2af6f92bfc30"/>
        <function-ref name="source" scoped="" ref="0x2af6f92bfdc0"/>
        <function-ref name="address" scoped="" ref="0x2af6f92be020"/>
        <function-ref name="destination" scoped="" ref="0x2af6f92be1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2af6f92be340"/>
        <function-ref name="setDestination" scoped="" ref="0x2af6f92be4d0"/>
        <function-ref name="type" scoped="" ref="0x2af6f92be660"/>
        <function-ref name="setType" scoped="" ref="0x2af6f92be7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2af6f92be980"/>
        <function-ref name="setGroup" scoped="" ref="0x2af6f92beb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2af6f92beca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2af6f92b3870" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2af6f92b3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2af6f792f460"/>
            <typename><typedef-ref name="T32khz" ref="0x2af6f792e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af6f92b0cf0"/>
        <function-ref name="fired" scoped="" ref="0x2af6f92b1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af6f92b00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af6f92b1c00"/>
        <function-ref name="getdt" scoped="" ref="0x2af6f92ae660"/>
        <function-ref name="gett0" scoped="" ref="0x2af6f92ae1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2af6f92b1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af6f92b2480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af6f92b06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af6f92b2950"/>
        <function-ref name="stop" scoped="" ref="0x2af6f92b2e20"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2af6f78f85d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f792edd0" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f792edd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af6f7927c10" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af6f792a420" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2af6f79282b0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af6f7929bd0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af6f7928020" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2af6f7929420" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2af6f7926c60" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2af6f79263e0" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af6f792ac00" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2af6f792d970" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af6f792d6f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2af6f79272b0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af6f7928c50" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af6f7927020" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2af6f792c4d0" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af6f792c250" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f792ccd0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af6f78f1970" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af6f78f1020" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af6f78f13a0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f78f16d0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af6f7909160" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f790bae0" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f790be10" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af6f790b270" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af6f790ecd0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f790ea50" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af6f790d3a0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f790fd70" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af6f790d110" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TDMALink" loc="1:TDMALink.nc">
      <function command="" provided="0" name="isMaster" ref="0x2af6f78f6e60" loc="5:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startDone" ref="0x2af6f78f47d0" loc="6:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af6f78f4550" loc="6:TDMALink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startSlave" ref="0x2af6f78f6070" loc="3:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2af6f78f32a0" loc="7:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af6f78f3020" loc="7:TDMALink.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startMaster" ref="0x2af6f78fa900" loc="2:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f78f6760" loc="4:TDMALink.nc">
        <interfacedef-ref qname="TDMALink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2af6f7905300" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
              <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f78f7870" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2af6f78f7bc0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7905020" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2af6f7916040" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f7918d90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2af6f791fbc0" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f791f940" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2af6f7902020" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2af6f7902ae0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f7902860" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2af6f791d600" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f791d020" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2af6f791d370" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2af6f7920020" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f791e9e0" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2af6f791ed30" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2af6f7919ae0" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f7919860" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2af6f7917e60" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f79178b0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2af6f7917bd0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2af6f78ee1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2af6f791a890" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f791a610" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2af6f7914600" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2af6f7914020" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2af6f7914370" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2af6f7913490" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af6f794bd00" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2af6f797fb40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2af6f7981de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2af6f797f420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2af6f7981700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2af6f79805a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2af6f7962900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2af6f7981020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2af6f7980cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2af6f750fb70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2af6f74c7c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2af6f79d5020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2af6f79d6cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2af6f79b7390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af6f7976910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af6f7975390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2af6f79d5890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2af6f79d47b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2af6f79d6560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2af6f79d4020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2af6f79b7b30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2af6f79d7350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2af6f79d7da0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af6f7976910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af6f7975390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af6f79d7b20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af6f7976910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2af6f7975390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2af6f79c70e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2af6f79e8630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2af6f79e83b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2af6f79e72a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af6f79e7020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af6f79e9be0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af6f79e93e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2af6f79c7a90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2af6f79c7810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2af6f79ce3e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2af6f79ced60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af6f79ceae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2af6f79cd790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2af6f79cd510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2af6f79cc2a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2af6f79cc020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af6f79cc990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af6f79be810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2af6f79bb2a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2af6f79bb020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2af6f79bc020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af6f79c3ab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2af6f79bc760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af6f79c09b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2af6f79be120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af6f79c0270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af6f79bf0e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2af6f79bf9f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af6f79bf770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2af6f79bbcb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2af6f79bba30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af6f7a0c9f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2af6f78592b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2af6f764d420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af6f7409020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2af6f7408020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2af6f7409790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2af6f741b020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2af6f741b870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2af6f7b1cab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af6f7b1c830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2af6f7b42020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af6f7b1bd30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af6f7b1fbd0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f7b1b350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f7b1dbb0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f7b1dbb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f7b1ddf0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7b1ddf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2af6f7b37430" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7b1ddf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af6f7b38710" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af6f7b38a90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7b38dc0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2af6f7b37180" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7b1ddf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af6f7b33ab0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b334b0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7b337e0" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af6f7b34bf0" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af6f7b352a0" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b35020" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af6f7b342b0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b35c40" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af6f7b34020" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2af6f7b4e870" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2af6f7b4e070" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f7b2fb90" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f7b2fb90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f7b2fdd0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7b2fdd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2af6f7b54980" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b54700" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2af6f7b535f0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7b2fdd0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b53370" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2af6f7b3b040" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b3dd90" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2af6f7b3f020" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b1e8b0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2af6f7b1ec40" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2af6f7b3d020" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b3ec40" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2af6f7b3e410" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b3fdd0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2af6f7b3e180" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2af6f7b3a020" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f7b3bd70" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2af6f7b69020" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2af6f7b68110" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2af6f7b69e60" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2af6f7b69790" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af6f7b6b720" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2af6f7b6a820" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2af6f7b6a5a0" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af6f7b6b020" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2af6f7b46980" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2af6f7b46cf0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2af6f7b68aa0" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2af6f7b68820" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f7b6be10" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2af6f7bdb830" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f7bda070" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2af6f7bfca00" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2af6f7bfc780" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af6f7bd8a40" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af6f7bd87c0" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2af6f7bd58c0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af6f7bd52d0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2af6f7bd5630" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af6f7bef5f0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af6f7bef020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7bef360" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2af6f7bea390" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2af6f7bea110" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2af6f7c142b0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af6f7beab90" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7c14020" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2af6f7beb020" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2af6f7c13bb0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af6f7c13280" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7c135c0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af6f7c13910" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2af6f7beb910" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af6f7bec020" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af6f7bee570" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f7bee8b0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af6f7beec00" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2af6f7c6a7f0" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2af6f7c69190" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2af6f7c65230" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af6f7c34920"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af6f7c34d40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2af6f7c6c020" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2af6f7c6d020" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2af6f7c6e540" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2af6f7c6d810" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2af6f7c6ca80" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2af6f7c5f840" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2af6f7c5f020" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2af6f7c842e0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f7c84060" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2af6f7c598a0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2af6f7c8daf0" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2af6f7c99790" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2af6f7c77390" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c0c960"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2af6f7c0b230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af6f7c77110" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c0c960"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2af6f7c0b230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2af6f7c9b7b0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2af6f7c75880" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c07950"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2af6f7c06230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af6f7c75600" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c07950"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2af6f7c06230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2af6f7c92e70" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2af6f7c8e480" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2af6f7c76e00" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c0a880"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2af6f7c09090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2af6f7c730e0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c07950"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2af6f7c06230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2af6f7c71dc0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2af6f7c71b40" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2af6f7c71420" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2af6f7c92740" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2af6f7c76610" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c0a880"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2af6f7c09090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af6f7c76390" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c0a880"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2af6f7c09090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2af6f7c72270" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2af6f7c915d0" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2af6f7c72c50" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2af6f7c729d0" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2af6f7c9c730" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2af6f7c9b020" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2af6f7c93840" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2af6f7c96790" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2af6f7c9a7e0" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2af6f7c92020" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2af6f7c97020" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2af6f7c91cf0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2af6f7c705f0" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2af6f7bf0790"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2af6f7c0d020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2af6f7c904c0" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2af6f7c8d350" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2af6f7c73a80" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2af6f7c73800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2af6f7c8c4d0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f7c8c250" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2af6f7c77b70" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2af6f7c0c960"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2af6f7c0b230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2af6f7c9a020" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2af6f7c97770" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2af6f7c93020" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af6f7c34920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af6f7c34d40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af6f7c95cf0" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af6f7c34920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2af6f7c34d40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2af6f7c952a0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af6f7c1c8d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af6f7c1ccf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af6f7c95020" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af6f7c1c8d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af6f7c1ccf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2af6f7c8cd90" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2af6f7c90cb0" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2af6f7c70e00" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2af6f7c8ebe0" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2af6f7c96020" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2af6f7c99020" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f7cb1410" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f7cb1410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f7cb1650" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7cb1650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af6f7cb0020" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f7cb1650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af6f7caf120" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af6f7cb08a0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af6f7caf880" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2af6f7ca7020" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2af6f7ca77d0" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2af6f7ca6020" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2af6f7ca4020" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2af6f7ca37d0" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af6f7ca2020" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2af6f7ca67b0" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af6f7ca2b90" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2af6f7ca2910" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2af6f7ca8850" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2af6f7ca4800" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2af6f7ca3020" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2af6f7d24390" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f7d24be0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af6f7d417c0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af6f7d40020" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2af6f7d3cb10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af6f7d3c890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af6f7d12020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af6f7d3e020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2af6f7d3b490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af6f7d40760" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af6f7d41020" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2af6f7d3d770" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2af6f7d127c0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af6f7d130e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2af6f7d3e7a0" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2af6f7d3c020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2af6f7d3d020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af6f7d13810" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af6f7fe3020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af6f7fe3750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af6f7fe50e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af6f7fe25e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af6f7fe57e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af6f7fe3e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af6f7fe62b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af6f7fe6980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2af6f803e460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2af6f803ecc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af6f8067a40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2af6f8087e00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2af6f8085020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2af6f8087570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2af6f80866d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2af6f8085950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2af6f807a020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af6f8080090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af6f807bd20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af6f8080090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2af6f807c020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2af6f807cb20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af6f8080090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af6f807c8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2af6f8080090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2af6f807b470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2af6f8080090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2af6f8107770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af6f81307a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8130520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2af6f812e840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f812e5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af6f812bd30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f812b730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f812ba60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af6f812dda0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2af6f812cce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f812c720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f812ca50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2af6f8165ad0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8165850" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2af6f8162cd0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8162a50" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2af6f8161020" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8163ce0" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af6f8155460" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8158e70" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f81551d0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2af6f8152a40" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8152440" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f8152770" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2af6f8150b80" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af6f8153790" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8153510" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af6f8151c70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8151690" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af6f81519e0" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2af6f81b5670" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f81b5060" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2af6f81b53e0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2af6f81b7820" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2af6f81b66d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f81b60d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2af6f81b6440" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2af6f81d9960" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2af6f81d91f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2af6f81ebc30" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2af6f81e00e0" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2af6f81ded00" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f81dea80" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2af6f81e0960" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2af6f81e17e0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f81e1560" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2af6f81dd5b0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2af6f81de270" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2af6f81e9780" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2af6f81e80e0" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2af6f81ecd90" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2af6f81ecb10" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2af6f81e8c60" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af6f81e89e0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2af6f81e58f0" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2af6f81e45b0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f81e4330" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2af6f81e30b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2af6f81e4e00" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f832f7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f832f7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f832f9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f832f9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2af6f832a840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f832f9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f832a5c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2af6f83289d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8328750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2af6f832b5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f832b370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af6f836ed00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f832f9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f836e710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2af6f836ea70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f832f9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2af6f8363e30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8363810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2af6f8363ba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2af6f8361020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8362d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2af6f8363020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2af6f8365560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2af6f83652e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2af6f8384430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f83841b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2af6f8386720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f83864a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2af6f8389dc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2af6f8389b40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2af6f83892a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2af6f8389020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2af6f8388880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2af6f8388600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2af6f83855e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8385360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2af6f837e630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2af6f837e020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2af6f837e3a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2af6f83930c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f834baa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2af6f834bdf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2af6f838f6d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f838f0d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2af6f838f440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2af6f8393ba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2af6f6d2b110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f8393920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2af6f8390600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f8390380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2af6f834b2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f834b020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2af6f8391720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f83914a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2af6f838b0b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f834cde0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af6f83a4360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f83add40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2af6f83a40d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af6f83a26a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2af6f83a0e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af6f83a0060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2af6f83a08a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f83a0bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af6f83a1840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2af6f83a1260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2af6f83a15b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2af6f83a4df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2af6f83a4b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2af6f8398de0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8398b20" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2af6f8398320" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2af6f78b2ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2af6f78afc70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8398020" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2af6f8395130" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2af6f78ae7c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2af6f78ac660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8397de0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2af6f83aa070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2af6f83a70e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2af6f83a88f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2af6f83ac730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2af6f83ab7e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2af6f83aa8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2af6f83a8120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2af6f83ab020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2af6f83da7f0" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2af6f83ddce0" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2af6f83da020" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2af6f83dcc40" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2af6f83dc4a0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2af6f839b9f0" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2af6f839b770" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2af6f83dd500" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2af6f83dd280" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2af6f8416020" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2af6f84179f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2af6f8417d40" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2af6f8419960" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2af6f8419020" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2af6f841a820" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2af6f841ac00" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2af6f841f2a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2af6f841f020" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2af6f8417270" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2af6f841cd70" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2af6f841caf0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2af6f841e3e0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2af6f841e160" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2af6f8415270" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2af6f841a020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2af6f841bc50" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2af6f8416a20" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2af6f841eb60" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2af6f835f360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2af6f835fac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2af6f841c390" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2af6f8420850" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2af6f841f9f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2af6f841b530" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2af6f8414c60" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af6f8414c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2af6f8411560" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2af6f84102f0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af6f8414c60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2af6f8411ce0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2af6f8410060" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2af6f8414c60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af6f8431520" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f84312a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af6f8430030" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f8431d80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2af6f844f640" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2af6f835f360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2af6f835fac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f84058b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f84058b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f8405af0" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af6f8449800" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af6f844c7e0" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2af6f844be10" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af6f844b840" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2af6f844bb80" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af6f844b020" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2af6f8448020" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af6f844d680" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af6f844d400" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8405af0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af6f844c020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2af6f843a0e0" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2af6f8439070" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2af6f843a8c0" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2af6f843b860" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2af6f843b280" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2af6f78ee590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2af6f843b5d0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2af6f78ee970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2af6f842a760" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af6f8436840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af6f84409b0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2af6f8436250" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f84365a0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af6f8433020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2af6f8434150" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2af6f84349c0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f8434d10" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2af6f843e7e0" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af6f843e020" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2af6f843f720" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2af6f8442dc0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2af6f85ec030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af6f85eb1f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2af6f85ec9d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af6f85ec750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2af6f85ed7a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2af6f861f020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af6f861dac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2af6f86207c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2af6f861d2a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2af6f861d020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2af6f8620020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2af6f861f820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2af6f87102b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2af6f8710b00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2af6f870e390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2af6f873fb60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f873f580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f873f8d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2af6f873add0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f873a490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f873a7e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af6f873ab30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af6f873c6b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f873c0d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f873c420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2af6f8741730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2af6f78b3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f8741150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f87414a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2af6f873d2c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f873e930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2af6f873ec80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af6f873d020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2af6f8779cf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2af6f8779380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2af6f8779710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f8779a50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2af6f87773c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2af6f87756a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2af6f8775a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f8775d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2af6f8777110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2af6f877dc90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2af6f877da10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2af6f87f1120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2af6f7c1c8d0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2af6f7c1ccf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2af6f87f9d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f87f9af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2af6f87f42a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f87f4020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2af6f87f5610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af6f87f4d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f87f4ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2af6f88c29d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2af6f8876420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2af6f88c9620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af6f88c93a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2af6f887faf0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2af6f88c6c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2af6f88ce5e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2af6f8877540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2af6f88d32d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2af6f8879500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2af6f8879280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2af6f887ba10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2af6f88d0070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2af6f88c7550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2af6f88c2270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2af6f88cac30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2af6f88bd350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2af6f88b99d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2af6f887e980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2af6f88d18b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2af6f88cf1f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2af6f8879dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2af6f88808c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2af6f88ca460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2af6f88ca1e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2af6f8880190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2af6f88c64d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2af6f88c1190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2af6f88bcb00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2af6f88b9270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2af6f88c5b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2af6f88c18c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2af6f88c9db0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2af6f88be390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2af6f887c0e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2af6f88cc7e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2af6f88c07b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2af6f88c3ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2af6f88cfde0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2af6f88cfb60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2af6f88bb2d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2af6f88cba60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2af6f88c5420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2af6f887f390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af6f7c4d8d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2af6f7c4dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2af6f887f110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2af6f7c4d8d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2af6f7c4dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2af6f88d1190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2af6f887b2a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af6f887b020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2af6f88d09d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2af6f88d0750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2af6f88beb60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2af6f887ab50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2af6f887c850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2af6f88cb2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2af6f88cb020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2af6f6d2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2af6f887e270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2af6f88c0020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2af6f88c3350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2af6f88c7cc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2af6f88cc020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2af6f88ced30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2af6f88d39f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2af6f8877c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2af6f88bba40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2af6f887a3c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af6f887a140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2af6f88bdb10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2af6f8876b50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2af6f88bc350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af6f8b0d620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2af6f8b0d3a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2af6f8b62bc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2af6f8b62280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2af6f8b625f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f8b62920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2af6f8b61960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2af6f8b613a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af6f8b616d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f8b4a730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f8b4a730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af6f8b4a970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8b4a970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2af6f8b474d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8b4a970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af6f8b47250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af6f8b4a970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2af6f8bb95e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2af6f8bfa9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2af6f8bfa020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2af6f8bfa750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2af6f8bfb7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2af6f8bfb020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2af6f8bfed40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2af6f8ba12a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af6f6d2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8ba1020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2af6f8ba22a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af6f7401090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8ba2020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2af6f8b9f2a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8b9f020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af6f8ba02a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2af6f8ba0020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2af6f79003c0"/>
                <typename><typedef-ref name="message_t" ref="0x2af6f78ffa00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af6f8d29910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af6f8d29910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af6f8d26270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2af6f6d2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2af6f8ebc600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af6f8ebc600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2af6f8eb82a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af6f7410980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af6f8ebc600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2af6f8eb8020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2af6f8ebc600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
