<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9ef912d9a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9ef9183020"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9ef9183020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9ef9329590"/></to>
    </wire>
    <wire loc="10:TestC.nc">
      <from><interface-ref name="LinkCtrl" scoped="" ref="0x2b9ef9128470"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef9184570"/></to>
    </wire>
    <wire loc="56:TDMALinkC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x2b9ef9184570"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef935c480"/></to>
    </wire>
    <wire loc="11:TestC.nc">
      <from><interface-ref name="LinkSnd" scoped="" ref="0x2b9ef914b650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9ef9363710"/></to>
    </wire>
    <wire loc="53:TDMALinkC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9ef9363710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9ef935b020"/></to>
    </wire>
    <wire loc="12:TestC.nc">
      <from><interface-ref name="LinkRcv" scoped="" ref="0x2b9ef9155020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef93630c0"/></to>
    </wire>
    <wire loc="50:TDMALinkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9ef93630c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efaa8e020"/></to>
    </wire>
    <wire loc="15:TestC.nc">
      <from><interface-ref name="DataTimer" scoped="" ref="0x2b9ef915be40"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efab083f0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9efab083f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efaa50e30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9136370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b9f020"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa7a9dd0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa741b70"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa6e6750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa704080"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa5f3130"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa4c6620"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa398820"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef9cda7e0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb23ea40"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa00b020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef9c5a510"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef99ca280"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef9956780"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb028ca0"/></to>
    </wire>
    <wire loc="45:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef93fcc80"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9ef9329c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9ef8c3d3a0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9ef8c3d3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9ef9093140"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9ef93476c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef91823d0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef91823d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef917c5d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef9347dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b9ef917cce0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b9ef917d910"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b9ef917d910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef919e850"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9ef917b400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef917e6d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b9ef917bae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef9811c40"/></to>
    </wire>
    <wire loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef919e850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef91a77e0"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9ef91b7de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9ef91c8020"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9ef8dea080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9ef91c7360"/></to>
    </wire>
    <wire loc="113:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b9ef920b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92b36d0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b9ef921c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92d1b30"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b9ef9202700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92b8160"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b9ef922da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92decb0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b9ef9209aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92b9480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b9ef9210020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92de020"/></to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b9ef922aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92eccb0"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b9ef92175a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92d7220"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b9ef920cb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92759d0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b9ef922fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92c72f0"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b9ef92123e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92c8610"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b9ef921b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92c9220"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b9ef9201700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92b17a0"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b9ef922ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92fb2f0"/></to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b9ef921abe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92e76d0"/></to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b9ef9208890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92b2ac0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b9ef91fb060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9260c80"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b9ef9210da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92d6610"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b9ef91f00c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92ba020"/></to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b9ef9216a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92f66d0"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b9ef91fc690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92c1a90"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b9ef922ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92e57a0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b9ef9205cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92c2de0"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b9ef92111f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92e6ac0"/></to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b9ef922ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92f47a0"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b9ef92180c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92e0b30"/></to>
    </wire>
    <wire loc="120:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b9ef920fb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92f5ac0"/></to>
    </wire>
    <wire loc="128:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b9ef9230a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef92cfcb0"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b9ef920ea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92ec020"/></to>
    </wire>
    <wire loc="127:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b9ef9213570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef92cf020"/></to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b9ef9214020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b9ef92eeb30"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b9ef925ec20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef925e5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9ef925d2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b9ef930daa0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9ef925d940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b9ef930a260"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92bf930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9260c80"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92bd020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef925e5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92b7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9260c80"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92b67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef925e5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92b0610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9260c80"/></to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92d4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef925e5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b9ef9257c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9ef92562f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b9ef930a9f0"/></to>
    </wire>
    <wire loc="123:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9ef9256940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b9ef9309240"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92ceb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92cc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92c6160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92c47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92e4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="144:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92e3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92ddb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92db2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92fa160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92f97a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92f3610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92f2c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef92ebb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b9ef92e92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef9091040"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b9ef908e5d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9ef8cad2d0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efaa8e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9b3a210"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TDMALinkC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9ef935a3b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="20:TDMALinkC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b9ef9359b60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b3c020"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b3c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b5c680"/></to>
    </wire>
    <wire loc="21:TDMALinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9357020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9efa802020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9efa802020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9efa7fd080"/></to>
    </wire>
    <wire loc="25:TDMALinkC.nc">
      <from><interface-ref name="TSPacket" scoped="" ref="0x2b9ef9367a90"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9efa8f9c50"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9efa8f9c50"/></from>
      <to><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9efa8e1b90"/></to>
    </wire>
    <wire loc="26:TDMALinkC.nc">
      <from><interface-ref name="SyncSnd" scoped="" ref="0x2b9ef936fdf0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9efa8fdaa0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:TDMALinkC.nc">
      <from><interface-ref name="SyncRcv" scoped="" ref="0x2b9ef936dc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa9035c0"/>
      <arguments>
        <value cst="I:130">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TDMALinkC.nc">
      <from><interface-ref name="JoinReqSnd" scoped="" ref="0x2b9ef936a340"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efaa3dcc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efaa3dcc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb4bdcb0"/></to>
    </wire>
    <wire loc="33:TDMALinkC.nc">
      <from><interface-ref name="JoinReqRcv" scoped="" ref="0x2b9ef93650d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efaa31800"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efaa31800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9b3a210"/>
      <arguments>
        <value cst="I:131">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b9ef9365790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efaa2b530"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efaa2b530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb541140"/></to>
    </wire>
    <wire loc="38:TDMALinkC.nc">
      <from><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b9ef9364500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efaa25140"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efaa25140"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9b3a210"/>
      <arguments>
        <value cst="I:132">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:TDMALinkC.nc">
      <from><interface-ref name="DataSnd" scoped="" ref="0x2b9ef9364ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efaa21e60"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efaa21e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb5164c0"/></to>
    </wire>
    <wire loc="46:TDMALinkC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b9ef93835f0"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b9efaa91120"/></to>
    </wire>
    <wire loc="13:SlotSchedulerC.nc">
      <from><interface-ref name="SlotScheduler" scoped="" ref="0x2b9efaa91120"/></from>
      <to><interface-ref name="SlotScheduler" scoped="" ref="0x2b9efb5a3200"/></to>
    </wire>
    <wire loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9ef93ffd10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9ef93fc4f0"/></to>
    </wire>
    <wire loc="48:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2b9ef93fd020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9ef93fe320"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9ef93fe320"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9ef99277a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9ef93f9bd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9ef9414310"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9ef9414310"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9ef9929060"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b9ef9957430"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b9ef93f5400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9ef9929060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9ef947e050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9ef94331e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9ef992a0c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9ef992a0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9ef9482a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9929800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9924080"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef99246f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef992cc00"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef992cc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef94841d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef992b8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efac2dc70"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efac2dc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef98812c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef947b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9929800"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efacb8d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef9480ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9ef947ee60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efac2d020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efac2d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9882020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9ef9477710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efacb85d0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efacb85d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9ef98831d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef9480ca0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef952b3e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9ef947e050"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9ef952adc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9ef9482a70"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9ef952bcd0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef94841d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef952c5b0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9528570"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef947b1d0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9ef9529710"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b9ef947ee60"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9ef9523740"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9ef9477710"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b9ef9528be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9ef9542d30"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9ef9542d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b9ef953b550"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9ef9522180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef97e79a0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9ef97e79a0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9ef97e19d0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef951f2c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97fe2a0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9ef953f860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9ef9536130"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef9542500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef953ebc0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b9ef955a860"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b9ef962b3f0"/></to>
    </wire>
    <wire loc="539:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b9ef962b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9721100"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b9ef9534800"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b9ef96293f0"/></to>
    </wire>
    <wire loc="540:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b9ef96293f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef971cd10"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b9ef9558800"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b9ef96273f0"/></to>
    </wire>
    <wire loc="541:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b9ef96273f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9717740"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b9ef9555800"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b9ef96573f0"/></to>
    </wire>
    <wire loc="543:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b9ef96573f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96e4740"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b9ef9553800"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b9ef96593f0"/></to>
    </wire>
    <wire loc="542:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b9ef96593f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96e9d10"/></to>
    </wire>
    <wire loc="442:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b9ef95cdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef969dd10"/></to>
    </wire>
    <wire loc="455:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b9ef95ebcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96d9740"/></to>
    </wire>
    <wire loc="531:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b9ef96393d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96cb740"/></to>
    </wire>
    <wire loc="551:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b9ef96483e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9753d10"/></to>
    </wire>
    <wire loc="532:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b9ef96373f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96c6100"/></to>
    </wire>
    <wire loc="460:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b9ef95e7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96d0d10"/></to>
    </wire>
    <wire loc="473:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b9ef9603020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef970c740"/></to>
    </wire>
    <wire loc="486:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b9ef9622020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef974a100"/></to>
    </wire>
    <wire loc="497:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b9ef9611020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef975c740"/></to>
    </wire>
    <wire loc="535:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b9ef96313f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96f2740"/></to>
    </wire>
    <wire loc="545:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b9ef96553e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9738d10"/></to>
    </wire>
    <wire loc="557:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b9ef96403f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef974e740"/></to>
    </wire>
    <wire loc="445:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b9ef95c7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef968fd10"/></to>
    </wire>
    <wire loc="536:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b9ef962f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96ed100"/></to>
    </wire>
    <wire loc="450:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b9ef95c3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96bb100"/></to>
    </wire>
    <wire loc="463:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b9ef95e0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96f7d10"/></to>
    </wire>
    <wire loc="476:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b9ef95fd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96fd740"/></to>
    </wire>
    <wire loc="489:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b9ef961c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef973c100"/></to>
    </wire>
    <wire loc="500:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b9ef963f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef974e740"/></to>
    </wire>
    <wire loc="440:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b9ef95d1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96a7740"/></to>
    </wire>
    <wire loc="453:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b9ef95efcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96ac260"/></to>
    </wire>
    <wire loc="466:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b9ef95dacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96e9d10"/></to>
    </wire>
    <wire loc="530:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b9ef963b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96cb740"/></to>
    </wire>
    <wire loc="548:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b9ef964e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9761d10"/></to>
    </wire>
    <wire loc="555:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b9ef96423e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef974e740"/></to>
    </wire>
    <wire loc="471:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b9ef9608cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96df3f0"/></to>
    </wire>
    <wire loc="484:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b9ef95f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef971cd10"/></to>
    </wire>
    <wire loc="495:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b9ef9615020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9765100"/></to>
    </wire>
    <wire loc="549:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b9ef964c3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef975c740"/></to>
    </wire>
    <wire loc="538:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b9ef962d3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9726740"/></to>
    </wire>
    <wire loc="443:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b9ef95cbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9698740"/></to>
    </wire>
    <wire loc="456:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b9ef95e9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96d4100"/></to>
    </wire>
    <wire loc="493:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b9ef9619020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9738d10"/></to>
    </wire>
    <wire loc="461:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b9ef95e5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96cb740"/></to>
    </wire>
    <wire loc="474:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b9ef9601020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9706100"/></to>
    </wire>
    <wire loc="487:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b9ef9620020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9746d10"/></to>
    </wire>
    <wire loc="498:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b9ef960f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9757100"/></to>
    </wire>
    <wire loc="438:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b9ef95d7e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef967b3f0"/></to>
    </wire>
    <wire loc="451:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b9ef95c1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96b7d10"/></to>
    </wire>
    <wire loc="464:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b9ef95decc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96f2740"/></to>
    </wire>
    <wire loc="477:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b9ef95fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef972f100"/></to>
    </wire>
    <wire loc="546:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b9ef96533e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9733740"/></to>
    </wire>
    <wire loc="552:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b9ef96463e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef974e740"/></to>
    </wire>
    <wire loc="482:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b9ef95f7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9726740"/></to>
    </wire>
    <wire loc="441:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b9ef95cfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96a2100"/></to>
    </wire>
    <wire loc="454:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b9ef95edcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96ded10"/></to>
    </wire>
    <wire loc="467:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b9ef960acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96e4740"/></to>
    </wire>
    <wire loc="550:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b9ef964a3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9757100"/></to>
    </wire>
    <wire loc="472:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b9ef9605020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9711e00"/></to>
    </wire>
    <wire loc="485:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b9ef9624020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9717740"/></to>
    </wire>
    <wire loc="496:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b9ef9613020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9761d10"/></to>
    </wire>
    <wire loc="444:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b9ef95c9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9693100"/></to>
    </wire>
    <wire loc="494:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b9ef9617020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9733740"/></to>
    </wire>
    <wire loc="449:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b9ef95c5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96c0740"/></to>
    </wire>
    <wire loc="462:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b9ef95e2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96c6100"/></to>
    </wire>
    <wire loc="475:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b9ef95ff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9702d10"/></to>
    </wire>
    <wire loc="488:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b9ef961e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9741740"/></to>
    </wire>
    <wire loc="499:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b9ef960d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9753d10"/></to>
    </wire>
    <wire loc="439:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b9ef95d3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9677e00"/></to>
    </wire>
    <wire loc="452:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b9ef95f1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96b1740"/></to>
    </wire>
    <wire loc="465:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b9ef95dccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96ed100"/></to>
    </wire>
    <wire loc="478:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b9ef95f9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef972bd10"/></to>
    </wire>
    <wire loc="534:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b9ef96333d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96f7d10"/></to>
    </wire>
    <wire loc="547:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b9ef96503e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9765100"/></to>
    </wire>
    <wire loc="533:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b9ef96353f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96f7d10"/></to>
    </wire>
    <wire loc="483:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b9ef95f5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9721100"/></to>
    </wire>
    <wire loc="554:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b9ef96443e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef9753d10"/></to>
    </wire>
    <wire loc="558:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b9ef96723f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef973c100"/></to>
    </wire>
    <wire loc="529:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b9ef963d060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef96d0d10"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9ef97e19d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef97dab80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9808c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef9811c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef9801c40"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b9ef97f6910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b9ef9814360"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b9ef9814360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef980e710"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b9ef97fcb10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b9ef98136a0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b9ef98136a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef98351d0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b9ef97fbe30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b9ef98129c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b9ef98129c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9831d70"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9839930"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b9ef9622020"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9834480"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b9ef9620020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef982f020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b9ef961e020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efac2cbe0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9ef9542d30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efac2c440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9881ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9881ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef98e2400"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef987f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efacb8d70"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef98812c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef98e3020"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef98e3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb0243a0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b9ef98831d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9ef987db60"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef9882020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef98e4210"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef98e4210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efb025540"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef98e2400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb0228b0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b9ef987cc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9ef953f860"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef98e2cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef987f8a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9869a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef98e2400"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9ef99059d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9ef98e37a0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9ef98e37a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efb024b20"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef991bb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef9542500"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb021210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef98e2cd0"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b9efb0219d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9efb027330"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9efb01fc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9efb08d3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef991bb20"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9efb08db00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9ef9905400"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efb08b0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9ef99059d0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb08bd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9904720"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b9ef9956de0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b9ef9957430"/></to>
    </wire>
    <wire loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9ef994c020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9ef9183020"/></to>
    </wire>
    <wire loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b9ef994c740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9944320"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9944320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef99ca8d0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9ef99ca8d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef99fb810"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9ef9943370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9ef99d3110"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9ef9941020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef99d1a40"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9ef9942530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef99d3e70"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9976080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef99d0720"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9941c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef99d2490"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef99ca280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef99fb1c0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef99c5dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef9976a00"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9ef99cf120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9ef99c8480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9ef99cfd70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef99c9940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b9ef99c54a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b9ef9b4f6c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9ef99c8480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9ef9b34de0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9ef99c9940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9b346c0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b9ef9b33c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b9ef99c54a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef99ef020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef99c5dc0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef9b31920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef99c5dc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef9b28dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef99c5dc0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9ef9b32590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9ef99f1c40"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b9ef9b32e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b9ef99f57d0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9ef99f3020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9ef9b2ce10"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b9ef99e9860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9ef93fe320"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9ef9b29e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9ef94331e0"/></to>
    </wire>
    <wire loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b9ef9a5d6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b9ef9a0d4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b9ef9a61c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b9ef9a5aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b9ef9b2f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b9ef9b2f800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b5c680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b81340"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9ef9b3b050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9ef9ba37f0"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9ef9ba37f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efa829da0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b9ef9b3adf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9ef9ba0880"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b9ef9ba0880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9efa827c00"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b9e760"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9ef9b9e760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efa8248f0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9ef9b749e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa51e550"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa51e550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa580a80"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9b688a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9b92bb0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9b92bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9bc3700"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9ef9b3a210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9ba2b20"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9ef9ba2b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa827020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b7f800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b9c810"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b9c810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9bc4670"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b9f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efa8262d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9ef9b73af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa51a660"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa51a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa57caf0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b81340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9efa79cb80"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9b8ad40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa822830"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b9ef9b87500"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b9efa823b50"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9b95970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9bc5740"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9bc5740"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9bc3700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa79c080"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9bc4670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efa5206e0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9b90790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9bc22e0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9bc22e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b9efa802020"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9ef9b91a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9ef9bc3080"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9ef9bc3080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9efa51fa70"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b9efa81a0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9b80430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa821860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b9ef9bc6350"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b9ef9bc6350"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b9efa78cca0"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa820690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b9ef9bc50f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b9ef9bc50f0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b9efa78ba50"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9efa81c4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9efa313b30"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa820ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa515d20"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa81fb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa581640"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b9efa81e610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b9ef9c17dc0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b9ef9c17dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b9ef9c59970"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b9efa81b1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9bbc990"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9bbc990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9bb5020"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9efa81ad30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9efa79cb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b9efa799d90"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9efa51fa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9efa580020"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b9efa78cca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b9efa782a20"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa79c080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa7952d0"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b9ef9bc8e70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa78c5f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efa78c5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b9efa782370"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efa5206e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efa582c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef9b80430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa78fcb0"/></to>
    </wire>
    <wire loc="96:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa78fcb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa7847b0"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b9ef9bc8160"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa78e960"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efa78e960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b9efa7834d0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b9ef9bc7560"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b9efa78a170"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b9efa78a170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b9efa77f020"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b9efa78ba50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b9efa780840"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b9efa799d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9bc19f0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9bc19f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9bb7690"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa7896b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa6ec220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efa6ec220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa6e9a20"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa6eb020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa8032a0"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efa8032a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa8003b0"/></to>
    </wire>
    <wire loc="103:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa802d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa7a1cf0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efa7a1cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9efa79a860"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa79a860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9ef9bbd600"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9ef9bbd600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9ef9bb62e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa789020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa79e980"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efa79e980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b9efa799690"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa799690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa748aa0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efa748aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa744e30"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa745950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9bbc300"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9ef9bbc300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa4ca7c0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efa4ca7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa4c3020"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef9bb5e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9c27950"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef9c27950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9c5ab80"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9bac3f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9c22bf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9c22bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9c57740"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b9ef9bb36f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9efa3a26d0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b9ef9bb36f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9efa4cd5c0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9efa4cd5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9efa4c6ca0"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b9efa3a26d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9efa405020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9ef9ba42a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9efa39f020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9efa39f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa4058c0"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b9ef9bab060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa39fcb0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa39fcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa404650"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9bec330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9ef9be3920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b9ef9bea420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9efa70aa20"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b9efa70aa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9efa703a20"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b9ef9be7110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa70caa0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa70caa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa010280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef9beabf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b9ef9bd9b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b9ef9bdbba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b9ef9bdcc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b9ef9c140c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b9ef9c56b40"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b9ef9c4ad90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9cd7220"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9cd7220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9d1f2e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9ef9c47060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b9ef9dd3370"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9ef9dd3370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9dc51b0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b9ef9c46380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b9ef9dd0ce0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b9ef9dd0ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e09710"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b9ef9c456a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b9ef9dcd380"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b9ef9dcd380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9dffd70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b9ef9c430e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b9ef9e3d210"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b9ef9e3d210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b9ef9f22a30"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9ef9c781d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa269e20"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa269e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9ef9c772e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b9efa2667b0"/></to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9efa2667b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9ef9c779f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa265ae0"/></to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa265ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9ef9c79a80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa267ad0"/></to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa267ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9ef9c79160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa263160"/></to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa263160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9ef9c7db00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2c2870"/></to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2c2870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9ef9c3a3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa2c0880"/></to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa2c0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9ef9c3ac80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa2bf0a0"/></to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa2bf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9ef9c815f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2c7e50"/></to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9ef9c7c020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2c6670"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9ef9c3e520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b9efa2b2500"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9efa2b2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9ef9c82a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa2b3ce0"/></to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa2b3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9ef9c7c8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2c3e50"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9ef9c7b1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b9efa2c6e50"/></to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9efa2c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9ef9c7ba70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2c4e50"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b9ef9c76d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa2a0a80"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa2a0a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b9ef9c76020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa2d99e0"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa2d99e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9ef9c3b810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9efa313b30"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9ef9c52020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9efa312d30"/></to>
    </wire>
    <wire loc="23:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9efa312d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9efa35d310"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b9ef9c6a820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b9ef9c6b940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef9cda7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef9cd2a20"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef9cd2a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb131a10"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9d1f2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb1302a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efb131a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb12aa10"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efb1302a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb1235f0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efb12aa10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb10d510"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b9efb11dd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb1292a0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efb1292a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb10dda0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efb11f9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef9d4f020"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9ef9d4f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef9d995f0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb108020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb1121b0"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb1121b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb107760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb1118f0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb1118f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb106a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb110c10"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb110c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b9ef921c020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b9ef9213570"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b9ef921abe0"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b9ef92111f0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b9ef92180c0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b9ef9210020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b9ef92175a0"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b9ef9210da0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b9ef9216a50"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b9ef920fb80"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b9ef9214020"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b9ef920ea20"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b9ef9d7c950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9ef97e19d0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b9ef9dd26a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e13d70"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b9ef9dd19d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e0eb70"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b9ef9dd40e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9dcb710"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b9ef9dce020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e041b0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9dca930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b9ef95cdcc0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9dc4480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b9ef9603020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e11020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b9ef95cfcc0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e0dde0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b9ef95d7e10"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e08930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b9ef95fb020"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e02480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b9ef9605020"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9dfd020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b9ef95fd020"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b9ef9e3a5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b9ef9e25020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9ef9e3de30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b9ef9f6ba70"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9e25ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b9ef921b5a0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b9ef9e24da0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b9ef922fa20"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e23c20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b9ef9605020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b9ef9f21610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b9ef9e68c40"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b9ef9e68c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b9ef9e54a30"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b9ef9f6a610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b9ef9e6ae70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b9ef9e6ae70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b9ef9e5a9d0"/></to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b9ef9e5dbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b9ef9e4abc0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b9ef9e65bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b9ef9e51a30"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b9ef9e63bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b9ef9e4fa30"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b9ef9e1ad20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b9ef9e56a30"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b9ef9e5fbc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b9ef9e4ca30"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b9ef9e67bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b9ef9e53a30"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b9ef9e5cbc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b9ef9e49bc0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b9ef9e61bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b9ef9e4ea30"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b9ef9e69c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b9ef9e55a30"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b9ef9e5ec40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b9ef9e4bbc0"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b9ef9e66bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b9ef9e52a30"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b9ef9e64bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b9ef9e50a30"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b9ef9e1bdc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b9ef9e57a30"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b9ef9e60bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b9ef9e4da30"/></to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9efa266160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa2c1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9efa2b90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9efa2c00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa2ad500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa2af500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa265490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9efa2b5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa2b1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa2bb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9efa2bc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa268a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f7c930"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa263e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9efa2c9490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa2b4c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa2c9be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa2b1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9efa2b50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa2c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa2b60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9efa2b9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa2b6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa2aece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa2afce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9efa2bc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9efa2b80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa2b2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa2bf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa2adce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa267480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9efa2c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa2c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa2ba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa2ba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa2c10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa2c82f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9efa2c7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa2637b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa2b3500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9efa2ae500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa2bb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9efa2b8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9efa266e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa2bd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9efa2c8940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9efa2bd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9efa2b40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa2ac9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f77bb0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f74020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f74db0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9f78810"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f73ba0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b9ef9f6f020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa014770"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa014770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa010280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9ef9f72400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa04ec40"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa04ec40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efb214e70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9ef9f70080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9efa04d8f0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9efa04d8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9efb2112c0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9ef9fc0680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa28f020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa28f020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9efb20f440"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef9f6fdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b9ef9fbb120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa010280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa00bb70"/></to>
    </wire>
    <wire loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9efb20f440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa038850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9efb2112c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9efa039020"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efb214e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa03b430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb212af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb2075d0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb2075d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efa1782c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9efa039020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9efa094a10"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efb2118d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efa0396a0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efa0396a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efa093060"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efa036a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efb20fbe0"/></to>
    </wire>
    <wire loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb1faa80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa03a6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9efa037690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efb208860"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efb208860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa179020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9efa0342a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efb201020"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efb201020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9efa17b4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa03a6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa094250"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa038850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa093c50"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa03b430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa095470"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efa0913e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efa036a40"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b9efa0925b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b9efa037690"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9efa08c480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9efa0342a0"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b9efa091a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efa081020"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efa081020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b9efa0d8c70"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9efa08cc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b9efa0892f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9efa0d95e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa0d0150"/></to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efa07dd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9efa0d1780"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b9efa101bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b9ef963b3f0"/></to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b9efa0ffb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b9ef96373f0"/></to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b9efa0fdb20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b9ef96353f0"/></to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b9efa0fbb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b9ef962f3f0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b9efa0f9b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b9ef96313f0"/></to>
    </wire>
    <wire loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b9efa106d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b9efa1ba430"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9efb2017c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa17a3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9efb201dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9efa1c6540"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9efa1c6540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b9efa1ba430"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efb2065a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efa081020"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb207d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa178ad0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa178ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa16dc30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa1768a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb1faa80"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efa1782c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efa16e850"/></to>
    </wire>
    <wire loc="106:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efa16e850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb23a020"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b9efa17b4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b9efa174060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa179020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa170a80"/></to>
    </wire>
    <wire loc="105:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa170a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efb23b270"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa17a3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa174990"/></to>
    </wire>
    <wire loc="108:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa16dc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb2df400"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa16c570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa1768a0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa173e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa16dc30"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b9efa173060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efa07dd10"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b9efa173840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9efa0d95e0"/></to>
    </wire>
    <wire loc="107:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efa16d020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efb23a7a0"/></to>
    </wire>
    <wire loc="109:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb2dfcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa16c570"/></to>
    </wire>
    <wire loc="111:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b9efb2de500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9efb23d0a0"/></to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9efb2dc7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b9efa1b3250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b9efa0d8c70"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b9efa1afd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b9ef963b3f0"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b9efa1adcb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b9ef96353f0"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2f9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9efa29eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2fcb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa2f6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9efa2efe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9efa2f6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa2e32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa2e52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa29b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9efa2eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa2e62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9efa2fbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2fac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa2f1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9efa2f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa2f5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa29f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa29aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9efa299120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa2eaa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa299870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa2e6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa29bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9efa2ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa2fa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2fb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa29e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa2ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9efa2ee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa2ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa2e4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa2e5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9efa2f2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9efa2eee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa2e7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa2f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa2e3ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa29e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9efa2fc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa2f9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa2f1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa2f5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa2ef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9efa29c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa2f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa298020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9efa298cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9efa2e72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa2e8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa29a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa2e82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9efa2e42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa2f2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9efa2ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9efa29caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa29b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa2f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9efa298670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9efa2f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9efa2ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa2e17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2ccc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9efa2d7da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2d0b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa2ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9efa329e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9efa2cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa31c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa31e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa2d5120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9efa324670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa3202f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9efa2cfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2cdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa32a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9efa32ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa32f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa2d8760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa2d3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9efa2d2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa323a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa2d2870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa320ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa2d5dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9efa325e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa2cd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2cf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa2d7750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa326e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9efa328670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa325670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa31dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa31ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9efa32b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9efa328e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa321ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa32e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa31cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa2d7100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9efa2d0370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa2cc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa32ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa32fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa329670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9efa2d6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa2cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa2d1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9efa2d1cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9efa3212f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa322ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa2d3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa3222f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9efa31d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa32be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9efa326670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9efa2d6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa2d5770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa32ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9efa2d1670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9efa32c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9efa324e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa31b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b9efa35a8c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b9efa34f020"/></to>
    </wire>
    <wire loc="20:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b9efa34f020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b9efa34a210"/></to>
    </wire>
    <wire loc="16:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b9efa346cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b9efa335020"/></to>
    </wire>
    <wire loc="21:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b9efa335020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b9efa333490"/></to>
    </wire>
    <wire loc="17:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b9efa3495b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b9efa3b9a20"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b9efa3358c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b9efa3365a0"/></to>
    </wire>
    <wire loc="11:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b9efa3365a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b9efa3b79e0"/></to>
    </wire>
    <wire loc="18:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b9efa394b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b9efa374020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b9efa374020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b9efa371d20"/></to>
    </wire>
    <wire loc="19:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b9efa333d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b9efa3358c0"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efa3ca260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b9efa3c6890"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b9efa3c6890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9efa3c0060"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efa3bd190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b9ef91fb060"/></to>
    </wire>
    <wire loc="9:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9efa3b6c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b9ef95efcc0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9efa39b9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9efa4035e0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b9efa39d190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b9efa403d70"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b9efa4027f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9cd7220"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b9efa3f4500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b9ef9dd40e0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9efa3ee820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b9ef9dd3370"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b9efa3edb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b9ef9dce020"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b9efa3f6880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b9ef9e3a5a0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9efa3eb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa490c30"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa490c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa3ebd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa48f8f0"/></to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa48f8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa3e76d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b9efa48e2f0"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa48e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9efa3e7de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b9efa48dcc0"/></to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9efa48dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa3e6530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa48c370"/></to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa48c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa3e6c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa48bd00"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa48bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa3e8e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa484c60"/></to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa484c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa3ea780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa4d97a0"/></to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa4d97a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa3e8550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa4712f0"/></to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa4712f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa3e53e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa486480"/></to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa486480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa3e45e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa482e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa482e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa3e3020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa481670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa481670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9efa3e5e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b9efa4887b0"/></to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9efa4887b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa3e29c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa4dbad0"/></to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa4dbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa3e3890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b9efa4dc2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa4dc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa3e2130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b9efa4dcad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa4dcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa3ddd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa4cddf0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa4cddf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa4c4550"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa3fea00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa3fc9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9efa3fb7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa51e550"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa3efb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa516480"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa516480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa5788b0"/></to>
    </wire>
    <wire loc="104:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9efa3e06c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa483c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9efa48d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa487c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9efa47ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9efa481e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa4da2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9efa475670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9efa486c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa47b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9efa47de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa480670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9efa489370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa474a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa489ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa471ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa48b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9efa476e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa484480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa48e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa478e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9efa479670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa476670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9efa47c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9efa479e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa472ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa47f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa4daad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9efa487490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa483480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa47be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa480e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa47a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa482670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9efa48d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa488160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9efa488e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9efa4722f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa473ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa48b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa4732f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9efa4db2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa47ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9efa478670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa48c9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa47fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9efa47d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9efa475e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b9efa4c9020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b9efa4c37c0"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9efa4ae150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b9efa4c2020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b9ef9dd3370"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b9efa4c1380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b9ef9dd26a0"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b9efa4c06b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b9ef9dd19d0"/></to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9efa4bfa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9ef9e3de30"/></to>
    </wire>
    <wire loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b9efa4be6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9efa66bd00"/></to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9efa66bd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa4bd530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa6bdad0"/></to>
    </wire>
    <wire loc="195:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa6bdad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa4bcad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa6da6b0"/></to>
    </wire>
    <wire loc="137:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa6da6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9efa4bc3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b9efa6d9370"/></to>
    </wire>
    <wire loc="139:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b9efa6d9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa4bb330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa4ba1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="78:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9efa4b8d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa51e550"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b9efa4bab90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b9ef9c17dc0"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa4b33e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa6d2e50"/></to>
    </wire>
    <wire loc="155:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa6d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa4b3cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa6d0670"/></to>
    </wire>
    <wire loc="156:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa6d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa4b4b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa6d8160"/></to>
    </wire>
    <wire loc="141:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa6d8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa4b16d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa6bd2f0"/></to>
    </wire>
    <wire loc="192:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa6bd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa4b2590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b9efa6bf2f0"/></to>
    </wire>
    <wire loc="188:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b9efa6bf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa4b2e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b9efa6bfad0"/></to>
    </wire>
    <wire loc="189:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b9efa6bfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa4b0020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa6c0ad0"/></to>
    </wire>
    <wire loc="187:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa6c0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa4b08b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b9efa669300"/></to>
    </wire>
    <wire loc="129:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b9efa669300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b9efa5119d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efa5897c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef9d4f020"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9efa573820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9efa5924e0"/></to>
    </wire>
    <wire loc="69:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9efa575b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9efa5ed610"/></to>
    </wire>
    <wire loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9efa5ed610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9efa68d2b0"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa5f2020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9efa69c150"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efa5f3130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa5be020"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efa5be020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb3fb9d0"/></to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9efa696640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9efa6042f0"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efa5ff850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efa5be870"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efa5be870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb3f45f0"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efa68c690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9efa5ddb70"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efa5ddb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9efa5d5610"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efb3fb9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb3df360"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b9efb3efd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb3fa260"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efb3fa260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb3dfbf0"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efb3f19b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9efa5ddb70"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb3dbdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb3e4020"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb3e4020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb3d9440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb3e3760"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb3e3760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb3d8760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb3e2a80"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb3e2a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b9efa5d3b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9ef97e19d0"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b9efa5fb9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9efa691a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9efa6838c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa67a2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa67a2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa5f2020"/></to>
    </wire>
    <wire loc="153:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa6d3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b9efa6dc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa6d6c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b9efa6c9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b9efa6d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa6db370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b9efa6c5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa6c02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b9efa6d5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa6d4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa6cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b9efa6cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa6cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa66a970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></to>
    </wire>
    <wire loc="138:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa6dad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa6c4a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa6d9ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa6da060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b9efa6c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa6d4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa6d5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa669950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa6c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b9efa6c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa6c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa6bead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b9efa6cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b9efa6c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa6c1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa6ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b9efa6d6490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa6d3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa6cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa6cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa6c9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa6d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b9efa6dc670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b9efa6d8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b9efa6c12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa6c2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa6c22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b9efa6be2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa6cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b9efa6c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b9efa6dccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa6db9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa6cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b9efa6d87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b9efa6cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b9efa6c5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa6bb7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b9efa708920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b9efa704940"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efa70e9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efa704080"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa6e6e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9efa6eb020"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa6e5ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa6e7690"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa6e7690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa010280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b9efa6e48f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b9efa70aa20"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa6e3170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="57:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9efa745200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9efa741570"/></to>
    </wire>
    <wire loc="58:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa7403f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b9efa745950"/></to>
    </wire>
    <wire loc="62:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa740a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa77fd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9efa7896b0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa77eb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b9efa789020"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa77d2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa77c170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="102:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b9efa77cb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9efa7a8410"/></to>
    </wire>
    <wire loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b9efa7c9db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b9efa79b800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa797580"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa797580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa010280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa7fddd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b9efa802d70"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b9efa7fcaf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa842350"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b9efa842350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b9efa010280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x2b9efa7fa650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9efa840750"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9efa840750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa67a2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9efa7fb9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efa5206e0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa7f5a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></to>
    </wire>
    <wire loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x2b9efa7f12a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b9efa906580"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b5c680"/></to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9efa8f1060"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9efa8de910"/></to>
    </wire>
    <wire loc="76:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efa9027e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efa8e3340"/></to>
    </wire>
    <wire loc="98:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b9efa9021d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9efa8da2c0"/></to>
    </wire>
    <wire loc="95:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa8fe640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9b92bb0"/></to>
    </wire>
    <wire loc="73:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9efa8f7e50"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9efa8e74d0"/></to>
    </wire>
    <wire loc="97:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b9efa9035c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9efa8db6b0"/></to>
    </wire>
    <wire loc="94:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9efa8ffb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b9c810"/></to>
    </wire>
    <wire loc="70:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9efa8fdaa0"/></from>
      <to><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9efa8ecc10"/></to>
    </wire>
    <wire loc="99:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efa901470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efa8e2020"/></to>
    </wire>
    <wire loc="79:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b9efa8daa00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efa9da020"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efa9da020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb45fcb0"/></to>
    </wire>
    <wire loc="80:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b9efa8d86a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efa9d98b0"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efa9d98b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efb45d590"/></to>
    </wire>
    <wire loc="81:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b9efa8d9800"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efa9dac30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efa9dac30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efb45e930"/></to>
    </wire>
    <wire loc="83:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa8d5130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa51e550"/></to>
    </wire>
    <wire loc="84:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa8d1270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa51a660"/></to>
    </wire>
    <wire loc="85:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa8cd020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa516480"/></to>
    </wire>
    <wire loc="87:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efa9d1b30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef9d4f020"/></to>
    </wire>
    <wire loc="88:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9efa8cdd30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9efa9d2830"/></to>
    </wire>
    <wire loc="89:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9efa948060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9efa9cee60"/></to>
    </wire>
    <wire loc="26:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9efa9cee60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9efa5ed610"/></to>
    </wire>
    <wire loc="90:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9efa9470f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></to>
    </wire>
    <wire loc="100:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b9efa8d7e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b9ef9b3a210"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2b9efa8d6550"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b9ef9b3adf0"/>
      <arguments>
        <value cst="I:61">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efb45fcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb50a660"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efb45e930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb45d590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efa9d7020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efb45cc10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efb45cc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b7f800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efb509460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa9bb940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb5080e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efa9bb940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa9f04b0"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efa9ef400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9ef9b3b050"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efa9ed060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efa9ec720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b9efa9eb480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b9efa9ebc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efb4bdcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb55fe30"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efaa3c930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efb4bc930"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efb4bc930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa3b590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efb4bb590"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb4bb590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efaa3ac10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efb4bac10"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efb4bac10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b7f800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efb55ead0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa9bb940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb55d720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efaa31dd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa2fa10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efb541140"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb533390"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efaa2a270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efb541d50"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efb541d50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa2ae80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efb53f990"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb53f990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efaa285d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efb53d120"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efb53d120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b7f800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efb532060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa9bb940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb532c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efaa25710"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa24400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="63:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b9efb5164c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b9efb5b8640"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efaa20aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9efb5150f0"/></to>
    </wire>
    <wire loc="64:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efb5150f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa1e720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9efb515d00"/></to>
    </wire>
    <wire loc="65:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb515d00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="67:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efaa1dda0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b9efb513440"/></to>
    </wire>
    <wire loc="66:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b9efb513440"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b7f800"/></to>
    </wire>
    <wire loc="60:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b9efb5b72e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b9efa9bb940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efb5b6020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
    <wire loc="9:SlotSchedulerC.nc">
      <from><interface-ref name="EpochTimer" scoped="" ref="0x2b9efb5a25c0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb5904d0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb5904d0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efaa50e30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:SlotSchedulerC.nc">
      <from><interface-ref name="StartSlotTimer" scoped="" ref="0x2b9efb59d9f0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb58ad00"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb58ad00"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efaa50e30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:SlotSchedulerC.nc">
      <from><interface-ref name="EndSlotTimer" scoped="" ref="0x2b9efb598e70"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb5834d0"/></to>
    </wire>
    <wire loc="9:Timer32C.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb5834d0"/></from>
      <to><interface-ref name="Timer32khz" scoped="" ref="0x2b9efaa50e30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Timer32P.nc">
      <from><interface-ref name="Timer32khz" scoped="" ref="0x2b9efaa50e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9efaab9a70"/></to>
    </wire>
    <wire loc="12:Timer32P.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9efaab20a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9efaac5180"/></to>
    </wire>
    <wire loc="13:Timer32P.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efaac0690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efaacb6b0"/></to>
    </wire>
    <wire loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efaacb6b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb60c890"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efaacce40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb613b90"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9efb613b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9efb5f6660"/></to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b9efb6040a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb6114f0"/></to>
    </wire>
    <wire loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9efb6114f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9efb5f5020"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9efb608c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef9d4f020"/></to>
    </wire>
    <wire loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb5f1190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb5fb450"/></to>
    </wire>
    <wire loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb5fb450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb5f0770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb5faa80"/></to>
    </wire>
    <wire loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb5faa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb5efa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb5f9da0"/></to>
    </wire>
    <wire loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb5f9da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b9efaabc950"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9efaaad490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b9efaa8e5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></to>
    </wire>
    <wire loc="56:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa8d270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="4:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/zdenial/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/zdenial/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/zdenial/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TDMALinkC" loc="9:TDMALinkC.nc">
      <configuration/>
    </component>
    <component qname="TDMALinkP" loc="13:TDMALinkP.nc">
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/zdenial/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/zdenial/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/zdenial/tinyos/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):/home/zdenial/tinyos/tos/system/StateC.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio with timesync support.</short>
        <long>&#10; The Active Message layer for the CC2420 radio with timesync support. This&#10; configuration is just layer above CC2420ActiveMessageC that supports&#10; TimeSyncPacket and TimeSyncAMSend interfaces (TEP 133)&#10;&#10; @author: Miklos Maroti&#10; @author: Brano Kusy (CC2420 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageP" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:61">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC" loc="47(CC2420TimeSyncMessageC.AMSenderC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420TimeSyncMessageC.LocalTime32khzC" loc="46(CC2420TimeSyncMessageC.LocalTime32khzC):/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC" loc="47(TDMALinkC.JoinReqSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC" loc="47(TDMALinkC.JoinReqSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinReqRcvC" loc="43(TDMALinkC.JoinReqRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:131">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC" loc="47(TDMALinkC.JoinAnsSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC" loc="47(TDMALinkC.JoinAnsSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.JoinAnsRcvC" loc="43(TDMALinkC.JoinAnsRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:132">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC" loc="47(TDMALinkC.DataSndC):/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC" loc="47(TDMALinkC.DataSndC.SenderC):/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP" loc="43(TDMALinkC.DataSndC.SenderC.AMQueueEntryP):/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC" loc="1(TDMALinkC.SlotSchedulerC):SlotSchedulerC.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerC"/>
        <arguments>
          <value cst="I:3276">
            <type-int cname="long" size="I:4" alignment="I:2"></type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP" loc="3(TDMALinkC.SlotSchedulerC.SlotSchedulerP):SlotSchedulerP.nc">
      <instance number="0">
        <component-ref qname="SlotSchedulerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EpochTimer" loc="2(TDMALinkC.SlotSchedulerC.EpochTimer):Timer32C.nc">
      <instance number="1">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P" loc="2:Timer32P.nc">
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C" loc="41(Timer32P.Alarm32khz32C):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC" loc="41(Timer32P.Alarm32khz32C.AlarmC):/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(Timer32P.Alarm32khz32C.AlarmC.Msp430Timer):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm):/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.Alarm32khz32C.Transform" loc="51(Timer32P.Alarm32khz32C.Transform):/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.AlarmToTimerC" loc="46(Timer32P.AlarmToTimerC):/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Timer32P.VirtualizeTimerC" loc="46(Timer32P.VirtualizeTimerC):/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.StartSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.StartSlotTimer):Timer32C.nc">
      <instance number="2">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.SlotSchedulerC.EndSlotTimer" loc="2(TDMALinkC.SlotSchedulerC.EndSlotTimer):Timer32C.nc">
      <instance number="3">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TDMALinkC.DataRcvC" loc="43(TDMALinkC.DataRcvC):/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestC.Timer" loc="2(TestC.Timer):Timer32C.nc">
      <instance number="0">
        <component-ref qname="Timer32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b9ef9225230" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b9ef92255d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b9ef9225980" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b9ef9225d00" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b9ef92240d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b9ef9224440" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b9ef92247d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b9ef9224b60" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b9ef9223020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b9ef9277960" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b9ef9277d30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b9ef966d890" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b9ef966dc40" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b9ef966c020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b9ef966c3d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b9ef966c740" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b9ef97dbad0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b9ef97dbad0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b9ef98a05b0" loc="89:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b9ef98935b0" loc="42:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b9ef98b6d90" loc="52:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/zdenial/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b9ef9d309d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b9ef9d309d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b9ef9d4bbb0" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b9ef9d4bbb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b9ef9d983b0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b9ef9d983b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b9ef9d987a0" loc="57:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b9ef9d987a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b9ef9d96020" loc="58:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b9ef9d96020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b9ef9d963f0" loc="59:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b9ef9d96bf0" loc="60:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b9ef9d96bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b9ef9d50dd0" loc="52:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b9ef9d50dd0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b9ef9d75600" loc="53:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b9ef9d75600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b9ef9d759f0" loc="54:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b9ef9d759f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b9ef9d74210" loc="55:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b9ef9d74210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b9ef9d745e0" loc="56:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/zdenial/tinyos/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9efa36f400" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9efa36f400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9efa36fb90" loc="52:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9efa36fb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9efa594a60" loc="46:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9efa594a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9efa62bcd0" loc="46:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9efa62bcd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9efa5f6230" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9efa5f6230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9efa5f6560" loc="46:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/zdenial/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b9efa960a00" loc="47:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b9efa9596b0" loc="47:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b9efa94f320" loc="43:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b9efa9b7c80" loc="45:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b9efaa35060" loc="43:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerC" loc="1:SlotSchedulerC.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2b9efaa1a650" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2b9efaa1a9c0" loc="1:SlotSchedulerC.nc">
          <component-ref qname="SlotSchedulerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SlotSchedulerP" loc="3:SlotSchedulerP.nc" abstract="">
      <parameters>
        <constant name="slotDuration" ref="0x2b9efaa13020" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </constant>
        <constant name="maxSlots" ref="0x2b9efaa13390" loc="3:SlotSchedulerP.nc">
          <component-ref qname="SlotSchedulerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Timer32C" loc="2:Timer32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="LinkSnd" ref="0x2b9ef914b650" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkSnd" scoped="" ref="0x2b9ef914b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef914b9d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef914bb60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef914bcf0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef914be80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9127030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9ef912d9a0" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9ef912d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9ef912dd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkCtrl" ref="0x2b9ef9128470" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkCtrl" scoped="" ref="0x2b9ef9128470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef91287f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9128980"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9128b10"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9128ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataTimer" ref="0x2b9ef915be40" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataTimer" scoped="" ref="0x2b9ef915be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef9158390"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef915a970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef9159720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef91592a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef9158c90"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef9158810"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef915adf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef9149a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef9159d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef915a020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef915a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkRcv" ref="0x2b9ef9155020" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkRcv" scoped="" ref="0x2b9ef9155020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef91553a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9ef9136370" loc="7:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9136370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9ef91366f0"/>
        <function-ref name="source" scoped="" ref="0x2b9ef9136880"/>
        <function-ref name="address" scoped="" ref="0x2b9ef9136a10"/>
        <function-ref name="destination" scoped="" ref="0x2b9ef9136ba0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9ef9136d30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9ef912c020"/>
        <function-ref name="type" scoped="" ref="0x2b9ef912c1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9ef912c340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9ef912c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9ef912c660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9ef912c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9ef91804e0" loc="58:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef91804e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9180860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9ef9183020" loc="57:/home/zdenial/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9ef9183020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9ef91833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef91823d0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef91823d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9182750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b9ef917b400" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b9ef917b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef917b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef917c5d0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef917c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef917c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b9ef917cce0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b9ef917cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef917b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b9ef917bae0" loc="7:/home/zdenial/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b9ef917bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef917be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef917e6d0" loc="2:/home/zdenial/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef917e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef917ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b9ef917d910" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b9ef917d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef917dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b9ef91b7de0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9ef91b7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b9ef919ac70"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b9ef919a310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b9ef919a4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b9ef919a630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b9ef919a180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b9ef919a7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b9ef919a950"/>
        <function-ref name="initClocks" scoped="" ref="0x2b9ef919aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef919e850" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef919e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef919ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b9ef91c8020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9ef91c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b9ef91c7020"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b9ef91c8530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b9ef91c86c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b9ef91c8850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b9ef91c83a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b9ef91c89e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b9ef91c8b70"/>
        <function-ref name="initClocks" scoped="" ref="0x2b9ef91c8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b9ef91c7360" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9ef91c7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9ef91c76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef91a77e0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef91a77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef91a7b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b9ef920b5a0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b9ef920b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef920b920"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef920bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef920bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef920bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef920a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef920a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef920a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef920a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef920a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b9ef921c020" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b9ef921c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef921c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef921c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef921c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef921c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef921c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef921cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef921cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef921b020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef921b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b9ef9202700" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b9ef9202700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9202a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef9202c10"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef9202da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9201020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92011b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef9201340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b9ef922da20" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b9ef922da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef922dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef922c020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef922c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef922c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef922c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef922c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b9ef9209aa0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b9ef9209aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9209e20"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9208020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92081b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9208340"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b9ef9210020" loc="61:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b9ef9210020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92103a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9210530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92106c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9210850"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92109e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b9ef922aa20" loc="71:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b9ef922aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef922ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef9229020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92291b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9229340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92294d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef9229660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b9ef92175a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b9ef92175a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9217920"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef9217ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9217c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef9217dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef9216020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92161b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef9216340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92164d0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef9216660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b9ef920cb10" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b9ef920cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef91f1020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef91f11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef91f1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef91f14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef91f1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef91f17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef91f1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef91f1b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef91f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b9ef922fa20" loc="66:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b9ef922fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef922fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef922e020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef922e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef922e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef922e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef922e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b9ef92123e0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b9ef92123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9212760"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92128f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef9212a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9212c10"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9212da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b9ef921b5a0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b9ef921b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef921ba20"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef921bbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef921bd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef921a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef921a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef921a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef921a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef921a660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef921a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b9ef9201700" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b9ef9201700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9201a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef9201c10"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef9201da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef921e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef921e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef921e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b9ef922ca20" loc="69:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b9ef922ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef922cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef922b020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef922b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef922b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef922b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef922b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b9ef921abe0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b9ef921abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9219020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92191b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9219340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92194d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef9219660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92197f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef9219980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef9219b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef9219ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b9ef9208890" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b9ef9208890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9208c10"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9208da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef9203020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92031b0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9203340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b9ef91fb060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b9ef91fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef91fb3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef91fb570"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef91fb700"/>
        <function-ref name="get" scoped="" ref="0x2b9ef91fb890"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef91fba20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef91fbbb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef91fbd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef91f9020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef91f91b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef91f9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef91f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b9ef9210da0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b9ef9210da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef920f180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef920f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef920f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef920f630"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef920f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b9ef91f00c0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b9ef91f00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef91f0440"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef91f05d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef91f0760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef91f08f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef91f0a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef91f0c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef91f0da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef920b020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef920b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b9ef9216a50" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b9ef9216a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9216dd0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef9215020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92151b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef9215340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92154d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9215660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92157f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef9215980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef9215b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b9ef91fc690" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b9ef91fc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef91fca10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef91fcba0"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef91fcd30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9202020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92021b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef9202340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b9ef922ea20" loc="67:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b9ef922ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef922eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef922d020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef922d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef922d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef922d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef922d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b9ef9205cf0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b9ef9205cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92090a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9209230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92093c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9209550"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92096e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b9ef92111f0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b9ef92111f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9211570"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9211700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef9211890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9211a20"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9211bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b9ef922ba20" loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b9ef922ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef922bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef922a020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef922a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef922a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef922a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef922a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b9ef92180c0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b9ef92180c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9218440"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92185d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9218760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92188f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef9218a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9218c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef9218da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef9217020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b9ef921e6c0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b9ef921e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef921ea40"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef921ebd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef921ed60"/>
        <function-ref name="get" scoped="" ref="0x2b9ef921d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef921d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef921d340"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef921d4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef921d660"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef921d7f0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef921d980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef921db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b9ef920fb80" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b9ef920fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef920e020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef920e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef920e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef920e4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef920e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b9ef9230a20" loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b9ef9230a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9230da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef922f020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef922f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef922f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef922f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef922f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b9ef920ea20" loc="64:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b9ef920ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9230020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92301b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef9230340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92304d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9230660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b9ef9213570" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b9ef9213570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92138f0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9213a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef9213c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9213da0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9212020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b9ef9214020" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b9ef9214020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92143a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef9214530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92146c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef9214850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92149e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9214b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef9214d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef9213020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b9ef925d2f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9ef925d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef925d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b9ef925ec20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b9ef925ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef925d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b9ef925d940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9ef925d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef925dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b9ef925e5b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef925e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef925e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef9260c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef9260c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef925f0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef925f230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef925f3c0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef925f550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef925f6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef925f870"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef925fa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef925fb90"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef925fd20"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef925e020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef925e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b9ef92562f0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b9ef92562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9256670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b9ef9257c20" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b9ef9257c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9256020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b9ef9256940" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b9ef9256940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9256cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b9ef92575b0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92575b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9257950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef9259c80" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef9259c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92580a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef9258230"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92583c0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9258550"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92586e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9258870"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef9258a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9258b90"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9258d20"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef9257020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92c1a90" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92c1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92c1e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92bf020"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92bf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92bf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92bf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92759d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92759d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9275d50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92c2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92c21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92c2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92c24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92c2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92c27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92c2980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92c2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92bd020" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92c2de0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92c2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92c1180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92c1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92c14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92c1630"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92c17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92bf930" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92bf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92bfcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92bfe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92be020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92be1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92be340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92be4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92be660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92be7f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92be980"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92beb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92beca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92b8160" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92b8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92b84e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92b8670"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92b8800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92b8990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92b8b20"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92b8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92ba020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92ba3a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92ba530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92ba6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92ba850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92ba9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92bab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92bad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92b9020"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92b67a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92b67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92b6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92b9480" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92b9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92b9800"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92b9990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92b9b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92b9cb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92b9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92b7020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92b73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92b7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92b76c0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92b7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92b79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92b7b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92b7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92b6020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92b61b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92b6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92b17a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92b17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92b1b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92b1cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92b1e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92b0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92b01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92b36d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92b36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92b3a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92b3be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92b3d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92b2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92b21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92b2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92b24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92b2660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92d4c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92b2ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92b2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92b2e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92b1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92b11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92b1340"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92b0610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92b0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92b0990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92b0b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92b0cb0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92b0e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92d4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92d41b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92d4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92d44d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92d4660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92d47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92cfcb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92cfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92ce0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92ce230"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92ce3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92ce550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92ce6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92ce870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92d1b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92d1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92d0020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92d01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92d0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92d04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92d0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92d07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92d0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92d0b10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92cc2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92cc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92cf020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92cf3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92cf530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92cf6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92cf850"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92ceb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92ceb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92cd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92cd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92cd340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92cd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92cd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92cd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92cd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92cdb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92cdca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92cde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92c72f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92c7670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92c7800"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92c7990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92c7b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92c7cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92c7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92c9220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92c9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92c95a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92c9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92c98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92c9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92c9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92c9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92c8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92c81b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92c8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92c47a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92c47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92c4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92c8610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92c8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92c8990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92c8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92c8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92c8e40"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92c6160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92c6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92c64e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92c6670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92c6800"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92c6990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92c6b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92c6cb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92c6e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92c4020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92c41b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92c4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92e57a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92e57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92e5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92e5cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92e5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92e4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92e41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92e76d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92e76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92e7a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92e7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92e7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92e6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92e61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92e6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92e64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92e6660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92e67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92e3c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92e3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92e6ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92e6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92e6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92e5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92e51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92e5340"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92e4610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92e4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92e4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92e4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92e4cb0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92e4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92e3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92e31b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92e3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92e34d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92e3660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92e37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92decb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92dd0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92dd230"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92dd3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92dd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92dd6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92dd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92e0b30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92e0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92df020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92df1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92df340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92df4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92df660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92df7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92df980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92dfb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92dfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92db2f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92db670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92de020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92de3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92de530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92de6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92de850"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92de9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92ddb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92ddb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92dc020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92dc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92dc340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92dc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92dc660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92dc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92dc980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92dcb10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92dcca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92dce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92fb2f0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92fb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92fb670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92fb800"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92fb990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92fbb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92fbcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92fbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92d7220" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92d7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92d75a0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92d7730"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92d78c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92d7a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92d7be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92d7d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92d6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92d61b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92d6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92f97a0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92f97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92f9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92d6610" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92d6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92d6990"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92d6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92d6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92d6e40"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92fa160" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92fa160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92fa4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92fa670"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92fa800"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92fa990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92fab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92facb0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92fae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92f9020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92f91b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92f9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92f47a0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92f47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92f4b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92f4cb0"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92f4e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92f3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92f31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92f66d0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92f66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92f6a50"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92f6be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92f6d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92f5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92f51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92f5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92f54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92f5660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92f2c50" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92f2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92f5ac0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92f5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92f5e40"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92f4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92f41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92f4340"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92f3610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92f3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92f3990"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92f3b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92f3cb0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92f3e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92f2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92f21b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92f2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92f24d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92f2660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92f27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef92eccb0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef92eccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92eb0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef92eb230"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef92eb3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92eb550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92eb6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef92eb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef92eeb30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef92eeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef92ed020"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef92ed1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92ed340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef92ed4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef92ed660"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92ed7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef92ed980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef92edb10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef92edca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b9ef92e92f0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b9ef92e92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef92e9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef92ec020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b9ef92ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef92ec3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef92ec530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef92ec6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef92ec850"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef92ec9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef92ebb40" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9ef92ebb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef92ea020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef92ea1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef92ea340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef92ea4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef92ea660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef92ea7f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef92ea980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef92eab10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef92eaca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef92eae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef92e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b9ef9309240" loc="7:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b9ef9309240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef93095c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b9ef930daa0" loc="4:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b9ef930daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef930de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b9ef930a260" loc="5:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b9ef930a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef930a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b9ef930a9f0" loc="6:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b9ef930a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef930ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b9ef8dea080" loc="55:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9ef8dea080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9ef8dea400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9ef8cad2d0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b9ef8cad2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9ef8cad650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b9ef8e827d0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b9ef8e827d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9ef8e82b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b9ef919cb50" loc="39:/home/zdenial/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b9ef919cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b9ef9328b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b9ef93281b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b9ef9328340"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b9ef93284d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b9ef9328020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b9ef9328660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b9ef93287f0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b9ef9328980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9ef9347dc0" loc="60:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef9347dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9346180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9ef9329590" loc="57:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9ef9329590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9ef9329910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b9ef93476c0" loc="59:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b9ef93476c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9347a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b9ef9329c00" loc="58:/home/zdenial/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b9ef9329c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9347020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9ef93471b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9ef9347340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9ef8bd31d0" loc="48:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef8bd31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef8bd3550"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef8bd36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9ef8c3d3a0" loc="47:/home/zdenial/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b9ef8c3d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef8c3d720"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9ef8c3d8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9ef8c3da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9ef9091040" loc="56:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b9ef9091040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef90913c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9091550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b9ef908e5d0" loc="57:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b9ef908e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9ef908e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9ef9093140" loc="55:/home/zdenial/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b9ef9093140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef90934c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9ef9093650"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9ef90937e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9ef9363710" loc="12:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9ef9363710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9363a90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9363c20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9363db0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9362020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef93621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef93630c0" loc="11:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef93630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9363440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef9184570" loc="10:TDMALinkC.nc">
      <component-ref qname="TDMALinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef9184570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef91848f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9184a80"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9184c10"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9184da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b9ef9359b60" loc="20:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x2b9ef9359b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef9358020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef93581b0"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9358340"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef93584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsRcv" ref="0x2b9ef9364500" loc="31:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsRcv" scoped="" ref="0x2b9ef9364500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9364980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9ef935b020" loc="15:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9ef935b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef935b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef935b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef935b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef935b850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef935b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncSnd" ref="0x2b9ef936fdf0" loc="23:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncSnd" scoped="" ref="0x2b9ef936fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9356c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef936d590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef936d110"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef936e580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef936ea90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqSnd" ref="0x2b9ef936a340" loc="27:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqSnd" scoped="" ref="0x2b9ef936a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef936a6c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef936a850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef936a9e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef936ab70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef936ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSnd" ref="0x2b9ef9364ca0" loc="33:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DataSnd" scoped="" ref="0x2b9ef9364ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef938b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef938b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef938b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef938b550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef938b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef935bcc0" loc="16:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef935bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef935a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncRcv" ref="0x2b9ef936dc70" loc="24:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncRcv" scoped="" ref="0x2b9ef936dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef936c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b9ef935c480" loc="14:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b9ef935c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef935c800"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef935c990"/>
        <function-ref name="start" scoped="" ref="0x2b9ef935cb20"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef935ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TSPacket" ref="0x2b9ef9367a90" loc="25:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TSPacket" scoped="" ref="0x2b9ef9367a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9ef936b890"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9ef936bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinReqRcv" ref="0x2b9ef93650d0" loc="28:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinReqRcv" scoped="" ref="0x2b9ef93650d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9365450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JoinAnsSnd" ref="0x2b9ef9365790" loc="30:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="JoinAnsSnd" scoped="" ref="0x2b9ef9365790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9365b10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9365ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9365e30"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9364020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef93641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x2b9ef9357020" loc="21:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9357020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9ef93573a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9ef9357530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9ef93576c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9ef9357850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9ef93579e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9ef935a3b0" loc="19:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9ef935a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9ef935a730"/>
        <function-ref name="source" scoped="" ref="0x2b9ef935a8c0"/>
        <function-ref name="address" scoped="" ref="0x2b9ef935aa50"/>
        <function-ref name="destination" scoped="" ref="0x2b9ef935abe0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9ef935ad70"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9ef9359020"/>
        <function-ref name="type" scoped="" ref="0x2b9ef93591b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9ef9359340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9ef93594d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9ef9359660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9ef93597f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SlotScheduler" ref="0x2b9ef93835f0" loc="35:TDMALinkP.nc">
      <component-ref qname="TDMALinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b9ef93835f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9ef938a4d0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b9ef9383b00"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b9ef9383c90"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef9383e20"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b9ef938a020"/>
        <function-ref name="start" scoped="" ref="0x2b9ef938a1b0"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b9ef938a340"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b9ef9383970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9ef93ffd10" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9ef93ffd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef94020e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9402270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b9ef93f5400" loc="44:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b9ef93f5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b9ef93f5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b9ef93f9bd0" loc="39:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9ef93f9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef93fc020"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef93fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef93fcc80" loc="43:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef93fcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef93fb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2b9ef93fd020" loc="38:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x2b9ef93fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef93fd3a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef93fd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9ef93fc4f0" loc="42:/home/zdenial/tinyos/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9ef93fc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef93fc870"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef93fca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9ef9414310" loc="6:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9ef9414310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9414690"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef9414820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9ef94331e0" loc="5:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9ef94331e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9433560"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9ef94336f0"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef9433880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9ef9433a10"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9ef9433ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9ef9433d30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9414020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9ef93fe320" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9ef93fe320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef93fe6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef93fe830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9ef992b8f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef992b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9ef992bc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9ef992be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9ef9929060" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9ef9929060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef99293e0"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef9929570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b9ef9929800" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9929800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9ef9929b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9ef992a0c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9ef992a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef992a440"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9ef992a5d0"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef992a760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9ef992a8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9ef992aa80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9ef992ac10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef992ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef992cc00" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef992cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef992b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef992b1b0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef992b340"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef992b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef992b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9ef9480ca0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef9480ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9ef94820a0"/>
        <function-ref name="configure" scoped="" ref="0x2b9ef9482230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9ef947e050" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9ef947e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef947e3d0"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef947e560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b9ef947b1d0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef947b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9ef947b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9ef9482a70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9ef9482a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9482df0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9ef9481020"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef94811b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9ef9481340"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9ef94814d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9ef9481660"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef94817f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9ef947ee60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9ef947ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef947d210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef947d3a0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef947d530"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef947d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef947d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef94841d0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef94841d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9484550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef94846e0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9484870"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9484a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9484b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9ef9477710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9ef9477710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef9477a90"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef9477c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9ef952b3e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef952b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9ef952b780"/>
        <function-ref name="configure" scoped="" ref="0x2b9ef952b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9ef952adc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b9ef952adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9529180"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef9529310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b9ef9528570" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9528570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9ef9528910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b9ef9528be0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9ef9528be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9ef9527020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9ef95271b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9ef9527340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9ef95274d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9ef9527660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9ef95277f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9ef9527980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9ef9527b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9ef9527ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9ef9527e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9ef9526020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9ef95261b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9ef9526340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9ef95265d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9ef9526760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9ef95268f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9ef9526a80"/>
        <function-ref name="isUart" scoped="" ref="0x2b9ef9526c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9ef9526da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9ef9525020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9ef95251b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9ef9525340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9ef95254d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9ef9525660"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef95257f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9ef9525b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9ef9525d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9ef9524020"/>
        <function-ref name="tx" scoped="" ref="0x2b9ef95241b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9ef9524340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9ef95244d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9ef9524660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9ef95247f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9ef9524980"/>
        <function-ref name="rx" scoped="" ref="0x2b9ef9524b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9ef9524ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9ef9524e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9ef9523020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9ef95231b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9ef9523340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9ef952bcd0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9ef952bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef952a0a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9ef952a230"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef952a3c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9ef952a550"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9ef952a6e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9ef952a870"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef952aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9ef9522180" loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9ef9522180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef9521020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef95219a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef95214e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9521e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9ef9529710" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9ef9529710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9529ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9529c40"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9529dd0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9528020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef95281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef952c5b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef952c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef952c950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef952cae0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef952cc70"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef952ce00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef952b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9ef9523740" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9ef9523740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef9523ae0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef9523c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef951f2c0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef951f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef951f640"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef951f7d0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef951f960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef951faf0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef951fc80"/>
        <function-ref name="get" scoped="" ref="0x2b9ef951fe10"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef951e020"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef951e660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef951e340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef951e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef951e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9ef953f860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9ef953f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef953fbe0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef953fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b9ef9542500" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef9542500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef9542880"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9542a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9ef9542d30" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9ef9542d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9ef95450e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9ef9545270"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9ef9545400"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9ef9545590"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9ef9545720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9ef95458b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9ef9545a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9ef9545bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9ef9545d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9ef9544020"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9ef95441b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9ef9544340"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9ef95444d0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9ef9544760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9ef95448f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9ef9544a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9ef9544c10"/>
        <function-ref name="isUart" scoped="" ref="0x2b9ef9544da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9ef9541020"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9ef95411b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9ef9541340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9ef95414d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9ef9541660"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9ef95417f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef9541980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9ef9541d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9ef9540020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9ef95401b0"/>
        <function-ref name="tx" scoped="" ref="0x2b9ef9540340"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9ef95404d0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9ef9540660"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9ef95407f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9ef9540980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9ef9540b10"/>
        <function-ref name="rx" scoped="" ref="0x2b9ef9540ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9ef9540e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9ef953f020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9ef953f1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9ef953f340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9ef953f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b9ef9558800" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b9ef9558800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9558b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9558d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9556020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9556340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9556660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9556980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9556b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9556ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9556e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9555020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95552b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9555440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9ef9536130" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9ef9536130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef95364b0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef9536640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b9ef9555800" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b9ef9555800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9555b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9555d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9554020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9554340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9554660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95547f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9554980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9554b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9554ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9554e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9553020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95532b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9553440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b9ef9553800" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b9ef9553800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9553b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9553d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9552020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9552340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9552660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95527f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9552980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9552b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9552ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9552e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9551020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95512b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9551440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b9ef953b550" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9ef953b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9ef953b8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9ef953ba60"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9ef953bbf0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9ef953bd80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9ef953a020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9ef953a1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9ef953a340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9ef953a4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9ef953a660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9ef953a7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9ef953a980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9ef953ab10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9ef953aca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9ef9539020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9ef95391b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9ef9539340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9ef95394d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9ef9539660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9ef95397f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9ef9539980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9ef9539b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9ef9539ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9ef9539e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9ef9538020"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef95381b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9ef9538540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9ef95386d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9ef9538860"/>
        <function-ref name="tx" scoped="" ref="0x2b9ef95389f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9ef9538b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9ef9538d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9ef9537020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9ef95371b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9ef9537340"/>
        <function-ref name="rx" scoped="" ref="0x2b9ef95374d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9ef9537660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9ef95377f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9ef9537980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9ef9537b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9ef9537ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b9ef953ebc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef953ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef953b020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef953b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b9ef9534800" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b9ef9534800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9534b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9534d10"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9559020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9559340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9559660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95597f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9559980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9559b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9559ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9559e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9558020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95582b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9558440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b9ef955a860" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b9ef955a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef955abe0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef955ad70"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9535020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9535340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9535660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95357f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9535980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9535b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9535ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9535e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9534020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95342b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9534440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b9ef95cdcc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b9ef95cdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95cc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95cc230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95cc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95cc550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95cc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95cc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95cca00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95ccb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95ccd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95cb020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95cb760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b9ef95ebcc0" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b9ef95ebcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95ea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95ea230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95ea3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95ea550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95ea6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95ea870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95eaa00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95eab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95ead20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95e9020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95e91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95e9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95e94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95e9760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b9ef96393d0" loc="145:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b9ef96393d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9639750"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96398e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9639a70"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9639c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9639d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9638020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96381b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9638340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96384d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9638660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96387f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9638980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9638b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9638da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9637020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b9ef96483e0" loc="165:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b9ef96483e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9648760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96488f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9648a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9648c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9648da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9647020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96471b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9647340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9647660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96477f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9647980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9647b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9647da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9646020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b9ef96373f0" loc="146:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b9ef96373f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9637770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9637900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9637a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9637c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9637db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9636020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96361b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9636340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96364d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9636660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96367f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9636980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9636b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9636da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9635020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b9ef95e7cc0" loc="71:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b9ef95e7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95e60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95e6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95e63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95e6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95e66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95e6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95e6a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95e6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95e6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95e5020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95e51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95e5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95e54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95e5760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95e58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b9ef9603020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b9ef9603020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96033a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9603530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96036c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9603850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9603b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9603d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9602020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9602340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9602660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9602a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9602c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b9ef9622020" loc="97:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b9ef9622020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96223a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9622530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96226c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9622850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96229e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9622b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9622d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9621020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9621340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9621660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9621a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9621c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b9ef9611020" loc="108:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b9ef9611020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96113a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9611530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96116c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9611850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96119e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9611b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9611d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9610020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9610340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9610660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9610a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9610c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b9ef96313f0" loc="149:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b9ef96313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9631770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9631900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9631a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9631c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9631db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9630020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96301b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9630340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96304d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9630660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96307f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9630980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9630b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9630da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef962f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b9ef96553e0" loc="159:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b9ef96553e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9655760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96558f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9655a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9655c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9655da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9654020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96541b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9654340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96544d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9654660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96547f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9654980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9654b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9654da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9653020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b9ef96403f0" loc="171:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b9ef96403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9640770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9640900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9640a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9640c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9640db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9673020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96731b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9673340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96734d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9673660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96737f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9673980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9673b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9673da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b9ef95c7cc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b9ef95c7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95c60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95c6230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95c63c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95c6550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95c66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95c6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95c6a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95c6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95c6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95c5020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95c5760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b9ef962f3f0" loc="150:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b9ef962f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef962f770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef962f900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef962fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef962fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef962fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef962e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef962e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef962e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef962e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef962e660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef962e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef962e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef962eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef962eda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef962d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b9ef95c3cc0" loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b9ef95c3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95c2a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95c1020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95c1760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b9ef95e0cc0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b9ef95e0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95df230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95df550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95dfa00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95de020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95de760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b9ef95fd020" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b9ef95fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95fd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95fd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95fd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95fd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95fdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95fdd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95fc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95fc340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95fc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95fc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95fc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95fca80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95fcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b9ef961c020" loc="100:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b9ef961c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef961c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef961c530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef961c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef961c850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef961c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef961cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef961cd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef961b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef961b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef961b340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef961b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef961b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef961b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef961ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef961bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b9ef963f020" loc="111:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b9ef963f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef963f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef963f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef963f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef963f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef963f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef963fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef963fd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef963e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef963e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef963e340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef963e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef963e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef963e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef963ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef963ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b9ef95d1cc0" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b9ef95d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95d0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95d03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95d0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95d06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95d0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95d0a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95d0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95d0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95cf020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95cf760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b9ef95efcc0" loc="64:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b9ef95efcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95ee180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95ee310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95ee4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95ee630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95ee7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95ee950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95eeae0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95eec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95eee00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95ed020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95ed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95ed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95ed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95ed760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95ed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b9ef95dacc0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b9ef95dacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef960b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef960b230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef960b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef960b550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef960b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef960b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef960ba00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef960bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef960bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef960a020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef960a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef960a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef960a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef960a760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef960a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b9ef963b3f0" loc="144:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b9ef963b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef963b770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef963b900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef963ba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef963bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef963bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef963a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef963a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef963a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef963a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef963a660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef963a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef963a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef963ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef963ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9639020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b9ef964e3e0" loc="162:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b9ef964e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef964e760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef964e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef964ea80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef964ec10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef964eda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef964d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef964d1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef964d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef964d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef964d660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef964d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef964d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef964db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef964dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef964c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b9ef96423e0" loc="169:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b9ef96423e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9642760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96428f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9642a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9642c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9642da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9641020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96411b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9641340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96414d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9641660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96417f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9641980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9641b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9641da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9640020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b9ef96273f0" loc="155:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b9ef96273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9627770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9627900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9627a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9627c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9627db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9626020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96261b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9626340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96264d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9626660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96267f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9626980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9626b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9626da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9659020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b9ef9608cc0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b9ef9608cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9607410"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96075a0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9607730"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96078c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9607a50"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9607be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9607d70"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9606020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9606340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9606660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9606a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9606c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b9ef95f3020" loc="95:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b9ef95f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95f3530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95f36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95f3850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95f39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95f3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95f3d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9625020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96251b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9625340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96254d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9625660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96257f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9625a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9625c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b9ef9615020" loc="106:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b9ef9615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96153a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9615530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96156c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9615850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96159e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9615b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9615d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9614020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9614340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9614660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9614a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9614c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b9ef964c3e0" loc="163:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b9ef964c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef964c760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef964c8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef964ca80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef964cc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef964cda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef964b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef964b1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef964b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef964b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef964b660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef964b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef964b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef964bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef964bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef964a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b9ef962d3e0" loc="152:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b9ef962d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef962d760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef962d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef962da80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef962dc10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef962dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef962c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef962c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef962c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef962c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef962c660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef962c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef962c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef962cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef962cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef962b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b9ef95cbcc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b9ef95cbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95ca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95ca230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95ca3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95ca550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95ca6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95ca870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95caa00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95cab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95cad20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95c9020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95c9760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b9ef95e9cc0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b9ef95e9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95e8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95e83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95e8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95e86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95e8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95e8a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95e8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95e8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95e7020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95e7760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b9ef9619020" loc="104:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b9ef9619020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96193a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9619530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96196c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9619850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96199e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9619b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9619d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9618020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9618340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9618660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9618a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9618c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b9ef95e5cc0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b9ef95e5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95e3230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95e33c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95e3550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95e36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95e3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95e3a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95e3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95e3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95e2020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95e2760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b9ef9601020" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b9ef9601020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96013a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9601530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96016c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9601850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96019e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9601b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9601d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9600020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9600340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9600660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9600a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9600c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b9ef9620020" loc="98:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b9ef9620020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96203a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9620530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96206c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9620850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96209e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9620b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9620d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef961f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef961f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef961f340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef961f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef961f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef961f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef961fa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef961fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b9ef960f020" loc="109:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b9ef960f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef960f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef960f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef960f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef960f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef960f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef960fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef960fd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef960e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef960e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef960e340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef960e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef960e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef960e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef960ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef960ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b9ef96293f0" loc="154:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b9ef96293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9629770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9629900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9629a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9629c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9629db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9628020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96281b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9628340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96284d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9628660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96287f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9628980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9628b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9628da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9627020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b9ef95d7e10" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b9ef95d7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95d41c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95d4350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95d44e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95d4670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95d4800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95d4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95d4b20"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95d4cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95d4e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95d3020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95d3760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b9ef95c1cc0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b9ef95c1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95f20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95f2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95f23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95f2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95f26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95f2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95f2a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95f2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95f2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95f1020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95f11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95f1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95f14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95f1760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95f18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b9ef95decc0" loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b9ef95decc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95dd230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95dd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95dd550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95dd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95dd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95dda00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95ddb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95ddd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95dc020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95dc760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b9ef95fb020" loc="88:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b9ef95fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95fb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95fb850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95fb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95fbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95fbd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95fa340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95faa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b9ef96593f0" loc="156:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b9ef96593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9659770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9659900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9659a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9659c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9659db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9658020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96581b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9658340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96584d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9658660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96587f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9658980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9658b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9658da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9657020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b9ef96533e0" loc="160:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b9ef96533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9653760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96538f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9653a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9653c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9653da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9651020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96511b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9651340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9651660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96517f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9651980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9651b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9651da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b9ef96463e0" loc="166:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b9ef96463e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9646760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96468f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9646a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9646c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9646da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9645020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96451b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9645340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96454d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9645660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96457f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9645980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9645b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9645da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9644020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b9ef95f7020" loc="93:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b9ef95f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95f7530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95f76c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95f7850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95f79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95f7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95f7d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95f6340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95f6a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b9ef96573f0" loc="157:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b9ef96573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9657770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9657900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9657a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9657c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9657db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9656020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96561b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9656340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9656660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96567f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9656980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9656b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9656da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b9ef95cfcc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b9ef95cfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95ce0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95ce230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95ce3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95ce550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95ce6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95ce870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95cea00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95ceb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95ced20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95cd020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95cd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95cd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95cd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95cd760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b9ef95edcc0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b9ef95edcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95ec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95ec230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95ec3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95ec550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95ec6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95ec870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95eca00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95ecb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95ecd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95eb020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95eb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95eb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95eb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95eb760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95eb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b9ef960acc0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b9ef960acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96090a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9609230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96093c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9609550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96096e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9609870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9609a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9609b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9609d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9608020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9608340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9608760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b9ef962b3f0" loc="153:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b9ef962b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef962b770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef962b900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef962ba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef962bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef962bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef962a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef962a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef962a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef962a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef962a660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef962a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef962a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef962ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef962ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9629020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b9ef964a3e0" loc="164:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b9ef964a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef964a760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef964a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef964aa80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef964ac10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef964ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9649020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96491b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9649340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96494d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9649660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96497f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9649980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9649b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9649da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9648020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b9ef9605020" loc="83:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b9ef9605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96053a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9605530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96056c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9605850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96059e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9605b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9605d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9604020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9604340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9604660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9604a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9604c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b9ef9624020" loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b9ef9624020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96243a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9624530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96246c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9624850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96249e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9624b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9624d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9623020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9623340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9623660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9623a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9623c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b9ef9613020" loc="107:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b9ef9613020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96133a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9613530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96136c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9613850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96139e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9613b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9613d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9612020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9612340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9612660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9612a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9612c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b9ef95c9cc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b9ef95c9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95c8230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95c83c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95c8550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95c86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95c8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95c8a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95c8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95c8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95c7020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95c7760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b9ef9617020" loc="105:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b9ef9617020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96173a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9617530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96176c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9617850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9617b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9617d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9616020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9616340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9616660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9616a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9616c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b9ef95c5cc0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b9ef95c5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95c4a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95c3020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95c3760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b9ef95e2cc0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b9ef95e2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95e1a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95e0020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95e0760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b9ef95ff020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b9ef95ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95ff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95ff530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95ff6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95ff850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95ff9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95ffb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95ffd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95fe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95fe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95fe340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95fe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95fe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95fe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95fea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95fec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b9ef961e020" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b9ef961e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef961e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef961e530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef961e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef961e850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef961e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef961eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef961ed00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef961d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef961d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef961d340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef961d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef961d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef961d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef961da80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef961dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b9ef960d020" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b9ef960d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef960d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef960d530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef960d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef960d850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef960d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef960db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef960dd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef960c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef960c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef960c340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef960c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef960c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef960c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef960ca80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef960cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b9ef95d3cc0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b9ef95d3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95d2230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95d23c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95d2550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95d26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95d2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95d2a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95d2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95d2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95d1020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95d1760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b9ef95f1cc0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b9ef95f1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95f00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95f0230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95f03c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95f0550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95f06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95f0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95f0a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95f0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95f0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95ef020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95ef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95ef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95ef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95ef760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95ef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b9ef95dccc0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b9ef95dccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95db230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95db3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95db550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95db6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95db870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95dba00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95dbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95dbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95da020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95da760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b9ef95f9020" loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b9ef95f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95f9530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95f96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95f9850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95f99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95f9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95f9d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95f8340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95f8a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b9ef96333d0" loc="148:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b9ef96333d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9633750"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96338e0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9633a70"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9633c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9633d90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9632020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96321b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9632340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96324d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9632660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96327f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9632980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9632b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9632da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9631020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b9ef96503e0" loc="161:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b9ef96503e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9650760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96508f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9650a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9650c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9650da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef964f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef964f1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef964f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef964f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef964f660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef964f7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef964f980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef964fb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef964fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef964e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b9ef96353f0" loc="147:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b9ef96353f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9635770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9635900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9635a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9635c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9635db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9634020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96341b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9634340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96344d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9634660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96347f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9634980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9634b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9634da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9633020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b9ef95f5020" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b9ef95f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef95f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef95f5530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef95f56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef95f5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef95f59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef95f5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef95f5d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef95f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef95f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef95f4340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef95f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef95f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef95f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef95f4a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef95f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b9ef96443e0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b9ef96443e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9644760"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96448f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9644a80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9644c10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9644da0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9643020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96431b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9643340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96434d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9643660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96437f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9643980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9643b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9643da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9642020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b9ef96723f0" loc="172:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b9ef96723f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9672770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9672900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9672a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9672c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9672db0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9671020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96711b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9671340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96714d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9671660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96717f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9671980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9671b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9671da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9670020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b9ef963d060" loc="143:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b9ef963d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef963d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef963d970"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef963db00"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef963dc90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef963de20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef963c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef963c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef963c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef963c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef963c660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef963c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef963c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef963cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef963cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef963b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef967b3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef967b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef967b770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef967b900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef967ba90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef967bc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef967bdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef967a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef967a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef967a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef967a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef967a660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef967a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef967a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef967ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef967ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9679020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9677e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9677e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96761c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9676350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96764e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9676670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9676800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9676990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9676b20"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9676cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9676e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9675020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9675340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9675760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96a7740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96a7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96a7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96a7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96a7de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96a61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96a6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96a64d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96a6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96a67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96a6980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96a6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96a6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96a6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96a5120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96a2100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96a2480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96a2610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96a27a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96a2930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96a2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96a2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96a2de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96a01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96a0340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96a04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96a0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96a07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96a0a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef969dd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef969dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef969c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef969c270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef969c400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef969c590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef969c720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef969c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef969ca40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef969cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef969cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef969b020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef969b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef969b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef969b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef969b760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef969b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9698740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9698740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9698ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9698c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9698de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9697020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9697340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96974d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9697660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9697980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9697b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9697ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9697e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9696120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9693100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9693100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9693480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9693610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96937a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9693930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9693ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9693c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9693de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9692020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9692340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9692660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9692a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9692c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef968fd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef968fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef968e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef968e270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef968e400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef968e590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef968e720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef968e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef968ea40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef968ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef968ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96c3020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96c3760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96c0740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96c0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96c0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96c0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96c0de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96bf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96bf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96bf4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96bf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96bf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96bf980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96bfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96bfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96bfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96be120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96bb100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96bb480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96bb610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96bb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96bb930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96bbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96bbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96bbde0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96ba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96ba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96ba340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96ba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96ba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96ba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96baa80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96bac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96b7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96b7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96b60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96b6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96b6400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96b6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96b6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96b68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96b6a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96b6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96b6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96b5020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96b5760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96b1740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96b1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96b1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96b1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96b1de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96b0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96b04d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96b0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96b07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96b0980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96b0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96b0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96b0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96af120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96ac260" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96ac260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96ac5e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96ac770"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96ac900"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96aca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96acc20"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96acdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96ab020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96ab1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96ab340"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96ab4d0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96ab660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96ab7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96ab980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96abc10"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96abda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96ded10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96ded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96dd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96dd270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96dd400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96dd590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96dd720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96dd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96dda40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96ddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96ddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96dc020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96dc760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96d9740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96d9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96d9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96d9de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96d8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96d81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96d8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96d84d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96d8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96d87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96d8980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96d8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96d8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96d8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96d7120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96d4100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96d4480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96d4610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96d47a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96d4930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96d4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96d4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96d4de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96d3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96d31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96d3340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96d34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96d3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96d37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96d3a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96d3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96d0d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96d0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96cf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96cf270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96cf400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96cf590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96cf720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96cf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96cfa40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96cfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96cfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96ce020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96ce760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96cb740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96cb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96cbac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96cbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96cbde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96ca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96ca4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96ca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96ca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96ca980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96cab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96caca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96cae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96c9120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96c6100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96c6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96c6480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96c6610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96c67a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96c6930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96c6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96c6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96c6de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96c41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96c4340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96c44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96c4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96c47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96c4a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96c4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96f7d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96f60e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96f6270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96f6400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96f6590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96f6720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96f68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96f6a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96f6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96f6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96f5020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96f5760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96f2740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96f2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96f2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96f2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96f2de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96f11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96f1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96f14d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96f1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96f17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96f1980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96f1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96f1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96f1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96f0120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96ed100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96ed480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96ed610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96ed7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96ed930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96edac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96edc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96edde0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96ec020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96ec1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96ec340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96ec4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96ec660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96ec7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96eca80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96ecc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96e9d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96e9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96e80e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96e8270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96e8400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96e8590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96e8720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96e88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96e8a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96e8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96e8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96e7020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96e7760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96e4740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96e4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96e4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96e4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96e4de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96e31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96e3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96e34d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96e3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96e37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96e3980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96e3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96e3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96e3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96e2120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96df3f0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96df770"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96df900"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96dfa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96dfc20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96dfdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9714020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97141b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9714340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97144d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9714660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97147f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9714980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9714b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9714da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9713020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9711e00" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9711e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97101c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9710350"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef97104e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9710670"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9710800"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9710990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9710b20"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9710cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9710e40"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef970f020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef970f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef970f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef970f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef970f760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef970f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef970c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef970c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef970cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef970cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef970cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef970a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef970a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef970a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef970a4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef970a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef970a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef970a980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef970ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef970aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef970ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9709120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9706100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9706100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9706480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9706610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef97067a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9706930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9706ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9706c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9706de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9705020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9705340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9705660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9705a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9705c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9702d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9702d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97010e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9701270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9701400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9701590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9701720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef97018b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9701a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9701bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9701d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9700020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9700340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9700760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef96fd740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef96fd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef96fdac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef96fdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef96fdde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef96fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef96fc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef96fc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef96fc4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef96fc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef96fc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef96fc980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef96fcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef96fcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef96fce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef96fb120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef96fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef972f100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef972f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef972f480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef972f610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef972f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef972f930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef972fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef972fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef972fde0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef972e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef972e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef972e340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef972e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef972e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef972e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef972ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef972ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef972bd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef972bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef972a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef972a270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef972a400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef972a590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef972a720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef972a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef972aa40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef972abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef972ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9729020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97291b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9729340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97294d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9729760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9726740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9726740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9726ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9726c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9726de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9725020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97251b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9725340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97254d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9725660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97257f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9725980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9725b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9725ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9725e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9724120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9721100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9721100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9721480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9721610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef97217a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9721930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9721ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9721c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9721de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9720020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9720340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9720660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9720a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9720c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef971cd10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef971cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef971b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef971b270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef971b400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef971b590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef971b720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef971b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef971ba40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef971bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef971bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef971a020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef971a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef971a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef971a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef971a760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef971a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9717740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9717740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9717ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9717c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9717de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9716020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97161b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9716340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97164d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9716660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9716980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9716b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9716ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9716e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9715120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef974a100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef974a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef974a480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef974a610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef974a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef974a930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef974aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef974ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef974ade0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9749020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9749340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9749660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9749a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9749c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9746d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9746d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97450e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9745270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9745400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9745590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9745720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef97458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9745a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9745bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9745d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9744020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9744340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9744760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9741740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9741740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9741ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9741c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9741de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9740020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9740340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97404d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9740660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9740980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9740b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9740ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9740e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef973f120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef973f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef973c100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef973c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef973c480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef973c610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef973c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef973c930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef973cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef973cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef973cde0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef973b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef973b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef973b340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef973b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef973b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef973b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef973ba80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef973bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9738d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9738d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97370e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9737270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9737400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9737590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9737720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef97378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9737a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9737bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9737d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9736020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9736340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9736760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9733740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9733740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9733ac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9733c50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9733de0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9731020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9731340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97314d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9731660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9731980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9731b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9731ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9731e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9768120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9765100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9765100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9765480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9765610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef97657a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9765930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9765ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9765c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9765de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9764020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9764340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9764660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9764a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9764c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9761d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9761d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97600e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9760270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9760400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9760590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9760720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef97608b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9760a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9760bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9760d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef975f020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef975f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef975f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef975f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef975f760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef975f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef975c740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef975c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef975cac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef975cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef975cde0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef975b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef975b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef975b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef975b4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef975b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef975b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef975b980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef975bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef975bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef975be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef975a120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef975a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9757100" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9757100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9757480"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9757610"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef97577a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9757930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9757ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9757c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9757de0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9756020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef97561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9756340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9756660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9756a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9756c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef9753d10" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef9753d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97520e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9752270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9752400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9752590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9752720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef97528b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9752a40"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9752bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9752d60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9751020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9751340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef97514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9751760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef974e740" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b9ef974e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef974eac0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef974ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef974ede0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef974d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef974d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef974d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef974d4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef974d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef974d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef974d980"/>
        <function-ref name="set" scoped="" ref="0x2b9ef974db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef974dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef974de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9784120"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9ef97e79a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9ef97e79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef97e37e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef97e21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef97e3ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef97e2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b9ef97e19d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b9ef97e19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef97de810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef97dd1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef97decd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef97dd670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9ef9808c50" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9808c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9806020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef98061b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9806340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98064d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9806660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef98067f0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef9806980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9806b10"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9806ca0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef9806e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef9805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9ef97dab80" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9ef97dab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef97d99b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9808360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef97d9e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9808820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9ef97e6970" loc="46:/home/zdenial/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef97e6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef97e6cf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef97e6e80"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef9802030"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef98021c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef9802350"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98024e0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef9802670"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9802cb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9802800"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9802990"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9802b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b9ef97f6910" loc="50:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b9ef97f6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97f6c90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef97f6e20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef97fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97fc1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef97fc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97fc4d0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97fc660"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef9801c40" loc="46:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef9801c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef97fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b9ef97fcb10" loc="51:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b9ef97fcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97fb020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef97fb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef97fb340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97fb4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef97fb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97fb7f0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97fb980"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97fbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9ef97fe2a0" loc="47:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef97fe2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef97fe620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef97fe7b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef97fe940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef97fead0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef97fec60"/>
        <function-ref name="get" scoped="" ref="0x2b9ef97fedf0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef97fd020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef97fd660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97fd1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef97fd340"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef97fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b9ef97fbe30" loc="52:/home/zdenial/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b9ef97fbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef97f51e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef97f5370"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef97f5500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef97f5690"/>
        <function-ref name="get" scoped="" ref="0x2b9ef97f5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef97f59b0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef97f5b40"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef97f5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b9ef9814360" loc="41:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b9ef9814360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef98146e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9814870"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9814a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9814b90"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9814d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9813020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef98131b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9813340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b9ef98136a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b9ef98136a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9813a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9813bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9813d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9812020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9812340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef98124d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9812660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b9ef9811c40" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef9811c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9810020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b9ef98129c0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b9ef98129c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9812d40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9811020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef98111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9811340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9811660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef98117f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9811980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9839930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9839930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9839cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9839e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9838020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef98381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9838340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef98384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9838660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98387f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9838980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9838b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9838ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9838e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9837020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef98372b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9837440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef980e710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef980e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef980ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef980ec20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef980edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9839020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9839340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef98394d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9839660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9834480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9834480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9834800"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9834990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9834b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9834cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9834e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9833020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef98331b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9833340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef98334d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9833660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef98337f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9833980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9833b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9833da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9832020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef98351d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef98351d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9835550"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef98356e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9835870"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9835a00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9835b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9835d20"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9834020"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef98341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef982f020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef982f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef982f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef982f530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef982f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef982f850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef982f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef982fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef982fd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef982e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef982e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef982e340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef982e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef982e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef982e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef982ea80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef982ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9831d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9831d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9830180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9830310"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef98304a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9830630"/>
        <function-ref name="get" scoped="" ref="0x2b9ef98307c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9830950"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9830ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9830c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efac2dc70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efac2dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efac2c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efac2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9efacb8d70" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efacb8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efacb7180"/>
        <function-ref name="configure" scoped="" ref="0x2b9efacb7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9efacb85d0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efacb85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efacb8950"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efacb8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efac2d020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efac2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efac2d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efac2d530"/>
        <function-ref name="request" scoped="" ref="0x2b9efac2d6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efac2d850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efac2d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9efac2cbe0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efac2cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9efac2b020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9efac2b1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9efac2b340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9efac2b4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9efac2b660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9efac2b7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9efac2b980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9efac2bb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9efac2bca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9efac2be30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9efac2a020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9efac2a1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9efac2a340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9efac2a5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9efac2a760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9efac2a8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9efac2aa80"/>
        <function-ref name="isUart" scoped="" ref="0x2b9efac2ac10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9efac2ada0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9efacba020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9efacba1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9efacba340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9efacba4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9efacba660"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efacba7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9efacbab80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9efacbad10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9efacb9020"/>
        <function-ref name="tx" scoped="" ref="0x2b9efacb91b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9efacb9340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9efacb94d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9efacb9660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9efacb97f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9efacb9980"/>
        <function-ref name="rx" scoped="" ref="0x2b9efacb9b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9efacb9ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9efacb9e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9efacb8020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9efacb81b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9efacb8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9efac2c440" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efac2c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efac2c7c0"/>
        <function-ref name="userId" scoped="" ref="0x2b9efac2c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9ef98812c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef98812c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9ef9881640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9ef98817d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9ef987f8a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef987f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9ef987fc20"/>
        <function-ref name="configure" scoped="" ref="0x2b9ef987fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9ef98831d0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9ef98831d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef9883550"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef98836e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef9882020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9882020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef98823a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9882530"/>
        <function-ref name="request" scoped="" ref="0x2b9ef98826c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9882850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef98829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9ef9881ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9881ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9ef9881e50"/>
        <function-ref name="userId" scoped="" ref="0x2b9ef987f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9ef9869a90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9869a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9ef9869e10"/>
        <function-ref name="userId" scoped="" ref="0x2b9ef9868020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9ef987db60" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9ef987db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef987c020"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef987c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b9ef9869480" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b9ef9869480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9869800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9ef987c5b0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9ef987c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef987c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b9ef987cc20" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b9ef987cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9ef9869020"/>
        <function-ref name="txDone" scoped="" ref="0x2b9ef98691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9ef98e3020" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9ef98e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9ef98e33c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9ef98e3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9ef98e2cd0" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9ef98e2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9ef98e10a0"/>
        <function-ref name="configure" scoped="" ref="0x2b9ef98e1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9ef98e37a0" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9ef98e37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef98e3b20"/>
        <function-ref name="requested" scoped="" ref="0x2b9ef98e3cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef98e3e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef98e2020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9ef98e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef98e4210" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef98e4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef98e45b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef98e4740"/>
        <function-ref name="request" scoped="" ref="0x2b9ef98e48d0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef98e4a60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef98e4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9ef98e2400" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef98e2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9ef98e2780"/>
        <function-ref name="userId" scoped="" ref="0x2b9ef98e2910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb028ca0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb028ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb0270a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9efb027330" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9efb027330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9efb0276b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9efb027840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9efb0279d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9efb027b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efb0243a0" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb0243a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efb024740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb0248d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9efb021210" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb021210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efb0215b0"/>
        <function-ref name="configure" scoped="" ref="0x2b9efb021740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9efb0219d0" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b9efb0219d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9efb021d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9efb020020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9efb0201b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9efb020340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9efb024b20" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efb024b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb022020"/>
        <function-ref name="requested" scoped="" ref="0x2b9efb0221b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb022340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb0224d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb022660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efb020590" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efb020590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efb020910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efb020aa0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efb020c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efb020dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efb01f020"/>
        <function-ref name="get" scoped="" ref="0x2b9efb01f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efb01f340"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efb01f980"/>
        <function-ref name="set" scoped="" ref="0x2b9efb01f660"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efb01f4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efb01f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efb025540" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efb025540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb0258e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efb025a70"/>
        <function-ref name="request" scoped="" ref="0x2b9efb025c00"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb025d90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb024020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9efb0228b0" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb0228b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efb022c30"/>
        <function-ref name="userId" scoped="" ref="0x2b9efb022dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9efb01fc50" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b9efb01fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efb01e020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efb01e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b9ef9905400" loc="72:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9ef9905400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b9ef9905780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b9ef99059d0" loc="73:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9ef99059d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9905d50"/>
        <function-ref name="requested" scoped="" ref="0x2b9ef9904020"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef99041b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9904340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9ef99044d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b9ef991bb20" loc="70:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9ef991bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef9905020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef99051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9ef9904720" loc="74:/home/zdenial/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9ef9904720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9ef9904aa0"/>
        <function-ref name="userId" scoped="" ref="0x2b9ef9904c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b9efb08db00" loc="62:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9efb08db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b9efb08de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b9efb08b0f0" loc="63:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efb08b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb08b470"/>
        <function-ref name="requested" scoped="" ref="0x2b9efb08b600"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb08b790"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb08b920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb08bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b9efb08d3a0" loc="60:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9efb08d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efb08d720"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb08d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9efb08bd00" loc="64:/home/zdenial/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb08bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efb08a0a0"/>
        <function-ref name="userId" scoped="" ref="0x2b9efb08a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b9ef9924080" loc="3:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b9ef9924080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9ef9924400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9ef99246f0" loc="4:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef99246f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9924a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9924c00"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9924d90"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9923020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef99231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9ef99277a0" loc="2:/home/zdenial/tinyos/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9ef99277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef9927b20"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9927cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b9ef9957430" loc="43:/home/zdenial/tinyos/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b9ef9957430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b9ef99577b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef9956780" loc="94:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef9956780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9956b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b9ef9956de0" loc="95:/home/zdenial/tinyos/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b9ef9956de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b9ef9953180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9ef994c020" loc="39:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b9ef994c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9ef994c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b9ef994c740" loc="40:/home/zdenial/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b9ef994c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef994cac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef994cc50"/>
        <function-ref name="start" scoped="" ref="0x2b9ef994cde0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef994b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef9944320" loc="46:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9944320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef99446a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9944830"/>
        <function-ref name="start" scoped="" ref="0x2b9ef99449c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9944b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9ef9943370" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9ef9943370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef99436f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9943880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9943a10"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9943ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9943d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9ef9941020" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9ef9941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef99413a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9ef9941530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef99416c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9941850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9ef99419e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef9942530" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef9942530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef99428b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef9976a00" loc="53:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef9976a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef9976d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef9975020"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef99751b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef9975340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef99754d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9975660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef99757f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9975e30"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9975980"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9975b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9975ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9ef9976080" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9976080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9ef9976400"/>
        <function-ref name="noAck" scoped="" ref="0x2b9ef9976590"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9ef9976720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9ef9941c90" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9941c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9ef99400a0"/>
        <function-ref name="source" scoped="" ref="0x2b9ef9940230"/>
        <function-ref name="address" scoped="" ref="0x2b9ef99403c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9ef9940550"/>
        <function-ref name="setSource" scoped="" ref="0x2b9ef99406e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9ef9940870"/>
        <function-ref name="type" scoped="" ref="0x2b9ef9940a00"/>
        <function-ref name="setType" scoped="" ref="0x2b9ef9940b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9ef9940d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9ef9977020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9ef99771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9ef99cf120" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9ef99cf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef99cf4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef99cf630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef99cf7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef99cf950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef99cfae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9ef99cfd70" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9ef99cfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef99ce180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9ef99d3110" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9ef99d3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef99d34b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef99d3640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef99d37d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef99d3960"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef99d3af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9ef99d1a40" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9ef99d1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef99d1dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9ef99d0020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef99d01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef99d0340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9ef99d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef99d3e70" loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef99d3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef99d2240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9ef99d0720" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef99d0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9ef99d0aa0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9ef99d0c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9ef99d0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9ef99d2490" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9ef99d2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9ef99d2810"/>
        <function-ref name="source" scoped="" ref="0x2b9ef99d29a0"/>
        <function-ref name="address" scoped="" ref="0x2b9ef99d2b30"/>
        <function-ref name="destination" scoped="" ref="0x2b9ef99d2cc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9ef99d2e50"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9ef99d1020"/>
        <function-ref name="type" scoped="" ref="0x2b9ef99d11b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9ef99d1340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9ef99d14d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9ef99d1660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9ef99d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef99ca8d0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef99ca8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef99cac50"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef99cade0"/>
        <function-ref name="start" scoped="" ref="0x2b9ef99c9020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef99c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9ef99c8480" loc="52:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9ef99c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9ef9122d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef99c8800"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef99c8990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef99c8b20"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef99c8cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef99c8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef99ca280" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef99ca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef99ca600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef99c9940" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef99c9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9ef9122d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef99c9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef99c5dc0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef99c5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef99c1180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef99c1310"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef99c14a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef99c1630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef99c17c0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef99c1950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef99c1ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef99c01b0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef99c1c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef99c1e00"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef99c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b9ef99c54a0" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b9ef99c54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9ef9122d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b9ef99c5820"/>
        <function-ref name="offset" scoped="" ref="0x2b9ef99c59b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b9ef99c5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef99fb810" loc="66:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef99fb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef99fbb90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef99fbd20"/>
        <function-ref name="start" scoped="" ref="0x2b9ef99fa020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef99fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b9ef9a5d6e0" loc="332:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b9ef9a5d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9a5da60"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9a5dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b9ef99e9860" loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b9ef99e9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef99e9be0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef99e9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b9ef9a0d4f0" loc="191:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b9ef9a0d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9a0d870"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9a0da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef99fb1c0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef99fb1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef99fb540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b9ef99e5480" loc="75:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b9ef99e5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b9ef99e5800"/>
        <function-ref name="flush" scoped="" ref="0x2b9ef99e5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b9ef9a61c70" loc="322:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b9ef9a61c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9a60020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9a601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b9ef99f3020" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9ef99f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b9ef99f33a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b9ef99f3530"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b9ef99f36c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b9ef99f3850"/>
        <function-ref name="putData" scoped="" ref="0x2b9ef99f39e0"/>
        <function-ref name="putDone" scoped="" ref="0x2b9ef99f3b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b9ef99f3d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef99ef020" loc="73:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef99ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef99ef3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef99ef530"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef99ef6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef99ef850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef99ef9e0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef99efb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef99efd00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef99e94d0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef99e9020"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef99e91b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef99e9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b9ef9a5aa00" loc="341:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b9ef9a5aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9a5ad80"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9a59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b9ef99f57d0" loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b9ef99f57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b9ef99f5b50"/>
        <function-ref name="nextByte" scoped="" ref="0x2b9ef99f5ce0"/>
        <function-ref name="startSend" scoped="" ref="0x2b9ef99f5e70"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b9ef99f9030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b9ef99f1c40" loc="68:/home/zdenial/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9ef99f1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b9ef99f4020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b9ef99f41b0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b9ef99f4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b9ef9b2f020" loc="275:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b9ef9b2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9b2f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9b2f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9ef9b34de0" loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9ef9b34de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9ef9122d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9b331c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9b33350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9b334e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9b33670"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9b33800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b9ef9b2f800" loc="158:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b9ef9b2f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9b2fb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9b2fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef9b346c0" loc="50:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef9b346c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9ef9122d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9b34a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b9ef9b33c20" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b9ef9b33c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b9ef9122d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b9ef9b32020"/>
        <function-ref name="offset" scoped="" ref="0x2b9ef9b321b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b9ef9b32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef9b31920" loc="57:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef9b31920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef9b31ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef9b31e30"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef9b30020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef9b301b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef9b30340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9b304d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef9b30660"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9b30ca0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9b30980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9b307f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9b30b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b9ef9b32e80" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b9ef9b32e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b9ef9b31220"/>
        <function-ref name="nextByte" scoped="" ref="0x2b9ef9b313b0"/>
        <function-ref name="startSend" scoped="" ref="0x2b9ef9b31540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b9ef9b316d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b9ef9b32590" loc="55:/home/zdenial/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b9ef9b32590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b9ef9b32910"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b9ef9b32aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b9ef9b32c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b9ef9b29e40" loc="50:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b9ef9b29e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9b281e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9ef9b28370"/>
        <function-ref name="receive" scoped="" ref="0x2b9ef9b28500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9ef9b28690"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9ef9b28820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9ef9b289b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9b28b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b9ef9b2ce10" loc="48:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b9ef9b2ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b9ef9b291c0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b9ef9b29350"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b9ef9b294e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b9ef9b29670"/>
        <function-ref name="putData" scoped="" ref="0x2b9ef9b29800"/>
        <function-ref name="putDone" scoped="" ref="0x2b9ef9b29990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b9ef9b29b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef9b28dc0" loc="51:/home/zdenial/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef9b28dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef9b27180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef9b27310"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef9b274a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef9b27630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef9b277c0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9b27950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef9b27ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9b261b0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9b27c70"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9b27e00"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9b26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b9ef9b4f6c0" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b9ef9b4f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b9ef9b4fa40"/>
        <function-ref name="offset" scoped="" ref="0x2b9ef9b4fbd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b9ef9b4fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef9b3c020" loc="61:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef9b3c3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9b3c530"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9b3c6c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9b3c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9ef9b3b050" loc="63:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9ef9b3b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9b3b3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9b3b560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9b3b6f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9b3b880"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9b3ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9ef9b3adf0" loc="65:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9ef9b3adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9b391c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9ef9b39450" loc="67:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9ef9b39450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9b397d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9ef9b39960"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9b39af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9b39c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9ef9b39e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b9ef9b749e0" loc="70:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9ef9b749e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9ef9b76020"/>
        <function-ref name="clear" scoped="" ref="0x2b9ef9b76750"/>
        <function-ref name="isValid" scoped="" ref="0x2b9ef9b7d890"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9b76e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9ef9b688a0" loc="72:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9b688a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9ef9b68c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9ef9b68db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9ef9b6e020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9ef9b6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef9b3a210" loc="64:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef9b3a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9b3a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9ef9b7f800" loc="69:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b7f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9ef9b7fb80"/>
        <function-ref name="noAck" scoped="" ref="0x2b9ef9b7fd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9ef9b7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9ef9b38120" loc="68:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b38120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9ef9b384a0"/>
        <function-ref name="source" scoped="" ref="0x2b9ef9b38630"/>
        <function-ref name="address" scoped="" ref="0x2b9ef9b387c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9ef9b38950"/>
        <function-ref name="setSource" scoped="" ref="0x2b9ef9b38ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9ef9b38c70"/>
        <function-ref name="type" scoped="" ref="0x2b9ef9b38e00"/>
        <function-ref name="setType" scoped="" ref="0x2b9ef9b7f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9ef9b7f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9ef9b7f340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9ef9b7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b9ef9b73af0" loc="71:/home/zdenial/tinyos/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9ef9b73af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9ef9b700d0"/>
        <function-ref name="clear" scoped="" ref="0x2b9ef9b70800"/>
        <function-ref name="isValid" scoped="" ref="0x2b9ef9b72970"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9b6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef9b5c680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b5c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef9b5ca00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9b5cb90"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9b5cd20"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9ba3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9ef9b8ad40" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9b8ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9ef9b920e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9ef9b92270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9ef9b92400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9ef9b92590"/>
        <function-ref name="setCca" scoped="" ref="0x2b9ef9b92720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9ef9b928b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b9ef9b87500" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b9ef9b87500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b9ef9b87980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9ef9b9e760" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9ef9b9e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9b9eae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9ef9b9ec70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9b9ee00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9b9d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9ef9b9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9ef9ba37f0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9ef9ba37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9ba3b70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9ba3d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9ba2020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9ba21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9ba2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9ef9ba0880" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9ef9ba0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9ba0c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9ef9b95970" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9b95970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9ef9b95cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9ef9b95e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9ef9b9c030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9ef9b9c1c0"/>
        <function-ref name="getPower" scoped="" ref="0x2b9ef9b9c350"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9ef9b9c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9ef9b92bb0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9b92bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9ef9b90020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9ef9b901b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9ef9b90340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9ef9b904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef9ba2b20" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef9ba2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9ba0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9ef9b9c810" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9b9c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9ef9b9cb90"/>
        <function-ref name="noAck" scoped="" ref="0x2b9ef9b9cd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9ef9b9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9ef9b90790" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9b90790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9ef9b90b10"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9ef9b90ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9ef9b90e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9ef9b88020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9ef9b881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9ef9b9f020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9ef9b9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9ef9b9f3a0"/>
        <function-ref name="source" scoped="" ref="0x2b9ef9b9f530"/>
        <function-ref name="address" scoped="" ref="0x2b9ef9b9f6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9ef9b9f850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9ef9b9f9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9ef9b9fb70"/>
        <function-ref name="type" scoped="" ref="0x2b9ef9b9fd00"/>
        <function-ref name="setType" scoped="" ref="0x2b9ef9b9e020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9ef9b9e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9ef9b9e340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9ef9b9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9ef9b91a80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9ef9b91a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9ef9b91e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef9b81340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9b81340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef9b816c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9b81850"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9b819e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9b81b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9ef9bc3080" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9ef9bc3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9ef9bc3400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9ef9bc22e0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9ef9bc22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9ef9bc2660"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9ef9bc27f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9ef9bc2980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9ef9bc2b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9ef9bc2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9ef9bc5740" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9bc5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9ef9bc5ac0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9ef9bc5c50"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9ef9bc5de0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9ef9bc4020"/>
        <function-ref name="getPower" scoped="" ref="0x2b9ef9bc41b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9ef9bc4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b9ef9bc6350" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b9ef9bc6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9bc66d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9bc6860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9bc69f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9bc6b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9bc6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9ef9bc3700" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9ef9bc3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9ef9bc3a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9ef9bc3c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9ef9bc3da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9ef9bc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b9ef9bc8e70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b9ef9bc8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9bc7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9ef9bc4670" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9ef9bc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9ef9bc49f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9ef9bc4b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9ef9bc4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef9b80430" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9b80430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9b807b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9b80940"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9b80ad0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9b80c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9b80df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b9ef9bc8160" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b9ef9bc8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9bc84e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9bc8670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9bc8800"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9bc8990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9bc8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b9ef9bc7560" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b9ef9bc7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9bc78e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9ef9bc7a70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9bc7c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9bc7d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9ef9bc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b9ef9bc50f0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b9ef9bc50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9bc5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef9bc19f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9bc19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef9bc1d70"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9bbd020"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9bbd1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9bbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9ef9bbc990" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9bbc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9ef9bbcd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9ef9bba020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9ef9bba1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9ef9bba340"/>
        <function-ref name="setCca" scoped="" ref="0x2b9ef9bba4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9ef9bba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9ef9bbd600" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9ef9bbd600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9bbd980"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9bbdb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9bbdca0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9bbde30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9bbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9ef9bbc300" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9ef9bbc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9ef9bbc680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9ef9bb7690" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9ef9bb7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9ef9bb7a10"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9ef9bb7ba0"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9bb7d30"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9bb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9ef9bb5020" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9ef9bb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9ef9bb53a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9ef9bb5530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9ef9bb56c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9ef9bb5850"/>
        <function-ref name="setCca" scoped="" ref="0x2b9ef9bb59e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9ef9bb5b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b9ef9bab060" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b9ef9bab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9ef9bab3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9ef9bab570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9ef9bab700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9ef9bab890"/>
        <function-ref name="setCca" scoped="" ref="0x2b9ef9baba20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9ef9babbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9ef9bec330" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9ef9bec330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9ef9bec6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9ef9bec840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9ef9bec9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9ef9becb60"/>
        <function-ref name="getPower" scoped="" ref="0x2b9ef9beccf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9ef9bece80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b9ef9ba42a0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9ef9ba42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9ba4620"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9ba47b0"/>
        <function-ref name="modify" scoped="" ref="0x2b9ef9ba4940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9ba4ad0"/>
        <function-ref name="resend" scoped="" ref="0x2b9ef9ba4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9ef9bb62e0" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9ef9bb62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9bb6660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9bb67f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9ef9bb6980"/>
        <function-ref name="cancel" scoped="" ref="0x2b9ef9bb6b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9bb6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b9ef9bea420" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9ef9bea420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9ef9bea7a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b9ef9bea930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b9ef9bb36f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b9ef9bb36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9ef9bb3a70"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9bb3c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9ef9be3920" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9ef9be3920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9ef9be3ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9ef9be3e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9ef9be8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b9ef9bac3f0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9bac3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b9ef9bac770"/>
        <function-ref name="rfOff" scoped="" ref="0x2b9ef9bac900"/>
        <function-ref name="rxOn" scoped="" ref="0x2b9ef9baca90"/>
        <function-ref name="startVReg" scoped="" ref="0x2b9ef9bacc20"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b9ef9bacdb0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b9ef9bb3020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b9ef9bb31b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b9ef9bb3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef9beabf0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef9beabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef9bed020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef9bed1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef9bed340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef9bed4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef9bed660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9bed7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef9bed980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9bec020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9bedb10"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9bedca0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9bede30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9ef9bb5e60" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9bb5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9bb4210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9bb43a0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9bb4530"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9bb46c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9bb4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b9ef9be7110" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b9ef9be7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9ef9be7590"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9ef9be7720"/>
        <function-ref name="isState" scoped="" ref="0x2b9ef9be78b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9ef9be7a40"/>
        <function-ref name="requestState" scoped="" ref="0x2b9ef9be7bd0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9ef9be7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b9ef9bd9b70" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b9ef9bd9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9bd8020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9bd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b9ef9bdbba0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b9ef9bdbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9bd9020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9bd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b9ef9bdcc20" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b9ef9bdcc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9bdb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9bdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b9ef9c17dc0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9ef9c17dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9ef9c23180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9ef9c23310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9ef9c234a0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9ef9c23630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9ef9c237c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9ef9c23950"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9ef9c23ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9ef9c23c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9ef9c23e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9ef9c22020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9ef9c221b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9ef9c22340"/>
        <function-ref name="sync" scoped="" ref="0x2b9ef9c224d0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9ef9c22760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9ef9c228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b9ef9c140c0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b9ef9c140c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c14cb0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9ef9c13170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b9ef9c22bf0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9c22bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b9ef9c16020"/>
        <function-ref name="rfOff" scoped="" ref="0x2b9ef9c161b0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b9ef9c16340"/>
        <function-ref name="startVReg" scoped="" ref="0x2b9ef9c164d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b9ef9c16660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b9ef9c167f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b9ef9c16980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b9ef9c16b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef9c27950" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9c27950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9c27cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9c27e60"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9c24020"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9c241b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9c24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b9ef9c59970" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9ef9c59970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9ef9c59cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9ef9c59e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9ef9c58030"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9ef9c581c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9ef9c58350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9ef9c584e0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9ef9c58670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9ef9c58800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9ef9c58990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9ef9c58b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9ef9c58cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9ef9c58e40"/>
        <function-ref name="sync" scoped="" ref="0x2b9ef9c57020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9ef9c572b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9ef9c57440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b9ef9c7c8e0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9ef9c7c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c7cc60"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c7cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b9ef9c52020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9ef9c52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b9ef9c523a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b9ef9c4ad90" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b9ef9c4ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef9c48670"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9c505d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef9c48020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef9c50a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef9c48b30"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9c51bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9c50110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b9ef9c815f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9ef9c815f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c81970"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c81b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b9ef9c46380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b9ef9c46380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9c46700"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9c46890"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9c46a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9c46bb0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9c46d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9c45020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9c451b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9c45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b9ef9c56b40" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b9ef9c56b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c55750"/>
        <function-ref name="readDone" scoped="" ref="0x2b9ef9c55bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b9ef9c6a820" loc="126:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b9ef9c6a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9c6aba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9c6ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b9ef9c7b1c0" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9ef9c7b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c7b540"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c7b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b9ef9c7ba70" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9ef9c7ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c7bdf0"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b9ef9c3a3d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9ef9c3a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c3a750"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c3a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b9ef9c3b810" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9ef9c3b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b9ef9c3bb90"/>
        <function-ref name="changed" scoped="" ref="0x2b9ef9c3bd20"/>
        <function-ref name="amGroup" scoped="" ref="0x2b9ef9c42020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b9ef9c421b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b9ef9c47060" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9ef9c47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9c473e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9c47570"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9c47700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9c47890"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9c47a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9c47bb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9c47d40"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9c46020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b9ef9c79160" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9ef9c79160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9ef9c796e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b9ef9c456a0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b9ef9c456a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9c45a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9c45bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9c45d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9c44020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9c441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9c44340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9c444d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9c44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef9c5a510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef9c5a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9c5a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b9ef9c7c020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9ef9c7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c7c3a0"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c7c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b9ef9c79a80" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9ef9c79a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9ef9c79e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9ef9c781d0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9ef9c781d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9c78550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9c786e0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9c78870"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9c78a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9c78b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b9ef9c76d90" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b9ef9c76d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9c75180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9c75310"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9c754a0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9c75630"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9c757c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b9ef9c57740" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b9ef9c57740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b9ef9c57ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b9ef9c57c50"/>
        <function-ref name="rxOn" scoped="" ref="0x2b9ef9c57de0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b9ef9c56020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b9ef9c561b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b9ef9c56340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b9ef9c564d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b9ef9c56660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b9ef9c3ac80" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9ef9c3ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c810a0"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c81230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b9ef9c7db00" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9ef9c7db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c7de80"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c3a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b9ef9c772e0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9ef9c772e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9ef9c77660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef9c75a80" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef9c75a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef9c75e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef9c73020"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef9c731b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef9c73340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef9c734d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9c73660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef9c737f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9c73e30"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9c73980"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9c73b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9c73ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b9ef9c6b940" loc="125:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b9ef9c6b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9c6bcc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9c6be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef9c5ab80" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9c5ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9c59020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9c591b0"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9c59340"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9c594d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9c59660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b9ef9c3e520" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9ef9c3e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c3e8a0"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c3ea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b9ef9c82a90" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9ef9c82a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9c3e020"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9c3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b9ef9c430e0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b9ef9c430e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9c43460"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9c435f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9ef9c43780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9ef9c43910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b9ef9c76020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b9ef9c76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9c763a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9c76530"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9c766c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9c76850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9c769e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b9ef9c779f0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9ef9c779f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9ef9c77d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef9cda7e0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef9cda7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9cdab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b9ef9cd7220" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9cd7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef9cd5b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9cd6a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef9cd54e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef9cd5020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef9cd3020"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9cd6090"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9cd65a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef9cd2a20" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9ef9cd2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef9cd2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b9ef9d1f2e0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b9ef9d1f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef9dd8b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9ddaae0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef9dd84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef9dd8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef9dd7020"/>
        <function-ref name="start" scoped="" ref="0x2b9ef9dda110"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef9dda620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb1302a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb1302a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb12eb30"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb12faa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb12e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb12e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb12d020"/>
        <function-ref name="start" scoped="" ref="0x2b9efb12f0d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb12f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb131a10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb131a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb131d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb1292a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb1292a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb126b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb128aa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb1264e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb126020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb125020"/>
        <function-ref name="start" scoped="" ref="0x2b9efb1280d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb1285e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb12aa10" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb12aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb12ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9efb110c10" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb110c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9efb10f020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9efb10f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9efb10f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9efb10f4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb10f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9efb1121b0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb1121b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb112530"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb1126c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb112850"/>
        <function-ref name="get" scoped="" ref="0x2b9efb1129e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb112b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb112d00"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb111020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb1111b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb111340"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efb1114d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efb111660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9efb1118f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb1118f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9efb111c70"/>
        <function-ref name="getControl" scoped="" ref="0x2b9efb111e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb110020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9efb1101b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9efb110340"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb1104d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9efb110660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9efb1107f0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9efb110980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9ef9cfdba0" loc="52:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9ef9cfdba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9cfc020"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9ef9cfc1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9ef9cfc340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9ef9cfc4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9cfc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9ef9d014d0" loc="50:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9ef9d014d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9d01850"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9ef9d019e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9d01b70"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9d01d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9d00020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9d001b0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9ef9d00340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9d004d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9d00660"/>
        <function-ref name="setMode" scoped="" ref="0x2b9ef9d007f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9ef9d00980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9ef9cfe280" loc="51:/home/zdenial/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9cfe280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9cfe600"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef9cfe790"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9cfe920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef9cfeab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef9cfec40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9cfedd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef9cfd020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef9cfd1b0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef9cfd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b9efb106a80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb106a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9efb106e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9efb105020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9efb1051b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9efb105340"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb1054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9efb108020" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb108020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb1083a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb108530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb1086c0"/>
        <function-ref name="get" scoped="" ref="0x2b9efb108850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb1089e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb108b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb108d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb107020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb1071b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efb107340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efb1074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb10dda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb10dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb10a670"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb10b610"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb10a020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb10bad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb10ab30"/>
        <function-ref name="start" scoped="" ref="0x2b9efb10cbf0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb10b150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb10d510" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb10d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb10d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9efb107760" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb107760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9efb107ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9efb107c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb107e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9efb106020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9efb1061b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb106340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9efb1064d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9efb106660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9efb1067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9ef9d4f020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9ef9d4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef9d4fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9d4d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9d4d340"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9d4dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b9ef9d7c950" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b9ef9d7c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef9d7b780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9d79150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9d7bc40"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9d79610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9ef9d995f0" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9ef9d995f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef9d7d430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9d7ddb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9d7d8f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef9d7c2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb1235f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb1235f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb121e50"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb122e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb121800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb121340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb11f340"/>
        <function-ref name="start" scoped="" ref="0x2b9efb122430"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb122940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b9efb11dd20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b9efb11dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb119670"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb11b550"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb119020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb11ba10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb119b30"/>
        <function-ref name="start" scoped="" ref="0x2b9efb11cb60"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb11b090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efb11f9b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efb11f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efb11e7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb11d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb11eca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb11d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b9ef9dd26a0" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b9ef9dd26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dd2a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dd2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dd2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dd1020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dd11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dd1340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dd14d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b9ef9dd19d0" loc="45:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b9ef9dd19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dd1d50"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dd0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dd01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dd0340"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dd04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dd0660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dd07f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dd0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b9ef9dd0ce0" loc="46:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b9ef9dd0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dcf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dcf230"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dcf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dcf550"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dcf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dcf870"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dcfa00"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dcfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b9ef9dd3370" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9ef9dd3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dd36f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dd3880"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dd3a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dd3ba0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dd3d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dd2020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dd21b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b9ef9dcd380" loc="48:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b9ef9dcd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dcd700"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dcd890"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dcda20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dcdbb0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dcdd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dcc020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dcc1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b9ef9dd40e0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b9ef9dd40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dd4460"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dd45f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dd4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dd4910"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dd4aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dd4c30"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dd4dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b9ef9dce020" loc="47:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b9ef9dce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dce530"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dce6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dce850"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dce9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dceb70"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dced00"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dcd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9dca930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9dca930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dcacb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dcae40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9dc8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dc81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dc8340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9dc84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dc8660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dc87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9dc8980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9dc8b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dc8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9dc8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9dc7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9dc72b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dc7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9dcb710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9dcb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dcba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dcbc20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dcbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dca020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dca340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dca4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dca660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9dc4480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9dc4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dc4800"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dc4990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9dc4b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dc4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dc4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9dc3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dc31b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dc3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9dc34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9dc3660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dc37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9dc3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9dc3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9dc3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9dc51b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9dc51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dc5530"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dc56c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dc5850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dc59e0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dc5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dc5d00"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dc4020"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dc41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9e11020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e113a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e11530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9e116c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e11850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e119e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9e11b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e11d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e10020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9e101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9e10340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9e10660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9e107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9e10a80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e10c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9e13d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e13d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e12180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e12310"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e124a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e12630"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e127c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e12950"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e12ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e12c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9e0dde0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e0dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e0c180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e0c310"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9e0c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e0c630"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e0c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9e0c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e0cae0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e0cc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9e0ce00"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9e0b020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e0b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9e0b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9e0b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9e0b760"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e0b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9e0eb70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e0eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e0d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e0d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e0d340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e0d4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e0d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e0d7f0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e0d980"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e0db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9e08930" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e08930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e08cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e08e40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9e07020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e07340"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9e074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e07660"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9e07980"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9e07b10"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e07ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9e07e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9e06020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9e062b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e06440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9e09710" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e09710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e09a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e09c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e09db0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e08020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e08340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e084d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e08660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9e02480" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9e02480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e02800"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e02990"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9e02b20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e02cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e02e40"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9e01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e011b0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e01340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9e014d0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9e01660"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e017f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9e01980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9e01b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9e01da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9e041b0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e041b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e04530"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e046c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e04850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e049e0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e04b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e04d00"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e02020"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9ef9dfd020" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9ef9dfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dfd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dfd530"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9dfd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dfd850"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dfd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9dfdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dfdd00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dfc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9dfc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9dfc340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dfc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9dfc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9dfc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9dfca80"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dfcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9ef9dffd70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9dffd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9dfe180"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9dfe310"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9dfe4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9dfe630"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9dfe7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9dfe950"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9dfeae0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9dfec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b9ef9e3a5a0" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b9ef9e3a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b9ef9e3a920"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e3aab0"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef9e3ac40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b9ef9e3add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b9ef9e3d210" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b9ef9e3d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e3d590"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e3d720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9ef9e3d8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9ef9e3da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b9ef9e3de30" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9ef9e3de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e391e0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e39370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9ef9e39500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9ef9e39690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b9ef9e24da0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b9ef9e24da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9ef9e23180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b9ef9e23310"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef9e234a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef9e23630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef9e237c0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b9ef9e23950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b9ef9e25020" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b9ef9e25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b9ef9e253a0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e25530"/>
        <function-ref name="captured" scoped="" ref="0x2b9ef9e256c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b9ef9e25850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9ef9e25ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9ef9e25ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9ef9e25e60"/>
        <function-ref name="getControl" scoped="" ref="0x2b9ef9e24020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9ef9e241b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9ef9e24340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9ef9e244d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9ef9e24660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9ef9e247f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9ef9e24980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef9e24b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b9ef9e23c20" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9ef9e23c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef9e22020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef9e221b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9ef9e22340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef9e224d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef9e22660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9ef9e227f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef9e22980"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9e22b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9ef9e22ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9ef9e22e30"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9e21020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9ef9e211b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9ef9e21340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9ef9e215d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef9e21760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b9ef9e68c40" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b9ef9e68c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e67020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e671b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e67340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e674d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e67660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b9ef9e5dbc0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b9ef9e5dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e5c020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e5c1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e5c340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e5c4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e5c660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b9ef9e65bc0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b9ef9e65bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e64020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e641b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e64340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e644d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e64660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b9ef9e63bc0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b9ef9e63bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e61020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e611b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e61340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e614d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e61660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b9ef9e1ad20" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b9ef9e1ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e690e0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e69270"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e69400"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e69590"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e69720"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e698b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b9ef9e5fbc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b9ef9e5fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e5e0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e5e230"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e5e3c0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e5e550"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e5e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e5e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b9ef9e67bc0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b9ef9e67bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e66020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e661b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e66340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e664d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e66660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b9ef9e5cbc0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b9ef9e5cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e5b020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e5b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e5b340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e5b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e5b660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e5b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b9ef9e6ae70" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b9ef9e6ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e1b220"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e1b3b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e1b540"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e1b6d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e1b860"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e1b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b9ef9e61bc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b9ef9e61bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e60020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e601b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e60340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e604d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e60660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e607f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b9ef9e69c80" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b9ef9e69c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e680a0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e68230"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e683c0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e68550"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e686e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e68870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b9ef9e5ec40" loc="57:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b9ef9e5ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e5d020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e5d1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e5d340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e5d4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e5d660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b9ef9e66bc0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b9ef9e66bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e65020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e651b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e65340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e654d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e65660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b9ef9e64bc0" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b9ef9e64bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e63020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e631b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e63340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e634d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e63660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b9ef9e1bdc0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b9ef9e1bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e1a180"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e1a310"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e1a4a0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e1a630"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e1a7c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e1a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b9ef9e60bc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b9ef9e60bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e5f020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e5f1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e5f340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e5f4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e5f660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e5f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b9ef9e54a30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b9ef9e54a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e54db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e53020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e531b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e53340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e534d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b9ef9e4abc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b9ef9e4abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e49020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e491b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e49340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e494d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e49660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b9ef9e51a30" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b9ef9e51a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e51db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e50020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e501b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e50340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e504d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b9ef9e4fa30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b9ef9e4fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e4fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e4e020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e4e1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e4e340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e4e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b9ef9e56a30" loc="41:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b9ef9e56a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e56db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e55020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e551b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e55340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e554d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b9ef9e4ca30" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b9ef9e4ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e4b020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e4b1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e4b340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e4b4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e4b660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e4b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b9ef9e53a30" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b9ef9e53a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e53db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e52020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e521b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e52340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e524d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e52660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b9ef9e49bc0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b9ef9e49bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e47020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e471b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e47340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e474d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e47660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b9ef9e5a9d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b9ef9e5a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e5ad50"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e57020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e571b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e57340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e574d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b9ef9e4ea30" loc="51:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b9ef9e4ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e4edb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e4d020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e4d1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e4d340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e4d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b9ef9e55a30" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b9ef9e55a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e55db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e54020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e541b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e54340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e544d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e54660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b9ef9e4bbc0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b9ef9e4bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e4a020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e4a1b0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e4a340"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e4a4d0"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e4a660"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e4a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b9ef9e52a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b9ef9e52a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e52db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e51020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e511b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e51340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e514d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e51660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b9ef9e50a30" loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b9ef9e50a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e50db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e4f020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e4f1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e4f340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e4f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e4f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b9ef9e57a30" loc="40:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b9ef9e57a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e57db0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e56020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e561b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e56340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e564d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b9ef9e4da30" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b9ef9e4da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9e4ddb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9e4c020"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9e4c1b0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9e4c340"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9e4c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9e4c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b9ef9f21610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b9ef9f21610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9f21990"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9f21b20"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9f21cb0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9f21e40"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9f6c020"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9f6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b9ef9f22a30" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b9ef9f22a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9f22db0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9f21020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9ef9f211b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9ef9f21340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b9ef9f6a610" loc="46:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b9ef9f6a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9ef9f6a990"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef9f6ab20"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9f6acb0"/>
        <function-ref name="edge" scoped="" ref="0x2b9ef9f6ae40"/>
        <function-ref name="enable" scoped="" ref="0x2b9ef9f69020"/>
        <function-ref name="getValue" scoped="" ref="0x2b9ef9f691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b9ef9f6ba70" loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b9ef9f6ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9ef9f6bdf0"/>
        <function-ref name="disable" scoped="" ref="0x2b9ef9f6a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9ef9f6a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9ef9f6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9efa2c3e50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c2410"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9efa266160" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9efa266160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2664e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9efa2c7e50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c6210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9efa2c1880" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa2c1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c1c00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9efa2b90a0" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9efa2b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b9420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9efa2c00a0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9efa2c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c0420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9efa2ad500" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa2ad500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ad880"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9efa2af500" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa2af500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2af880"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2afa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9efa265490" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa265490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa265810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9efa2b5880" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9efa2b5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b5c00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9efa2b1500" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa2b1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b1880"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9efa2c6e50" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9efa2c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c4210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9efa2c4e50" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c3210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9efa2bb880" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa2bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bbc00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9efa2bc0a0" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9efa2bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bc420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9efa2c0880" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa2c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c0c00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9efa268a90" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa268a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9efa268e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9efa267020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9efa2671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9efa263e00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa263e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2c91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9efa2c9490" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9efa2c9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2c9910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9efa2b4c80" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa2b4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b30a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9efa2c9be0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa2c9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9efa2b1ce0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa2b1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2af0a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2af230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9efa263160" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa263160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2634e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9efa2b50a0" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9efa2b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b5420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9efa2c4670" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa2c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c49f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9efa2c6670" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c69f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9efa267ad0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa267ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa267e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9efa2b60a0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa2b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b6420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9efa2b9880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9efa2b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b9c00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9efa2b6880" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa2b6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b6c00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9efa2aece0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa2aece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ad0a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ad230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9efa2afce0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa2afce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ae0a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9efa2bc880" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9efa2bc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bcc00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9efa2b80a0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9efa2b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b8420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9efa2b2ce0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa2b2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b10a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9efa2bf880" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa2bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bfc00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9efa2adce0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa2adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa2ac0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa2ac230"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ac3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa2ac550"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa2ac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9efa267480" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa267480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa267800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9efa2c7670" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9efa2c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c79f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9efa2c3670" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa2c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c39f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9efa2ba0a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa2ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ba420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9efa2bf0a0" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa2bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bf420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9efa2ba880" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa2ba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bac00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9efa2c2870" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2c2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c2bf0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9efa2667b0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9efa2667b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa266b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9efa2c10a0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa2c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2c1420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2c15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa269e20" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa269e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa2681c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa268350"/>
        <function-ref name="request" scoped="" ref="0x2b9efa2684e0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa268670"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa268800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9efa2c82f0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa2c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2c8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9efa2c7020" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9efa2c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9efa2b2500" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9efa2b2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b2880"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9efa2b3ce0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa2b3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b20a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9efa2637b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa2637b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa263b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9efa2b3500" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa2b3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b3880"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9efa2ae500" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9efa2ae500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ae880"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2aea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9efa2bb0a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa2bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bb420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9efa2b8880" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9efa2b8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b8c00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9efa266e00" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9efa266e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2651c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9efa265ae0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa265ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa265e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9efa2bd0a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa2bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bd420"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9efa2c8940" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9efa2c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2c8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9efa2bd880" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9efa2bd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2bdc00"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2bdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9efa2b40a0" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9efa2b40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2b4820"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2b49b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9efa2ac9b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa2ac9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa2acd30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa2ab020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ab1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa2ab340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa2ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b9ef9f81630" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f81630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9ef9f819b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9ef9f81b40"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9f81cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9ef9f81e60"/>
        <function-ref name="readDone" scoped="" ref="0x2b9ef9f80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9ef9f82680" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f82680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9ef9f82a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9ef9f82b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9ef9f82d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b9ef9f808c0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b9ef9f808c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9f80c40"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9f80dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b9ef9f7f6f0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b9ef9f7f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9f7fa70"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9f7fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef9f85960" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9f85960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9f85ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9f85e70"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9f82030"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9f821c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9f82350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b9ef9f7d510" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f7d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9ef9f7d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b9ef9fc0680" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9ef9fc0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9ef9fc0a00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9ef9fc0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b9ef9f77bb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b9ef9f77bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9ef9f76020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9ef9f761b0"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9f76340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9ef9f764d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9ef9f76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9ef9f7c930" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9ef9f7c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9ef9f7ccb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9ef9f7ce40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9ef9f78020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b9ef9f70080" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9ef9f70080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9ef9f70400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b9ef9f6f020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b9ef9f6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9ef9f6f3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9ef9f6f530"/>
        <function-ref name="isState" scoped="" ref="0x2b9ef9f6f6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9ef9f6f850"/>
        <function-ref name="requestState" scoped="" ref="0x2b9ef9f6f9e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9ef9f6fb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9ef9f72400" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9ef9f72400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9f72780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9f72910"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9f72aa0"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9f72c30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9f72dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b9ef9f74020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b9ef9f74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9f743a0"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9f74530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b9ef9f74db0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b9ef9f74db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9ef9f73180"/>
        <function-ref name="write" scoped="" ref="0x2b9ef9f73310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef9f6fdf0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9ef9f6fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef9f6e1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef9f6e350"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef9f6e4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef9f6e670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef9f6e800"/>
        <function-ref name="get" scoped="" ref="0x2b9ef9f6e990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef9f6eb20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef9fc11b0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef9f6ecb0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef9f6ee40"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef9fc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9ef9f78810" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9ef9f78810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9ef9f78b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9ef9f78d20"/>
        <function-ref name="request" scoped="" ref="0x2b9ef9f77020"/>
        <function-ref name="granted" scoped="" ref="0x2b9ef9f771b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9ef9f77340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b9ef9fbb120" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b9ef9fbb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef9fbb4a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef9fbb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b9ef9f73ba0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b9ef9f73ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9ef9f72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa014770" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa014770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa014af0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa014c80"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa014e10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa011020"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa0111b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa011340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa010280" loc="66:/home/zdenial/tinyos/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa010280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa010600"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa010790"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa010920"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa010ab0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa010c40"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa010dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa00b020" loc="66:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa00b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa00b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa00bb70" loc="67:/home/zdenial/tinyos/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa00bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa00a020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa00a1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa00a340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa00a4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa00a660"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa00a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9efa28f020" loc="44:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa28f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa28f3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa28f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9efa04d8f0" loc="43:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9efa04d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9efa04dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa04ec40" loc="42:/home/zdenial/tinyos/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa04ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa04d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa04d1b0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa04d340"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa04d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa04d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efb212af0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb212af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efb212e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb211030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9efb20f440" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9efb20f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb20f7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb20f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b9efb20fbe0" loc="89:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efb20fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9efb20e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9efb2112c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9efb2112c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9efb211640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efb214e70" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efb214e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb212220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efb2123b0"/>
        <function-ref name="request" scoped="" ref="0x2b9efb212540"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb2126d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb212860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9efb2118d0" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efb2118d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9efb211c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9efb211de0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9efb20f020"/>
        <function-ref name="write" scoped="" ref="0x2b9efb20f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9efa03a6b0" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa03a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efa03aa30"/>
        <function-ref name="configure" scoped="" ref="0x2b9efa03abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9efa038850" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa038850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa038bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa038d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b9efa036a40" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efa036a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9efa036dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9efa039020" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9efa039020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9efa0393a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9efa037690" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9efa037690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa037a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa037ba0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa037d30"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa036020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa0361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa03b430" loc="73:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa03b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa03b7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa03b940"/>
        <function-ref name="request" scoped="" ref="0x2b9efa03bad0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa03bc60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa03bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9efa0396a0" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efa0396a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9efa039a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9efa039bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9efa039d40"/>
        <function-ref name="write" scoped="" ref="0x2b9efa038020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9efa0342a0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9efa0342a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa034620"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa0347b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b9efa094250" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa094250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efa0945f0"/>
        <function-ref name="configure" scoped="" ref="0x2b9efa094780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9efa093c50" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b9efa093c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa092020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa0921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b9efa0913e0" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b9efa0913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b9efa091780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9efa094a10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b9efa094a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9efa094d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b9efa091a50" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9efa091a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9efa091dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9efa090020"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9efa0901b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9efa090340"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9efa0904d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9efa090660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9efa0907f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9efa090980"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9efa090b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9efa090ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9efa090e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9efa08f020"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9efa08f1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9efa08f440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9efa08f5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9efa08f760"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9efa08f8f0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9efa08fa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9efa08fc10"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9efa08fda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9efa08e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9efa08e1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9efa08e340"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9efa08e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efa08e660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9efa08e9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9efa08eb80"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9efa08ed10"/>
        <function-ref name="tx" scoped="" ref="0x2b9efa08d020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9efa08d1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9efa08d340"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9efa08d4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9efa08d660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9efa08d7f0"/>
        <function-ref name="rx" scoped="" ref="0x2b9efa08d980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9efa08db10"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9efa08dca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9efa08de30"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9efa08c020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9efa08c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efa08cc20" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efa08cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efa08a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efa08a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efa08a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efa08a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efa08a660"/>
        <function-ref name="get" scoped="" ref="0x2b9efa08a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efa08a980"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efa089020"/>
        <function-ref name="set" scoped="" ref="0x2b9efa08aca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efa08ab10"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efa08ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b9efa0925b0" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b9efa0925b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa092950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa092ae0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa092c70"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa092e00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa091020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa095470" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa095470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa095810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa0959a0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa095b30"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa095cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa095e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9efa093060" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9efa093060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9efa0933e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9efa093570"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9efa093700"/>
        <function-ref name="write" scoped="" ref="0x2b9efa093890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b9efa08c480" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b9efa08c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa08c800"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa08c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b9efa0892f0" loc="102:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b9efa0892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa089670"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa089800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b9efa0d95e0" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9efa0d95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efa0d9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9efa07dd10" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efa07dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa0d90e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa0d9270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9efa081020" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efa081020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9efa0813a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9efa081530"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9efa0816c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9efa081850"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9efa0819e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9efa081b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9efa081d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9efa080020"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9efa0801b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9efa080340"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9efa0804d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9efa080660"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9efa0807f0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9efa080a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9efa080c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9efa080da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9efa07f020"/>
        <function-ref name="isUart" scoped="" ref="0x2b9efa07f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9efa07f340"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9efa07f4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9efa07f660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9efa07f7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9efa07f980"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9efa07fb10"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efa07fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9efa07e220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9efa07e3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9efa07e540"/>
        <function-ref name="tx" scoped="" ref="0x2b9efa07e6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9efa07e860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9efa07e9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9efa07eb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9efa07ed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9efa07d020"/>
        <function-ref name="rx" scoped="" ref="0x2b9efa07d1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9efa07d340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9efa07d4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9efa07d660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9efa07d7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9efa07d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b9efa0fdb20" loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b9efa0fdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa0fc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa0fc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa0fc340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa0fc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa0fc660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa0fc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa0fc980"/>
        <function-ref name="get" scoped="" ref="0x2b9efa0fcb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa0fcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa0fce30"/>
        <function-ref name="set" scoped="" ref="0x2b9efa0fb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa0fb1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa0fb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa0fb5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa0fb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9efa0d1780" loc="76:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9efa0d1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa0d1b00"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa0d1c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b9efa0fbb20" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b9efa0fbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa0fa020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa0fa1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa0fa340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa0fa4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa0fa660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa0fa7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa0fa980"/>
        <function-ref name="get" scoped="" ref="0x2b9efa0fab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa0faca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa0fae30"/>
        <function-ref name="set" scoped="" ref="0x2b9efa0f9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa0f91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa0f9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa0f95d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa0f9760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b9efa0f9b20" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b9efa0f9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa0f8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa0f81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa0f8340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa0f84d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa0f8660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa0f87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa0f8980"/>
        <function-ref name="get" scoped="" ref="0x2b9efa0f8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa0f8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa0f8e30"/>
        <function-ref name="set" scoped="" ref="0x2b9efa0f7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa0f71b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa0f7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa0f75d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa0f7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b9efa0d8c70" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b9efa0d8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9efa0d5020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9efa0d51b0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9efa0d5340"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9efa0d54d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9efa0d5660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9efa0d57f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9efa0d5980"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9efa0d5b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9efa0d5ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9efa0d5e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9efa0d4020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9efa0d41b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9efa0d4340"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9efa0d45d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9efa0d4760"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9efa0d48f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9efa0d4a80"/>
        <function-ref name="isUart" scoped="" ref="0x2b9efa0d4c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9efa0d4da0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9efa0d3020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9efa0d31b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9efa0d3340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9efa0d34d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9efa0d3660"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efa0d37f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9efa0d3b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9efa0d3d10"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9efa0d2020"/>
        <function-ref name="tx" scoped="" ref="0x2b9efa0d21b0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9efa0d2340"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9efa0d24d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9efa0d2660"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9efa0d27f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9efa0d2980"/>
        <function-ref name="rx" scoped="" ref="0x2b9efa0d2b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9efa0d2ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9efa0d2e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9efa0d1020"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9efa0d11b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9efa0d1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b9efa106d10" loc="79:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b9efa106d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9efa0cf0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9efa0cf270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9efa0cf400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9efa0cf590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9efa0cf720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9efa0cf8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9efa0cfa40"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9efa0cfbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efa0cfd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9efa0ce020"/>
        <function-ref name="getData" scoped="" ref="0x2b9efa0ce1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9efa0ce340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9efa0ce4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9efa0ce760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9efa0ce8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b9efa0cea80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9efa0cec10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9efa0ceda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9efa105020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9efa1051b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9efa105340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9efa1054d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9efa105660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9efa1057f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9efa105980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9efa105d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9efa104020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9efa1041b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9efa104340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9efa1044d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9efa104660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9efa1047f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9efa104980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9efa104b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9efa104ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9efa104e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9efa103020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9efa1031b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9efa103340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9efa1034d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9efa103660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9efa1037f0"/>
        <function-ref name="setData" scoped="" ref="0x2b9efa103980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9efa103b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9efa103ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9efa103e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9efa102020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9efa1021b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9efa102340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9efa1028d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9efa102a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9efa102bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9efa102d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9efa101020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9efa1011b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9efa101340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9efa1014d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9efa101660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9efa1017f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b9efa0ffb20" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b9efa0ffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa0fe020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa0fe1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa0fe340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa0fe4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa0fe660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa0fe7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa0fe980"/>
        <function-ref name="get" scoped="" ref="0x2b9efa0feb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa0feca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa0fee30"/>
        <function-ref name="set" scoped="" ref="0x2b9efa0fd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa0fd1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa0fd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa0fd5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa0fd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9efa0d0150" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa0d0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efa0d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b9efa101bb0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b9efa101bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa100020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa1001b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa100340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa1004d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa100660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa1007f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa100980"/>
        <function-ref name="get" scoped="" ref="0x2b9efa100b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa100ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa100e30"/>
        <function-ref name="set" scoped="" ref="0x2b9efa0ff020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa0ff1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa0ff340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa0ff5d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa0ff760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efb2075d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb2075d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efb207950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb207ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b9efb2017c0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b9efb2017c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efb201b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9efb1faa80" loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb1faa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efb1fae00"/>
        <function-ref name="configure" scoped="" ref="0x2b9efb1f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b9efb201dd0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9efb201dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9efb200180"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9efb200310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9efb2004a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9efb200630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9efb2007c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9efb200950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9efb200ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9efb200c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb200e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9efb1ff020"/>
        <function-ref name="getData" scoped="" ref="0x2b9efb1ff1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9efb1ff340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9efb1ff4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9efb1ff760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9efb1ff8f0"/>
        <function-ref name="getIV" scoped="" ref="0x2b9efb1ffa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9efb1ffc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9efb1ffda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9efb1fe020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9efb1fe1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9efb1fe340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9efb1fe4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9efb1fe660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9efb1fe7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9efb1fe980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9efb1fed10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9efb1fd020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9efb1fd1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9efb1fd340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9efb1fd4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9efb1fd660"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9efb1fd7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9efb1fd980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9efb1fdb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9efb1fdca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9efb1fde30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9efb1fc020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9efb1fc1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9efb1fc340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9efb1fc4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9efb1fc660"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9efb1fc7f0"/>
        <function-ref name="setData" scoped="" ref="0x2b9efb1fc980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9efb1fcb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9efb1fcca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9efb1fce30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9efb1fb020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9efb1fb1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9efb1fb340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9efb1fb8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9efb1fba60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9efb1fbbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9efb1fbd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9efb1fa020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9efb1fa1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9efb1fa340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9efb1fa4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9efb1fa660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9efb1fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b9efb201020" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b9efb201020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efb2013a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efb201530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efb208860" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efb208860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb208be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efb208d70"/>
        <function-ref name="request" scoped="" ref="0x2b9efb207020"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb2071b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb207340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b9efb2065a0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b9efb2065a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9efb206920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9efb206ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9efb206c40"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9efb206dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9efb205020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9efb2051b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9efb205340"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9efb2054d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9efb205660"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9efb2057f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9efb205980"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9efb205b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9efb205ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9efb204020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9efb2041b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9efb204340"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9efb2044d0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9efb204660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9efb2047f0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9efb204980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9efb204b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9efb204ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9efb204e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9efb203020"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb2031b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9efb203540"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9efb2036d0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9efb203860"/>
        <function-ref name="tx" scoped="" ref="0x2b9efb2039f0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9efb203b80"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9efb203d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9efb202020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9efb2021b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9efb202340"/>
        <function-ref name="rx" scoped="" ref="0x2b9efb2024d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9efb202660"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9efb2027f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9efb202980"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9efb202b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9efb202ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9efb207d70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb207d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efb206180"/>
        <function-ref name="userId" scoped="" ref="0x2b9efb206310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efa1782c0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efa1782c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efa178640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efa1787d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9efa1768a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa1768a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efa176c20"/>
        <function-ref name="configure" scoped="" ref="0x2b9efa176db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9efa17b4d0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9efa17b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa17b850"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa17b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa179020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa179020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa1793a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa179530"/>
        <function-ref name="request" scoped="" ref="0x2b9efa1796c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa179850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa1799e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9efa17a3f0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa17a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efa17a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9efa178ad0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa178ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efa178e50"/>
        <function-ref name="userId" scoped="" ref="0x2b9efa176020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9efa173e50" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa173e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efa172210"/>
        <function-ref name="userId" scoped="" ref="0x2b9efa1723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b9efa174060" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b9efa174060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa174400"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa174590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b9efa173840" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b9efa173840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efa173bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b9efa174990" loc="40:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b9efa174990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efa174d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b9efa173060" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b9efa173060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b9efa1733e0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9efa173570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efa16e850" loc="92:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efa16e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efa16ebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efa16ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9efa16c570" loc="96:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efa16c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efa16c910"/>
        <function-ref name="configure" scoped="" ref="0x2b9efa16caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9efa16d020" loc="93:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efa16d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa16d3a0"/>
        <function-ref name="requested" scoped="" ref="0x2b9efa16d530"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa16d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa16d850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efa16d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa170a80" loc="91:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa170a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa170e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa16e020"/>
        <function-ref name="request" scoped="" ref="0x2b9efa16e1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa16e340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa16e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9efa16dc30" loc="94:/home/zdenial/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efa16dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efa16c020"/>
        <function-ref name="userId" scoped="" ref="0x2b9efa16c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb23ea40" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb23ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb23edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9efb23d0a0" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9efb23d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9efb23d420"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9efb23d5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9efb23d740"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9efb23d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9efb23a020" loc="55:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9efb23a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9efb23a3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb23a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9efb2dfcf0" loc="60:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9efb2dfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9efb2de0e0"/>
        <function-ref name="configure" scoped="" ref="0x2b9efb2de270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9efb2de500" loc="61:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b9efb2de500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9efb2de880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9efb2dea10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9efb2deba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9efb2ded30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9efb23a7a0" loc="56:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9efb23a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb23ab20"/>
        <function-ref name="requested" scoped="" ref="0x2b9efb23acb0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb23ae40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb2df020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9efb2df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efb2dd020" loc="62:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efb2dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efb2dd3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efb2dd530"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efb2dd6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efb2dd850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efb2dd9e0"/>
        <function-ref name="get" scoped="" ref="0x2b9efb2ddb70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efb2ddd00"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efb2dc4d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efb2dc1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efb2dc020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efb2dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efb23b270" loc="54:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efb23b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efb23b610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efb23b7a0"/>
        <function-ref name="request" scoped="" ref="0x2b9efb23b930"/>
        <function-ref name="granted" scoped="" ref="0x2b9efb23bac0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efb23bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9efb2df400" loc="57:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9efb2df400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9efb2df780"/>
        <function-ref name="userId" scoped="" ref="0x2b9efb2df910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9efb2dc7a0" loc="75:/home/zdenial/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b9efb2dc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efb2dcb20"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efb2dccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b9efa1c6540" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b9efa1c6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9efa1c68c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9efa1c6a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9efa1c6be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9efa1c6d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9efa1c3020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9efa1c31b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9efa1c3340"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9efa1c34d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efa1c3660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9efa1c37f0"/>
        <function-ref name="getData" scoped="" ref="0x2b9efa1c3980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9efa1c3b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9efa1c3ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9efa1c2020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9efa1c21b0"/>
        <function-ref name="getIV" scoped="" ref="0x2b9efa1c2340"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9efa1c24d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9efa1c2660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9efa1c27f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9efa1c2980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9efa1c2b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9efa1c2ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9efa1c2e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9efa1c1020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9efa1c11b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9efa1c1540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9efa1c16d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9efa1c1860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9efa1c19f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9efa1c1b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9efa1c1d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9efa1c0020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9efa1c01b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9efa1c0340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9efa1c04d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9efa1c0660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9efa1c07f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9efa1c0980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9efa1c0b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9efa1c0ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9efa1c0e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9efa1bf020"/>
        <function-ref name="setData" scoped="" ref="0x2b9efa1bf1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9efa1bf340"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9efa1bf4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9efa1bf660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9efa1bf7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9efa1bf980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9efa1bfb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9efa1be420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9efa1be5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9efa1be740"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9efa1be8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9efa1bea60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9efa1bebf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9efa1bed80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9efa1bd020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9efa1bd1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9efa1bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b9efa1b3250" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b9efa1b3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9efa1b35d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b9efa1b3760"/>
        <function-ref name="setUctl" scoped="" ref="0x2b9efa1b38f0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b9efa1b3a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b9efa1b3c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9efa1b3da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b9efa1b2020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b9efa1b21b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b9efa1b2340"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b9efa1b24d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b9efa1b2660"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b9efa1b27f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b9efa1b2980"/>
        <function-ref name="getUbr" scoped="" ref="0x2b9efa1b2c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9efa1b2da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b9efa1b1020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b9efa1b11b0"/>
        <function-ref name="isUart" scoped="" ref="0x2b9efa1b1340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9efa1b14d0"/>
        <function-ref name="isSpi" scoped="" ref="0x2b9efa1b1660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b9efa1b17f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9efa1b1980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b9efa1b1b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b9efa1b1ca0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efa1b1e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b9efa1b0220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b9efa1b03b0"/>
        <function-ref name="setUbr" scoped="" ref="0x2b9efa1b0540"/>
        <function-ref name="tx" scoped="" ref="0x2b9efa1b06d0"/>
        <function-ref name="getUctl" scoped="" ref="0x2b9efa1b0860"/>
        <function-ref name="disableUart" scoped="" ref="0x2b9efa1b09f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9efa1b0b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b9efa1b0d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b9efa1af020"/>
        <function-ref name="rx" scoped="" ref="0x2b9efa1af1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b9efa1af340"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b9efa1af4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b9efa1af660"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b9efa1af7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b9efa1af980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b9efa1adcb0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b9efa1adcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa1ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa1ac230"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa1ac3c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa1ac550"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa1ac6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa1ac870"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa1aca00"/>
        <function-ref name="get" scoped="" ref="0x2b9efa1acb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa1acd20"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa1ab020"/>
        <function-ref name="set" scoped="" ref="0x2b9efa1ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa1ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa1ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa1ab760"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa1ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b9efa1ba430" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b9efa1ba430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b9efa1ba7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b9efa1ba940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b9efa1baad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b9efa1bac60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b9efa1badf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b9efa1b9020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b9efa1b91b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b9efa1b9340"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efa1b94d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b9efa1b9660"/>
        <function-ref name="getData" scoped="" ref="0x2b9efa1b97f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b9efa1b9980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b9efa1b9b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b9efa1b9da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b9efa1b8020"/>
        <function-ref name="getIV" scoped="" ref="0x2b9efa1b81b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b9efa1b8340"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b9efa1b84d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b9efa1b8660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b9efa1b87f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b9efa1b8980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b9efa1b8b10"/>
        <function-ref name="isI2C" scoped="" ref="0x2b9efa1b8ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b9efa1b8e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b9efa1b7020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b9efa1b73b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b9efa1b7540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b9efa1b76d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b9efa1b7860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b9efa1b79f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b9efa1b7b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b9efa1b7d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b9efa1b6020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b9efa1b61b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b9efa1b6340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b9efa1b64d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b9efa1b6660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b9efa1b67f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b9efa1b6980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b9efa1b6b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b9efa1b6ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b9efa1b6e30"/>
        <function-ref name="setData" scoped="" ref="0x2b9efa1b5020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b9efa1b51b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b9efa1b5340"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b9efa1b54d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b9efa1b5660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b9efa1b57f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b9efa1b5980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b9efa1b4020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b9efa1b41b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b9efa1b4340"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b9efa1b44d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b9efa1b4660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b9efa1b47f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b9efa1b4980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b9efa1b4b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b9efa1b4ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b9efa1b4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b9efa1afd40" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b9efa1afd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa1ae0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa1ae270"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa1ae400"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa1ae590"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa1ae720"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa1ae8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa1aea40"/>
        <function-ref name="get" scoped="" ref="0x2b9efa1aebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa1aed60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa1ad020"/>
        <function-ref name="set" scoped="" ref="0x2b9efa1ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa1ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa1ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa1ad760"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa1ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9efa2f9c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f8210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9efa29eda0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9efa29eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9efa2fcb50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2fcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2fb020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9efa2f6670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa2f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f69f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9efa2efe50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9efa2efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ee210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9efa2f6e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9efa2f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f5210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9efa2e32f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa2e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e3670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9efa2e52f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa2e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e5670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9efa29b120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa29b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9efa2eb670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9efa2eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2eb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9efa2e62f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa2e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e6670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9efa2fbc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9efa2fbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2fa020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9efa2fac60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f9020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9efa2f1670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa2f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f19f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9efa2f3e50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9efa2f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f2210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9efa2f5670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa2f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f59f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9efa29f760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa29f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9efa29fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9efa29fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9efa29fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9efa29aaa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa29aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9efa299120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9efa299120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2995a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9efa2eaa70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa2eaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2eadf0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9efa299870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa299870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa299bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9efa2e6ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa2e6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e6e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9efa29bdc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa29bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9efa2ece50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9efa2ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2eb210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9efa2fa480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa2fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2fa800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2fa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9efa2fb480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2fb800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2fb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9efa29e750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa29e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9efa2ede50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa2ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ec210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9efa2ee670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9efa2ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ee9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2eeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9efa2ec670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa2ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ec9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9efa2e4ad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa2e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e4e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9efa2e5ad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa2e5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e5e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9efa2f2670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9efa2f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f29f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9efa2eee50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9efa2eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ed210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9efa2e7ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa2e7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e7e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9efa2f4670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa2f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f49f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9efa2e3ad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa2e3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa2e3e50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa2e1020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa2e1340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa2e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9efa29e100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa29e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9efa2fc370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9efa2fc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2fc6f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2fc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9efa2f9480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa2f9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f9800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9efa2f1e50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa2f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ef210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9efa2f5e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa2f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f4210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9efa2ef670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa2ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ef9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9efa2f8670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f89f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9efa29c450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9efa29c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9efa2f8e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa2f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f6210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa2a0a80" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa2a0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa2a0e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa29f020"/>
        <function-ref name="request" scoped="" ref="0x2b9efa29f1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa29f340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa29f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9efa298020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa298020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9efa298cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9efa298cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2fc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9efa2e72f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9efa2e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e7670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9efa2e8ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa2e8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e8e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9efa29a450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa29a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9efa2e82f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa2e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e8670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9efa2e42f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9efa2e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2e4670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9efa2f2e50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa2f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f1210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9efa2ed670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9efa2ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ed9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9efa29caa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9efa29caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9efa29b770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa29b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa29baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9efa2f4e50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa2f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f3210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9efa298670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9efa298670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2989f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9efa2f3670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9efa2f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2f39f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9efa2ebe50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9efa2ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ea610"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ea7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9efa2e17a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa2e17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa2e1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa2e1cb0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2e1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa2e0020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa2e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9efa2ccc60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa2ccc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cb210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9efa2d7da0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9efa2d7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9efa2d0b50" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa2d0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cf020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9efa2ca670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa2ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ca9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9efa329e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9efa329e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa328210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9efa2cae50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9efa2cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32f210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9efa31c2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa31c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa31c670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9efa31e2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa31e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa31e670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9efa2d5120" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa2d5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9efa324670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9efa324670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3249f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa324b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9efa3202f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa3202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa320670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa320800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9efa2cfc60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9efa2cfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cd020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9efa2cdc60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa2cdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cc020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9efa32a670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa32a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9efa32ce50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9efa32ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32b210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9efa32f670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa32f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9efa2d8760" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa2d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9efa2d8ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9efa2d8c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9efa2d8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9efa2d3aa0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa2d3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9efa2d2120" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9efa2d2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9efa323a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa323a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa323df0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa322020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9efa2d2870" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa2d2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9efa320ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa320ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa320e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9efa2d5dc0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa2d5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9efa325e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9efa325e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa324210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9efa2cd480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa2cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cd800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9efa2cf480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa2cf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cf800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9efa2d7750" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa2d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9efa326e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa326e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa325210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9efa328670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9efa328670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3289f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa328b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9efa325670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa325670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3259f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa325b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9efa31dad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa31dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa31de50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9efa31ead0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa31ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa31ee50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9efa32b670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9efa32b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9efa328e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9efa328e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa326210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9efa321ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa321ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa321e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa320020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9efa32e670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa32e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9efa31cad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa31cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa31ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa31b020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa31b340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa31b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9efa2d7100" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa2d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9efa2d0370" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9efa2d0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2d06f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2d0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9efa2cc480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa2cc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cc800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9efa32ae50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa32ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa329210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9efa32fe50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa32fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32e210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9efa329670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa329670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3299f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa329b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9efa2cb670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa2cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2cb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9efa2d6450" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9efa2d6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9efa2cbe50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa2cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa2ca210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa2ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa2d99e0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa2d99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa2d9d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa2d8020"/>
        <function-ref name="request" scoped="" ref="0x2b9efa2d81b0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa2d8340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa2d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9efa2d1020" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa2d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9efa2d1cc0" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9efa2d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9efa3212f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9efa3212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa321670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa321800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9efa322ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa322ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa322e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa321020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9efa2d3450" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa2d3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9efa3222f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa3222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa322670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa322800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9efa31d2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9efa31d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa31d670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9efa32be50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa32be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32a210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9efa326670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9efa326670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3269f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa326b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9efa2d6aa0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9efa2d6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9efa2d5770" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa2d5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9efa32ee50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa32ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32c210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9efa2d1670" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9efa2d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa2d19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9efa32c670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9efa32c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa32c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa32cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9efa324e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9efa324e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa323610"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3237a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9efa31b7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa31b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa31bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa31bcb0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa31be40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa31a020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa31a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b9efa313b30" loc="54:/home/zdenial/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9efa313b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b9efa310020"/>
        <function-ref name="changed" scoped="" ref="0x2b9efa3101b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b9efa310340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b9efa3104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b9efa312d30" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9efa312d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b9efa3610e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b9efa35d310" loc="5:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b9efa35d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b9efa35d690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b9efa35a8c0" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b9efa35a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa35ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b9efa34f020" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b9efa34f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa34f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b9efa346cb0" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b9efa346cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3490a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa349230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b9efa3495b0" loc="15:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b9efa3495b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efa349930"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa349ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b9efa34a210" loc="11:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b9efa34a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa34a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b9efa335020" loc="8:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b9efa335020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3353a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa335530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b9efa3358c0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b9efa3358c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa335c40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa335dd0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa334020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa3341b0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa334340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3344d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa334660"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b9efa394b40" loc="15:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b9efa394b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b9efa396970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b9efa333490" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b9efa333490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa333810"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3339a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b9efa333d30" loc="14:/home/zdenial/tinyos/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b9efa333d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa3300e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa330270"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa330400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa330590"/>
        <function-ref name="get" scoped="" ref="0x2b9efa330720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3308b0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa330a40"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa330bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b9efa374020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b9efa374020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b9efa374e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b9efa371d20" loc="54:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b9efa371d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b9efa3cbb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efa3ca260" loc="55:/home/zdenial/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa3ca260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa3c9090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa3c9a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa3c9550"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa3c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b9efa3c6890" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b9efa3c6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa3c36e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa3c2090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa3c3ba0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa3c2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9efa3bd190" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efa3bd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa3bd510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efa3bd6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efa3bd830"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3bd9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efa3bdb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa3bdce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efa3bde70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa3bc030"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa3bc1c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efa3bc350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efa3bc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9efa3c0060" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa3c0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9165ea0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9ef9163240"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa3c0e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa3be820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa3be360"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa3bece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b9efa3365a0" loc="3:/home/zdenial/tinyos/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b9efa3365a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa336920"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa336ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa336c40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa336dd0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3b81b0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3b8340"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b9efa3b6c50" loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b9efa3b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa3b5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa3b51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b9efa3b5340"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa3b54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa3b5660"/>
        <function-ref name="getResistor" scoped="" ref="0x2b9efa3b57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3b5980"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3b5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b9efa3b5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b9efa3b5e30"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3b4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b9efa3b41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b9efa3b4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b9efa3b45d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3b4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b9efa3b79e0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b9efa3b79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa3b7d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa3b6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa3b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa3b6340"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3b6660"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3b67f0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9efa3b9a20" loc="14:/home/zdenial/tinyos/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9efa3b9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efa3b9da0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa3ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9efa39fcb0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa39fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9efa39e0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9efa39e230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9efa39e3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9efa39e550"/>
        <function-ref name="setCca" scoped="" ref="0x2b9efa39e6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9efa39e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b9efa39b9f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9efa39b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9efa39bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b9efa39f020" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b9efa39f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa39f3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa39f530"/>
        <function-ref name="modify" scoped="" ref="0x2b9efa39f6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa39f850"/>
        <function-ref name="resend" scoped="" ref="0x2b9efa39f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9efa3a26d0" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9efa3a26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efa3a2a50"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa3a2be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b9efa39d190" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b9efa39d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9efa39d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9efa404650" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa404650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9efa4049d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9efa404b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9efa404cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9efa404e80"/>
        <function-ref name="setCca" scoped="" ref="0x2b9efa403030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9efa4031c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b9efa3fb7c0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9efa3fb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa3fad50"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa3f94c0"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa3fa620"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3f9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b9efa3e3020" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa3e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e33a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b9efa3e3890" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa3e3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e3c10"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b9efa4035e0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b9efa4035e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9efa403960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b9efa3e6530" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa3e6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa3e68b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b9efa3f6880" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b9efa3f6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b9efa3f6c00"/>
        <function-ref name="disable" scoped="" ref="0x2b9efa3f6d90"/>
        <function-ref name="captured" scoped="" ref="0x2b9efa3f4020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b9efa3f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b9efa4027f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b9efa4027f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa3fe090"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa3ff090"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efa3ffa10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa3ff550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efa3fe550"/>
        <function-ref name="start" scoped="" ref="0x2b9efa4006a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa400bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9efa3fea00" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa3fea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9efa3fed80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9efa3fc020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9efa3fc1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9efa3fc340"/>
        <function-ref name="getPower" scoped="" ref="0x2b9efa3fc4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9efa3fc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b9efa3e8550" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa3e8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e88d0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e8a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b9efa3e8e00" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa3e8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e71c0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e7350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b9efa3ddd40" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa3ddd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa3e00e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b9efa3e0270"/>
        <function-ref name="sfd" scoped="" ref="0x2b9efa3e0400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa4058c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa4058c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa405c40"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa405dd0"/>
        <function-ref name="modify" scoped="" ref="0x2b9efa404020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa4041b0"/>
        <function-ref name="resend" scoped="" ref="0x2b9efa404340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b9efa3ebd10" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa3ebd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9efa3ea0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9efa3ea270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9efa3ea400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b9efa3e6c60" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa3e6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa3e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b9efa3ee820" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9efa3ee820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa3eeba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa3eed30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa3ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa3ed1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3ed4d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3ed660"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa398820" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa398820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa398ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa3fc9a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa3fc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa3fcd20"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa3fb020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa3fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b9efa3efb30" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa3efb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa3f6020"/>
        <function-ref name="isSet" scoped="" ref="0x2b9efa3f61b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa3f6340"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b9efa3e53e0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa3e53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e5960"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9efa3eb020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9efa3eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa3eb3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa3eb530"/>
        <function-ref name="request" scoped="" ref="0x2b9efa3eb6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa3eb850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa3eb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b9efa3f4500" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b9efa3f4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa3f4980"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa3f4b10"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa3f4ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa3f4e30"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3ee1b0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3ee340"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b9efa3e2130" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa3e2130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e24b0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e2640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b9efa3e29c0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa3e29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e2d40"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b9efa3e76d0" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa3e76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa3e7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b9efa3edb40" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b9efa3edb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa3ec020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa3ec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa3ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa3ec4d0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3ec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa3ec7f0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3ec980"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa3ecb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efa3e06c0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efa3e06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efa3e0a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efa3e0bd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efa3e0d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efa3df020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efa3df1b0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa3df340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efa3df4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efa3dfb10"/>
        <function-ref name="set" scoped="" ref="0x2b9efa3df660"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efa3df7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efa3df980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b9efa3e45e0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa3e45e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa3e4960"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3e4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9efa405020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9efa405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efa4053a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa405530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b9efa3ea780" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa3ea780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa3eab00"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa3eac90"/>
        <function-ref name="write" scoped="" ref="0x2b9efa3eae20"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa3e8020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa3e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b9efa3e7de0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9efa3e7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa3e6180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b9efa3e5e80" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9efa3e5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa3e4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b9efa403d70" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b9efa403d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9efa402180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9efa483c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa483c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa482210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9efa48d020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9efa48d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9efa487c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa487c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa486020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9efa481670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa481670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4819f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa481b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9efa47ae50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9efa47ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa479210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9efa481e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9efa481e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa480210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9efa4da2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa4da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4da670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4da800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9efa4dc2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa4dc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4dc670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4dc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9efa48c370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa48c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9efa475670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9efa475670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4759f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa475b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9efa4712f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa4712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa471670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa471800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9efa486c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9efa486c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa484020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9efa484c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa484c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa483020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9efa47b670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa47b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9efa47de50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9efa47de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47c210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9efa480670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa480670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4809f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa480b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9efa48f8f0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa48f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9efa48fc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9efa48fe00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9efa48e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9efa48bd00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa48bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9efa489370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9efa489370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9efa474a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa474a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa474df0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa473020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9efa489ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa489ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa489e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9efa471ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa471ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa471e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9efa48b060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa48b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9efa476e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9efa476e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa475210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9efa484480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa484480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa484800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa484990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9efa486480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa486480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa486800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa486990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9efa48e940" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa48e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9efa478e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa478e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa476210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9efa479670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9efa479670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4799f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa479b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9efa476670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa476670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4769f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa476b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9efa4dbad0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa4dbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4dbe50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9efa4dcad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa4dcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4dce50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9efa47c670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9efa47c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9efa479e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9efa479e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa478210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9efa472ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa472ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa472e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9efa47f670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa47f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9efa4daad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa4daad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa4dae50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa4d9020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4d91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa4d9340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa4d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9efa48e2f0" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa48e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9efa487490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9efa487490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa487810"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4879a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9efa483480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa483480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa483800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa483990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9efa47be50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa47be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47a210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9efa480e50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa480e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47f210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9efa47a670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa47a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9efa482670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa482670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4829f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa482b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9efa48d670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9efa48d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9efa482e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa482e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa481210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa490c30" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa490c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa48f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa48f1b0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa48f340"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa48f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa48f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9efa488160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa488160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9efa488e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9efa488e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4871c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9efa4722f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9efa4722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa472670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa472800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9efa473ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa473ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa473e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa472020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9efa48b6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa48b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9efa4732f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa4732f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa473670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa473800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9efa4db2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9efa4db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4db670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4db800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9efa47ce50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa47ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47b210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9efa478670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9efa478670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4789f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa478b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9efa48dcc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9efa48dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9efa48c9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa48c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa48cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9efa47fe50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa47fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47d210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9efa4887b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9efa4887b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa488b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9efa47d670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9efa47d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa47d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa47db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9efa475e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9efa475e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa474610"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4747a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9efa4d97a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa4d97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa4d9b20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa4d9cb0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4d9e40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa4d8020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa4d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b9efa4cddf0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa4cddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa4ca1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b9efa4ca350"/>
        <function-ref name="sfd" scoped="" ref="0x2b9efa4ca4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa4ca7c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa4ca7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa4cab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b9efa4c9020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b9efa4c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9efa4c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9efa4cd5c0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9efa4cd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efa4cd940"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa4cdad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b9efa4c1380" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b9efa4c1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa4c1700"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa4c1890"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa4c1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa4c1bb0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa4c1d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa4c0020"/>
        <function-ref name="set" scoped="" ref="0x2b9efa4c01b0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa4c0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b9efa4bab90" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9efa4bab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9efa4b9020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9efa4b91b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9efa4b9340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9efa4b94d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9efa4b9660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9efa4b97f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9efa4b9980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9efa4b9b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9efa4b9ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9efa4b9e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9efa4b8020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9efa4b81b0"/>
        <function-ref name="sync" scoped="" ref="0x2b9efa4b8340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9efa4b85d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9efa4b8760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b9efa5119d0" loc="148:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b9efa5119d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa511d50"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa510020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b9efa4b8d70" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b9efa4b8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa4b5330"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa4b5a60"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa4b7ba0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa4b4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b9efa4c06b0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b9efa4c06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa4c0a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa4c0bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa4c0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa4bf020"/>
        <function-ref name="get" scoped="" ref="0x2b9efa4bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa4bf340"/>
        <function-ref name="set" scoped="" ref="0x2b9efa4bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa4bf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b9efa4b3cb0" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa4b3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4b20a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4b2230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b9efa4b2590" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa4b2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4b2910"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4b2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b9efa4b16d0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa4b16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4b1a50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4b1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9efa4bb330" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa4bb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9efa4bb6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9efa4bb840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9efa4bb9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9efa4bbb60"/>
        <function-ref name="getPower" scoped="" ref="0x2b9efa4bbcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9efa4bbe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b9efa4c4550" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b9efa4c4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa4c48d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b9efa4c4a60"/>
        <function-ref name="sfd" scoped="" ref="0x2b9efa4c4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b9efa4bc3a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9efa4bc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4bc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b9efa4c2020" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b9efa4c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9efa4c23a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9efa4c2530"/>
        <function-ref name="toggle" scoped="" ref="0x2b9efa4c26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9efa4c2850"/>
        <function-ref name="get" scoped="" ref="0x2b9efa4c29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9efa4c2b70"/>
        <function-ref name="set" scoped="" ref="0x2b9efa4c2d00"/>
        <function-ref name="clr" scoped="" ref="0x2b9efa4c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b9efa4b0020" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa4b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4b03a0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4b0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa4c6620" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa4c6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa4c69a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa4ba1e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa4ba1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa4ba560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa4ba6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa4ba880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa4c3020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa4c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa4c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b9efa4be6e0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b9efa4be6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa4bea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa4bebf0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa4bed80"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa4bd020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa4bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b9efa4b2e00" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa4b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4b11c0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4b1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b9efa4bd530" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa4bd530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa4bd8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa4bda40"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4bdbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa4bdd60"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa4bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b9efa4b08b0" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa4b08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4b0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b9efa4c37c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b9efa4c37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b9efa4c3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efa4ae150" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efa4ae150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efa4ae4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efa4ae660"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efa4ae7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efa4ae980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efa4aeb10"/>
        <function-ref name="get" scoped="" ref="0x2b9efa4aeca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efa4aee30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efa4ad4d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa4ad020"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efa4ad1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efa4ad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b9efa4b33e0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa4b33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa4b3760"/>
        <function-ref name="write" scoped="" ref="0x2b9efa4b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b9efa4b4b10" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa4b4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b9efa4bfa50" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b9efa4bfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b9efa4bfdd0"/>
        <function-ref name="disable" scoped="" ref="0x2b9efa4be020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b9efa4be1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b9efa4be340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b9efa4bcad0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa4bcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa4bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b9efa4c6ca0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b9efa4c6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9efa4c40a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa4c4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9efa51fa70" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9efa51fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9efa51fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9efa523670" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa523670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9efa5239f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9efa523b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9efa523d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9efa520020"/>
        <function-ref name="getPower" scoped="" ref="0x2b9efa5201b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9efa520340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b9efa51e550" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa51e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa51db00"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa51b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa51d3d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa51b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b9efa51f0c0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa51f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa51f440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa51f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa51f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b9efa516480" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa516480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa516800"/>
        <function-ref name="isSet" scoped="" ref="0x2b9efa516990"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa516b20"/>
        <function-ref name="set" scoped="" ref="0x2b9efa516cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b9efa51a660" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa51a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa519ce0"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa517460"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa5195b0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa517b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efa5206e0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efa5206e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efa520a60"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efa520bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efa520d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b9efa580020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b9efa580020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b9efa5803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b9efa515d20" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa515d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9efa5820e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9efa582270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9efa582400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9efa582590"/>
        <function-ref name="getPower" scoped="" ref="0x2b9efa582720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9efa5828b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b9efa5774a0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efa5774a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa577820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa5779b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa577b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa577cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa577e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b9efa580a80" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa580a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa57d020"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa57d750"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa57f8d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa57de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b9efa581640" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa581640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa5819c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa581b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa581ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b9efa5788b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa5788b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa578c30"/>
        <function-ref name="isSet" scoped="" ref="0x2b9efa578dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa577020"/>
        <function-ref name="set" scoped="" ref="0x2b9efa5771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b9efa573820" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9efa573820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa5754c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b9efa575b80" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9efa575b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa5747d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b9efa57caf0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa57caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa5790d0"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa579800"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa57b970"/>
        <function-ref name="set" scoped="" ref="0x2b9efa578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efa582c50" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efa582c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efa581020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efa5811b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efa581340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9efa5924e0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9efa5924e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa589150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efa5897c0" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa5897c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa587620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa586020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa587ae0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa5864e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9efa5f2020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa5f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa5ee630"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa5f1a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa5f0920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa5f04a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa5ed020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa5eeab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa5f0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa5f2c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa5ee020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa5f1110"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa5f15e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9efa5ed610" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9efa5ed610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa5eb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa5f3130" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa5f3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa5f34b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efa5be870" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efa5be870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa62d090"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa62e090"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efa62ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa62e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efa62d550"/>
        <function-ref name="start" scoped="" ref="0x2b9efa5bd6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa5bdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa5be020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa5be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa5be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb3fa260" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb3fa260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb3f8b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb3f9a60"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb3f84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb3f8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb3f7020"/>
        <function-ref name="start" scoped="" ref="0x2b9efb3f9090"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb3f95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb3fb9d0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb3fb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb3fbd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9efb3e2a80" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb3e2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9efb3e2e00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9efb3e1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9efb3e11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9efb3e1340"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb3e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9efb3e4020" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb3e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb3e43a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb3e4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb3e46c0"/>
        <function-ref name="get" scoped="" ref="0x2b9efb3e4850"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb3e49e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb3e4b70"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb3e4d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb3e3020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb3e31b0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efb3e3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efb3e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9efb3e3760" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb3e3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9efb3e3ae0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9efb3e3c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb3e3e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9efb3e2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9efb3e21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb3e2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9efb3e24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9efb3e2660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9efb3e27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b9efb3d8760" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb3d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9efb3d8ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9efb3d8c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9efb3d8e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9efb3d7020"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb3d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9efb3dbdd0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb3dbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb3da180"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb3da310"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb3da4a0"/>
        <function-ref name="get" scoped="" ref="0x2b9efb3da630"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb3da7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb3da950"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb3daae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb3dac70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb3dae00"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efb3d9020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efb3d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb3dfbf0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb3dfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb3db4e0"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb3dc4e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb3dce60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb3dc9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb3db9a0"/>
        <function-ref name="start" scoped="" ref="0x2b9efb3dea80"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb3dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb3df360" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb3df360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb3df6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9efb3d9440" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb3d9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9efb3d97c0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9efb3d9950"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb3d9ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9efb3d9c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9efb3d9e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb3d8020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9efb3d81b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9efb3d8340"/>
        <function-ref name="setControl" scoped="" ref="0x2b9efb3d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9efa5ddb70" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa5ddb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa5da9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa5d9360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa5dae70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa5d9820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b9efa5d3b90" loc="63:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b9efa5d3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa5d19d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa5d04e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa5d0020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa5d09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9efa5d5610" loc="62:/home/zdenial/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa5d5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa5d45b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa5d3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa5d4a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa5d34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb3f45f0" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb3f45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb3f2e50"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb3f3e00"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb3f2800"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb3f2340"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb3f1340"/>
        <function-ref name="start" scoped="" ref="0x2b9efb3f3430"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb3f3940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b9efb3efd20" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b9efb3efd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb3eb670"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb3ec550"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb3eb020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb3eca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb3ebb30"/>
        <function-ref name="start" scoped="" ref="0x2b9efb3edb60"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb3ec090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efb3f19b0" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efb3f19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efb3f07e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb3ef1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb3f0ca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb3ef670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9efa5fb9c0" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b9efa5fb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa5fbd40"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa5fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9efa5ff850" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efa5ff850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa5fb090"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa5fc090"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efa5fca10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa5fc550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efa5fb550"/>
        <function-ref name="start" scoped="" ref="0x2b9efa5fd6a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa5fdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9efa6042f0" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9efa6042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa600870"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa603e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa601c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa601780"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa5ff1e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa600cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa601300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa603020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa600260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa6034f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa6039c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9efa691a00" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9efa691a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa691d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa68f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9efa696640" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b9efa696640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa692c40"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa6931e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa692020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa693ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa691590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa691110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa693660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa694390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa692630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa694860"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa694d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9efa69c150" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9efa69c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa697700"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa69ac30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa699a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa6995b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa696090"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa697ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa699110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa69cd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa6970d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa69a2a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa69a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9efa68d2b0" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9efa68d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa68c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efa68c690" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa68c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa68b5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa68a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa68ba70"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa68a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9efa6838c0" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9efa6838c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa66fcf0"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa671320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa66f0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa671c20"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa66e660"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa66e1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa6717a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa6724e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa66f6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa6729b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa672e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9efa67a2c0" loc="49:/home/zdenial/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b9efa67a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa676870"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa679e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa678c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa678780"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa6751e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa676cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa678300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa679020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa676260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa6794f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa6799c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b9efa6d3c60" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b9efa6d3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d2210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b9efa6dc020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b9efa6dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b9efa6d6c70" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b9efa6d6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d5020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b9efa6d0670" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b9efa6d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d09f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b9efa6c9e50" loc="86:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b9efa6c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c8210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b9efa6d0e50" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b9efa6d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cf210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b9efa6bd2f0" loc="108:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b9efa6bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6bd670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6bd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b9efa6bf2f0" loc="104:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b9efa6bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6bf670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6bf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b9efa6db370" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b9efa6db370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6db6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b9efa6c5670" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b9efa6c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c59f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b9efa6c02f0" loc="102:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b9efa6c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c0670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b9efa6d5c60" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b9efa6d5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d4020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b9efa6d4c60" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b9efa6d4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d3020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b9efa6cb670" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b9efa6cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b9efa6cde50" loc="79:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b9efa6cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cc210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b9efa6cf670" loc="74:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b9efa6cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cf9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b9efa66a970" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b9efa66a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b9efa66acf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b9efa66ae80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b9efa669030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b9efa6dad00" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b9efa6dad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6d90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b9efa6d9370" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b9efa6d9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b9efa6c4a70" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b9efa6c4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c4df0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b9efa6d9ac0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b9efa6d9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6d9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b9efa6c0ad0" loc="103:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b9efa6c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c0e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b9efa6da060" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b9efa6da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6da3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b9efa6c6e50" loc="92:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b9efa6c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c5210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b9efa6d4480" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b9efa6d4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d4800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b9efa6d5480" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b9efa6d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d5800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b9efa669950" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b9efa669950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa669cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b9efa6c7e50" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b9efa6c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c6210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b9efa6c8670" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b9efa6c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c89f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b9efa6c6670" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b9efa6c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c69f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b9efa6bead0" loc="107:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b9efa6bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6bee50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b9efa6bfad0" loc="105:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b9efa6bfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6bfe50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b9efa6cc670" loc="80:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b9efa6cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cc9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b9efa6c8e50" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b9efa6c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c7210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b9efa6c1ad0" loc="101:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b9efa6c1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c1e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b9efa6ce670" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b9efa6ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6ce9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b9efa6bdad0" loc="111:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b9efa6bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa6bde50"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa6bb020"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6bb1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa6bb340"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa6bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b9efa669300" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b9efa669300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa669680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b9efa6d6490" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b9efa6d6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d6810"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b9efa6d3480" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b9efa6d3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d3800"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b9efa6cbe50" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b9efa6cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c9210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b9efa6cfe50" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b9efa6cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6ce210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b9efa6c9670" loc="85:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b9efa6c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c99f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b9efa6d2670" loc="70:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b9efa6d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d29f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b9efa6dc670" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b9efa6dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6dc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b9efa6d2e50" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b9efa6d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6d0210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa66bd00" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa66bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa66a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa66a230"/>
        <function-ref name="request" scoped="" ref="0x2b9efa66a3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa66a550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa66a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b9efa6d8160" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b9efa6d8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6d84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b9efa6d8e00" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b9efa6d8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6d61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b9efa6c12f0" loc="100:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b9efa6c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c1670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b9efa6c2ad0" loc="99:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b9efa6c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c2e50"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b9efa6da6b0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b9efa6da6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6daa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b9efa6c22f0" loc="96:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b9efa6c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c2670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b9efa6be2f0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b9efa6be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6be670"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6be800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b9efa6cce50" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b9efa6cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cb210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b9efa6c7670" loc="89:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b9efa6c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c79f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b9efa6dccc0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b9efa6dccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6db0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b9efa6db9c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b9efa6db9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6dbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b9efa6cee50" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b9efa6cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cd210"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b9efa6d87b0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b9efa6d87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b9efa6d8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b9efa6cd670" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b9efa6cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6cd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b9efa6c5e50" loc="94:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b9efa6c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9efa6c4610"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6c47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b9efa6bb7a0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b9efa6bb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b9efa6bbb20"/>
        <function-ref name="writeDone" scoped="" ref="0x2b9efa6bbcb0"/>
        <function-ref name="write" scoped="" ref="0x2b9efa6bbe40"/>
        <function-ref name="beginRead" scoped="" ref="0x2b9efa6ba020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9efa6ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b9efa70aa20" loc="46:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9efa70aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9efa70ada0"/>
        <function-ref name="rand32" scoped="" ref="0x2b9efa707020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b9efa708920" loc="45:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b9efa708920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa70a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa70e9a0" loc="44:/home/zdenial/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa70e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa70ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b9efa703a20" loc="48:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9efa703a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9efa703da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b9efa702020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b9efa704940" loc="47:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b9efa704940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa703560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa704080" loc="46:/home/zdenial/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa704080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa704400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa70caa0" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa70caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa70ce20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa705020"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa7051b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa705340"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa7054d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa705660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa6eb020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa6eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa6eb3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa6eb530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa6eb6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa6eb850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa6eb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa6ec220" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa6ec220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa6ec5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa6ec730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa6ec8c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa6eca50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa6ecbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa6e6e60" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa6e6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa6e5210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa6e53a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa6e5530"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa6e56c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa6e5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa6e9a20" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa6e9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa6e9da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa6e6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa6e61b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa6e6340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa6e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b9efa6e48f0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b9efa6e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b9efa6e4c70"/>
        <function-ref name="rand32" scoped="" ref="0x2b9efa6e4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa6e6750" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa6e6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa6e6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa6e3170" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa6e3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa6e34f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa6e3680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa6e3810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b9efa6e5ae0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa6e5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa6e5e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa6e4020"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa6e41b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa6e4340"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa6e44d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa6e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa6e7690" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa6e7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa6e7a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa6e7ba0"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa6e7d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa74b020"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa74b1b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa74b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa745950" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa745950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa745cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa748aa0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa748aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa748e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b9efa745200" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9efa745200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa745580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa7403f0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa7403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa740770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa741b70" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa741b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa740020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa744e30" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa744e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa7411e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa740a70" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa740a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa740df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa73f020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa73f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b9efa741570" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b9efa741570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa7418f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa789020" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa789020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa7893a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa7896b0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa7896b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa789a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa789bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa789d50"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa788020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa7881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa78e960" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa78e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa78ece0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa78ee70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa78c030"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa78c1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa78c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b9efa78cca0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b9efa78cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa78b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa78b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa78b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa78b550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa78b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa78c5f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa78c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa78c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa78fcb0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa78fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa78e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa78e230"/>
        <function-ref name="request" scoped="" ref="0x2b9efa78e3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa78e550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa78e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b9efa78ba50" loc="69:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b9efa78ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa78bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b9efa78a170" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b9efa78a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa78a4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa78a680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa78a810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa78a9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa78ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa77fd70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa77fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa77e180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa77e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa77e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa77e630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa77e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa77eb10" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa77eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa77d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b9efa7c9db0" loc="184:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b9efa7c9db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa7c8180"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa7c8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9efa77d2f0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa77d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9efa77d670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9efa77d800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9efa77d990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9efa77db20"/>
        <function-ref name="getPower" scoped="" ref="0x2b9efa77dcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9efa77de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b9efa782a20" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b9efa782a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa782da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa780020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa7801b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa780340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa7804d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9efa77cb70" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b9efa77cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9efa77b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9efa77b1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9efa77b340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9efa77b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa77c170" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa77c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa77c4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa77c680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa77c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b9efa782370" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b9efa782370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa7826f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9efa7847b0" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b9efa7847b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa784b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa784cc0"/>
        <function-ref name="request" scoped="" ref="0x2b9efa784e50"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa783020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa7831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b9efa7834d0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b9efa7834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa783850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa7839e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa783b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa783d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa782020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b9efa780840" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b9efa780840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa780bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b9efa77f020" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b9efa77f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa77f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa77f530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa77f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa77f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa77f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efa7a9dd0" loc="44:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efa7a9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efa7a8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9efa7a8410" loc="45:/home/zdenial/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9efa7a8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9efa7a8790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9efa7a8920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9efa7a8ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9efa7a8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9efa79cb80" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9efa79cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9efa79b020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9efa79b1b0"/>
        <function-ref name="start" scoped="" ref="0x2b9efa79b340"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa79b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa79a860" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa79a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa79abe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa79ad70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa799020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa7991b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa799340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa799690" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa799690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa799a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa7a1cf0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa7a1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa79e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa79e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa79e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa79e550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa79e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9efa79c080" loc="45:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa79c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9efa79c400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9efa79c590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9efa79c720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9efa79c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b9efa79b800" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b9efa79b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa79bb80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa79bd10"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa79a020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa79a1b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa79a340"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa79a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b9efa799d90" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b9efa799d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9efa798180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9efa798310"/>
        <function-ref name="start" scoped="" ref="0x2b9efa7984a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa798630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa79e980" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa79e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa79ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9efa7952d0" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa7952d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9efa795650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9efa7957e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9efa795970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9efa795b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa797580" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa797580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa797900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa797a90"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa797c20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa797db0"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa796020"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa7961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa802d70" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa802d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa801180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa801310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8014a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa801630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8017c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa8032a0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa8032a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa803620"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8037b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa803940"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa803ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa803c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9efa802020" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9efa802020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9efa8023a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9efa802530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9efa8026c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9efa802850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9efa8029e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa7fddd0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa7fddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa7fc180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa7fc310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa7fc4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa7fc630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa7fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x2b9efa7f12a0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x2b9efa7f12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa7f1620"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa7f17b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x2b9efa7fa650" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x2b9efa7fa650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa7f6c40"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa7f71e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa7f6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa7f7ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa7f5590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa7f5110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa7f7660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa7f9390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa7f6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa7f9860"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa7f9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa8003b0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa8003b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa800730"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8008c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa800a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa800be0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa800d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2b9efa7fcaf0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b9efa7fcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa7fce70"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa7fb030"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa7fb1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa7fb350"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa7fb4e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa7fb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa7f5a30" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa7f5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa7f5db0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa7f4020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa7f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b9efa7fb9a0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9efa7fb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efa7fbd20"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efa7fa020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efa7fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b9efa7fd080" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b9efa7fd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b9efa7fd400"/>
        <function-ref name="setRetries" scoped="" ref="0x2b9efa7fd590"/>
        <function-ref name="getRetries" scoped="" ref="0x2b9efa7fd720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b9efa7fd8b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b9efa7fda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b9efa842350" loc="67:/home/zdenial/tinyos/tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b9efa842350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b9efa8426d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b9efa842860"/>
        <function-ref name="isState" scoped="" ref="0x2b9efa8429f0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b9efa842b80"/>
        <function-ref name="requestState" scoped="" ref="0x2b9efa842d10"/>
        <function-ref name="forceState" scoped="" ref="0x2b9efa841020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9efa840750" loc="45:/home/zdenial/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9efa840750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efa83cc40"/>
        <function-ref name="fired" scoped="" ref="0x2b9efa83d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efa83c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efa83dae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efa83b590"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efa83b110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efa83d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efa83e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efa83c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efa83e860"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa83ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa820690" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa820690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa820a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa821860" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa821860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa821be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa821d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa820020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8201b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa820340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b9efa81e610" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b9efa81e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b9efa81e990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b9efa81eb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b9efa81ecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b9efa81ee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b9efa81d020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b9efa81d1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b9efa81d340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b9efa81d4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b9efa81d660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b9efa81d7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b9efa81d980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b9efa81db10"/>
        <function-ref name="sync" scoped="" ref="0x2b9efa81dca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9efa81c020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b9efa81c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b9efa822830" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b9efa822830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9efa822bb0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9efa822d40"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9efa821020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9efa8211b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b9efa821340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9efa8214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b9efa823b50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b9efa823b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b9efa822020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b9efa81b1f0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b9efa81b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b9efa81b570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b9efa81b700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b9efa81b890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b9efa81ba20"/>
        <function-ref name="setCca" scoped="" ref="0x2b9efa81bbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b9efa81bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efa8248f0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efa8248f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa824c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa824e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa823020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8231b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa823340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efa829da0" loc="48:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efa829da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa828180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa828310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8284a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa828630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8287c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9efa827c00" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9efa827c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa826020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b9efa820ce0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b9efa820ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b9efa81f0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b9efa81f230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b9efa81f3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b9efa81f550"/>
        <function-ref name="getPower" scoped="" ref="0x2b9efa81f6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b9efa81f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b9efa81c4d0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b9efa81c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b9efa81c950"/>
        <function-ref name="changed" scoped="" ref="0x2b9efa81cae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b9efa81cc70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b9efa81ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b9efa81fb70" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b9efa81fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa81e020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b9efa81e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b9efa81e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa827020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa827020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa8273a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efa81ad30" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efa81ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efa8190e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efa819270"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efa819400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efa819590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efa819720"/>
        <function-ref name="get" scoped="" ref="0x2b9efa8198b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efa819a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efa8181b0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa819bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efa819d60"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efa818020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efa8262d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efa8262d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efa826650"/>
        <function-ref name="source" scoped="" ref="0x2b9efa8267e0"/>
        <function-ref name="address" scoped="" ref="0x2b9efa826970"/>
        <function-ref name="destination" scoped="" ref="0x2b9efa826b00"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efa826c90"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efa826e20"/>
        <function-ref name="type" scoped="" ref="0x2b9efa824020"/>
        <function-ref name="setType" scoped="" ref="0x2b9efa8241b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efa824340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efa8244d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efa824660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b9efa81a0f0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b9efa81a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9efa81a470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9efa81a600"/>
        <function-ref name="request" scoped="" ref="0x2b9efa81a790"/>
        <function-ref name="granted" scoped="" ref="0x2b9efa81a920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9efa81aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b9efa906580" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b9efa906580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b9efa906900"/>
        <function-ref name="stopDone" scoped="" ref="0x2b9efa906a90"/>
        <function-ref name="start" scoped="" ref="0x2b9efa906c20"/>
        <function-ref name="stop" scoped="" ref="0x2b9efa906db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b9efa8f1060" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9efa8f1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9efa8f1e30"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9efa8f0380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efa9027e0" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efa9027e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa902b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa902cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa902e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa901030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa9011c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9efa9021d0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9efa9021d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa902550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b9efa8fe640" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b9efa8fe640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b9efa8fe9c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b9efa8feb50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b9efa8fece0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b9efa8fee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b9efa8f7e50" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9efa8f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa8f5c60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8f3590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8f3110"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8f4580"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8f4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa9035c0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa9035c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa903940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b9efa8ffb20" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b9efa8ffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efa8fe020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efa8fe1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efa8fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b9efa8fdaa0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9efa8fdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa8fc890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8f91e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8fbd10"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8fb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8fb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efa901470" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efa901470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efa9017f0"/>
        <function-ref name="source" scoped="" ref="0x2b9efa901980"/>
        <function-ref name="address" scoped="" ref="0x2b9efa901b10"/>
        <function-ref name="destination" scoped="" ref="0x2b9efa901ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efa901e30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efa8ff020"/>
        <function-ref name="type" scoped="" ref="0x2b9efa8ff1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efa8ff340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efa8ff4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efa8ff660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efa8ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b9efa8f9c50" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageC.nc">
      <component-ref qname="CC2420TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9efa8f9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9efa8f8a40"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9efa8f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b9efa8d7e60" loc="59:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b9efa8d7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa8d6210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b9efa8daa00" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b9efa8daa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa8dad80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8d9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8d91b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8d9340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0x2b9efa8de910" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0x2b9efa8de910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9efa8dd740"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9efa8ddc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0x2b9efa8e74d0" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0x2b9efa8e74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa8e6390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8e4c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8e4800"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8e6c60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efa8e3340" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efa8e3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa8e36c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa8e3850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8e39e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8e3b70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa8e3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b9efa8da2c0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b9efa8da2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa8da640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b9efa8d9800" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubPacket" scoped="" ref="0x2b9efa8d9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa8d9b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa8d9d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8d8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8d81b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa8d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp32khz" ref="0x2b9efa8d5130" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b9efa8d5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa8d4750"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa8d4e80"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa8d4020"/>
        <function-ref name="set" scoped="" ref="0x2b9efa8d25d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b9efa8d86a0" loc="57:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubAMPacket" scoped="" ref="0x2b9efa8d86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efa8d8a20"/>
        <function-ref name="source" scoped="" ref="0x2b9efa8d8bb0"/>
        <function-ref name="address" scoped="" ref="0x2b9efa8d8d40"/>
        <function-ref name="destination" scoped="" ref="0x2b9efa8d7020"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efa8d71b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efa8d7340"/>
        <function-ref name="type" scoped="" ref="0x2b9efa8d74d0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efa8d7660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efa8d77f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efa8d7980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efa8d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efa8db6b0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efa8db6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa8dba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b9efa8cd020" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b9efa8cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa8cd3a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b9efa8cd530"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8cd6c0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa8cd850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b9efa8cdd30" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b9efa8cdd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa8cc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9efa9470f0" loc="68:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b9efa9470f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9efa947470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9efa947600"/>
        <function-ref name="led1On" scoped="" ref="0x2b9efa947790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9efa947920"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9efa947ab0"/>
        <function-ref name="get" scoped="" ref="0x2b9efa947c40"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9efa947dd0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9efa9464d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa946020"/>
        <function-ref name="led0On" scoped="" ref="0x2b9efa9461b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b9efa946340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b9efa948060" loc="67:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b9efa948060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa948c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSend32khz" ref="0x2b9efa8ecc10" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncAMSend32khz" scoped="" ref="0x2b9efa8ecc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa8eba40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa8e94a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa8e9020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa8ea350"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa8ea860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efa8e2020" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efa8e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efa8e23a0"/>
        <function-ref name="source" scoped="" ref="0x2b9efa8e2530"/>
        <function-ref name="address" scoped="" ref="0x2b9efa8e26c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efa8e2850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efa8e29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efa8e2b70"/>
        <function-ref name="type" scoped="" ref="0x2b9efa8e2d00"/>
        <function-ref name="setType" scoped="" ref="0x2b9efa8e1020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efa8e11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efa8e1340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efa8e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacket32khz" ref="0x2b9efa8e1b90" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSyncPacket32khz" scoped="" ref="0x2b9efa8e1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0x2b9efa8df990"/>
        <function-ref name="eventTime" scoped="" ref="0x2b9efa8de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2b9efa8d6550" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSnoop" scoped="" ref="0x2b9efa8d6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efa8d69d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0x2b9efa8d1270" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/CC2420TimeSyncMessageP.nc">
      <component-ref qname="CC2420TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b9efa8d1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b9efa8d0800"/>
        <function-ref name="clear" scoped="" ref="0x2b9efa8ce020"/>
        <function-ref name="isValid" scoped="" ref="0x2b9efa8d00d0"/>
        <function-ref name="set" scoped="" ref="0x2b9efa8ce750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efa9da020" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efa9da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa9da3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa9da530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa9da6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa9da850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa9da9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efa9dac30" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efa9dac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa9d9020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa9d91b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa9d9340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa9d94d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa9d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efa9d98b0" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efa9d98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efa9d9c30"/>
        <function-ref name="source" scoped="" ref="0x2b9efa9d9dc0"/>
        <function-ref name="address" scoped="" ref="0x2b9efa9d8020"/>
        <function-ref name="destination" scoped="" ref="0x2b9efa9d81b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efa9d8340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efa9d84d0"/>
        <function-ref name="type" scoped="" ref="0x2b9efa9d8660"/>
        <function-ref name="setType" scoped="" ref="0x2b9efa9d87f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efa9d8980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efa9d8b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efa9d8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efa9d7020" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efa9d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efa9d73a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efa9d7530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efa9d76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb45fcb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb45fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb45e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb45e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb45e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb45e550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb45e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efb45e930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efb45e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb45ecb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efb45ee40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb45d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb45d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efb45d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efb45d590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb45d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb45d910"/>
        <function-ref name="source" scoped="" ref="0x2b9efb45daa0"/>
        <function-ref name="address" scoped="" ref="0x2b9efb45dc30"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb45ddc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb45c020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb45c1b0"/>
        <function-ref name="type" scoped="" ref="0x2b9efb45c340"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb45c4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb45c660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb45c7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb45c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efb45cc10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efb45cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efb45b020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efb45b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efb45b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb50a660" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb50a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb50a9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb50ab70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb50ad00"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb509020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb5091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9efb509460" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efb509460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb5097e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb509970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb509b00"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb509c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb509e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9efb5080e0" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CC2420TimeSyncMessageC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb5080e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb508460"/>
        <function-ref name="source" scoped="" ref="0x2b9efb5085f0"/>
        <function-ref name="address" scoped="" ref="0x2b9efb508780"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb508910"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb508aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb508c30"/>
        <function-ref name="type" scoped="" ref="0x2b9efb508dc0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb507020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb5071b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb507340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb5074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa9bb940" loc="43:/home/zdenial/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa9bb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa9bbcc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa9bbe50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa9b8020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa9b81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa9b8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b9efa9ef400" loc="48:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efa9ef400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa9ef7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa9ef930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa9efac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa9efc50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa9efde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b9efa9f04b0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efa9f04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efa9f0850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa9f09e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa9f0b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efa9f0d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efa9ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b9efa9ec720" loc="50:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efa9ec720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efa9ecaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efa9ecc30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efa9ecdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efa9eb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efa9eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b9efa9eb480" loc="169:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2b9efa9eb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa9eb800"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa9eb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b9efa9ebc60" loc="126:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2b9efa9ebc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efa9ea020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efa9ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9efa9ed060" loc="49:/home/zdenial/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efa9ed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efa9ed3e0"/>
        <function-ref name="source" scoped="" ref="0x2b9efa9ed570"/>
        <function-ref name="address" scoped="" ref="0x2b9efa9ed700"/>
        <function-ref name="destination" scoped="" ref="0x2b9efa9ed890"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efa9eda20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efa9edbb0"/>
        <function-ref name="type" scoped="" ref="0x2b9efa9edd40"/>
        <function-ref name="setType" scoped="" ref="0x2b9efa9ec020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efa9ec1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efa9ec340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efa9ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9efa9d2830" loc="48:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9efa9d2830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa9d14c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efa9d1b30" loc="49:/home/zdenial/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420TimeSyncMessageC.LocalTime32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efa9d1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa9d0970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efa9cf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efa9d0e30"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efa9cf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9efa9cee60" loc="20:/home/zdenial/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b9efa9cee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146460"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9ef91467d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efa9caac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efaa3dcc0" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efaa3dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efaa3c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa3c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa3c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efaa3c550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efaa3c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efaa3c930" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efaa3c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efaa3ccb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efaa3ce40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa3b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa3b1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efaa3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efaa3b590" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa3b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efaa3b910"/>
        <function-ref name="source" scoped="" ref="0x2b9efaa3baa0"/>
        <function-ref name="address" scoped="" ref="0x2b9efaa3bc30"/>
        <function-ref name="destination" scoped="" ref="0x2b9efaa3bdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efaa3a020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efaa3a1b0"/>
        <function-ref name="type" scoped="" ref="0x2b9efaa3a340"/>
        <function-ref name="setType" scoped="" ref="0x2b9efaa3a4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efaa3a660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efaa3a7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efaa3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efaa3ac10" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efaa3ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efaa39020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efaa391b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efaa39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb4bdcb0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb4bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb4bc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb4bc230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb4bc3c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb4bc550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb4bc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efb4bc930" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efb4bc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb4bccb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efb4bce40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb4bb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb4bb1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efb4bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efb4bb590" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb4bb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb4bb910"/>
        <function-ref name="source" scoped="" ref="0x2b9efb4bbaa0"/>
        <function-ref name="address" scoped="" ref="0x2b9efb4bbc30"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb4bbdc0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb4ba020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb4ba1b0"/>
        <function-ref name="type" scoped="" ref="0x2b9efb4ba340"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb4ba4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb4ba660"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb4ba7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb4ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efb4bac10" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efb4bac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efb4b9020"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efb4b91b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efb4b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb55fe30" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb55fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb55e1e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb55e370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb55e500"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb55e690"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb55e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9efb55ead0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efb55ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb55ee50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb55d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb55d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb55d340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb55d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9efb55d720" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinReqSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb55d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb55daa0"/>
        <function-ref name="source" scoped="" ref="0x2b9efb55dc30"/>
        <function-ref name="address" scoped="" ref="0x2b9efb55ddc0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb55c020"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb55c1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb55c340"/>
        <function-ref name="type" scoped="" ref="0x2b9efb55c4d0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb55c660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb55c7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb55c980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb55cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efaa31dd0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efaa31dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efaa2f180"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efaa2f310"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa2f4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa2f630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efaa2f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efaa31800" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efaa31800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efaa31b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efaa2fa10" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinReqRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa2fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efaa2fd90"/>
        <function-ref name="source" scoped="" ref="0x2b9efaa2e020"/>
        <function-ref name="address" scoped="" ref="0x2b9efaa2e1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efaa2e340"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efaa2e4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efaa2e660"/>
        <function-ref name="type" scoped="" ref="0x2b9efaa2e7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efaa2e980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efaa2eb10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efaa2eca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efaa2ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efaa2b530" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efaa2b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efaa2b8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa2ba40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa2bbd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efaa2bd60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efaa2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efaa2a270" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efaa2a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efaa2a5f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efaa2a780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa2a910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa2aaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efaa2ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efaa2ae80" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa2ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efaa29220"/>
        <function-ref name="source" scoped="" ref="0x2b9efaa293b0"/>
        <function-ref name="address" scoped="" ref="0x2b9efaa29540"/>
        <function-ref name="destination" scoped="" ref="0x2b9efaa296d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efaa29860"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efaa299f0"/>
        <function-ref name="type" scoped="" ref="0x2b9efaa29b80"/>
        <function-ref name="setType" scoped="" ref="0x2b9efaa29d10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efaa28020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efaa281b0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efaa28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efaa285d0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efaa285d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efaa28950"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efaa28ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efaa28c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb541140" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb541140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb5414c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb541650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb5417e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb541970"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb541b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efb541d50" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efb541d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb53f100"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efb53f290"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb53f420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb53f5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efb53f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efb53f990" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb53f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb53fd10"/>
        <function-ref name="source" scoped="" ref="0x2b9efb53e020"/>
        <function-ref name="address" scoped="" ref="0x2b9efb53e1b0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb53e340"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb53e4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb53e660"/>
        <function-ref name="type" scoped="" ref="0x2b9efb53e7f0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb53e980"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb53eb10"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb53eca0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb53ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efb53d120" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efb53d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efb53d4a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efb53d630"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efb53d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb533390" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb533390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb533710"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb5338a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb533a30"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb533bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb533d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9efb532060" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efb532060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb5323e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb532570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb532700"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb532890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb532a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9efb532c70" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.JoinAnsSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb532c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb531020"/>
        <function-ref name="source" scoped="" ref="0x2b9efb5311b0"/>
        <function-ref name="address" scoped="" ref="0x2b9efb531340"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb5314d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb531660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb5317f0"/>
        <function-ref name="type" scoped="" ref="0x2b9efb531980"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb531b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb531ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb531e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb530020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efaa25710" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efaa25710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efaa25a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efaa25c20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa25db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa24020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efaa241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efaa25140" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efaa25140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efaa254c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efaa24400" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.JoinAnsRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa24400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efaa24780"/>
        <function-ref name="source" scoped="" ref="0x2b9efaa24910"/>
        <function-ref name="address" scoped="" ref="0x2b9efaa24aa0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efaa24c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efaa24dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efaa23020"/>
        <function-ref name="type" scoped="" ref="0x2b9efaa231b0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efaa23340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efaa234d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efaa23660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efaa237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efaa21e60" loc="49:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efaa21e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efaa20210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa203a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa20530"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efaa206c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efaa20850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efaa20aa0" loc="50:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efaa20aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efaa20e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efaa1e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa1e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa1e340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efaa1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efaa1e720" loc="51:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa1e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efaa1eaa0"/>
        <function-ref name="source" scoped="" ref="0x2b9efaa1ec30"/>
        <function-ref name="address" scoped="" ref="0x2b9efaa1edc0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efaa1d020"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efaa1d1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efaa1d340"/>
        <function-ref name="type" scoped="" ref="0x2b9efaa1d4d0"/>
        <function-ref name="setType" scoped="" ref="0x2b9efaa1d660"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efaa1d7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efaa1d980"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efaa1db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efaa1dda0" loc="52:/home/zdenial/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efaa1dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efaa1c180"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efaa1c310"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efaa1c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb5164c0" loc="49:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb5164c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb516840"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb5169d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb516b60"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb516cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb516e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efb5150f0" loc="50:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efb5150f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb515470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efb515600"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb515790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb515920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efb515ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efb515d00" loc="51:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb515d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb5140a0"/>
        <function-ref name="source" scoped="" ref="0x2b9efb514230"/>
        <function-ref name="address" scoped="" ref="0x2b9efb5143c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb514550"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb5146e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb514870"/>
        <function-ref name="type" scoped="" ref="0x2b9efb514a00"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb514b90"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb514d20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb513020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb5131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b9efb513440" loc="52:/home/zdenial/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b9efb513440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b9efb5137c0"/>
        <function-ref name="noAck" scoped="" ref="0x2b9efb513950"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b9efb513ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b9efb5b8640" loc="44:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b9efb5b8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb5b89c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb5b8b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb5b8ce0"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb5b8e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb5b7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b9efb5b72e0" loc="46:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b9efb5b72e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9efb5b7660"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efb5b77f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efb5b7980"/>
        <function-ref name="cancel" scoped="" ref="0x2b9efb5b7b10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9efb5b7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b9efb5b6020" loc="47:/home/zdenial/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TDMALinkC.DataSndC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efb5b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efb5b63a0"/>
        <function-ref name="source" scoped="" ref="0x2b9efb5b6530"/>
        <function-ref name="address" scoped="" ref="0x2b9efb5b66c0"/>
        <function-ref name="destination" scoped="" ref="0x2b9efb5b6850"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efb5b69e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efb5b6b70"/>
        <function-ref name="type" scoped="" ref="0x2b9efb5b6d00"/>
        <function-ref name="setType" scoped="" ref="0x2b9efb5b5020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efb5b51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efb5b5340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efb5b54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b9efaa91120" loc="2:SlotSchedulerC.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b9efaa91120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="getEpochTime" scoped="" ref="0x2b9efaa90020"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b9efaa91630"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b9efaa917c0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaa91950"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b9efaa91ae0"/>
        <function-ref name="start" scoped="" ref="0x2b9efaa91c70"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b9efaa91e00"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaa914a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EndSlotTimer" ref="0x2b9efb598e70" loc="9:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EndSlotTimer" scoped="" ref="0x2b9efb598e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb593390"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb596970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efb595720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efb5952a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efb593c90"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efb593810"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb596df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efb597a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efb595d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efb596020"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb5964f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartSlotTimer" ref="0x2b9efb59d9f0" loc="8:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartSlotTimer" scoped="" ref="0x2b9efb59d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb598020"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb59b510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efb59a300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efb59be10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efb598920"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efb5984a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb59b990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efb59c670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efb59a910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efb59cb40"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb59b090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EpochTimer" ref="0x2b9efb5a25c0" loc="7:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EpochTimer" scoped="" ref="0x2b9efb5a25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb59fa80"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb5a0090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efb5a0e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efb5a0990"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efb59d4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efb59d020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb5a0510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efb5a1200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efb59f470"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efb5a16d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb5a1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlotScheduler" ref="0x2b9efb5a3200" loc="4:SlotSchedulerP.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.SlotSchedulerP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SlotScheduler" scoped="" ref="0x2b9efb5a3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlotScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b9efb5a21b0"/>
        <function-ref name="slotStarted" scoped="" ref="0x2b9efb5a3710"/>
        <function-ref name="getScheduledSlot" scoped="" ref="0x2b9efb5a38a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb5a3a30"/>
        <function-ref name="syncEpochTime" scoped="" ref="0x2b9efb5a3bc0"/>
        <function-ref name="start" scoped="" ref="0x2b9efb5a3d50"/>
        <function-ref name="slotEnded" scoped="" ref="0x2b9efb5a2020"/>
        <function-ref name="getEpochTime" scoped="" ref="0x2b9efb5a3580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9efb5904d0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EpochTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb5904d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb58ca20"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb58e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efb58eda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efb58e920"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efb58b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efb58b020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb58e4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efb58f110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efb58c410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efb58f5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb58fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9efaa50e30" loc="3:Timer32P.nc">
      <component-ref qname="Timer32P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9efaa50e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efaace390"/>
        <function-ref name="fired" scoped="" ref="0x2b9efaa4b970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efaacf720"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efaacf2a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efaacec90"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efaace810"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaa4bdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efaa4da80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efaacfd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efaa4b020"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaa4b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efaacb6b0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efaacb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efaac7020"/>
        <function-ref name="fired" scoped="" ref="0x2b9efaac9020"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efaac99a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaac94e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efaac74e0"/>
        <function-ref name="start" scoped="" ref="0x2b9efaaca5b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaacaac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efaacce40" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efaacce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efaacb1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb6114f0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb6114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb60fdb0"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb610da0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb60f760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb60f2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb60e2a0"/>
        <function-ref name="start" scoped="" ref="0x2b9efb6103d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb6108e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb613b90" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb613b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb611020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b9efb5f9da0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb5f9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9efb5f8180"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9efb5f8310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9efb5f84a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9efb5f8630"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb5f87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b9efb5fb450" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb5fb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb5fb7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb5fb960"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb5fbaf0"/>
        <function-ref name="get" scoped="" ref="0x2b9efb5fbc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb5fbe10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb5fa020"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb5fa1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb5fa340"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb5fa4d0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efb5fa660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efb5fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b9efb5faa80" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb5faa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9efb5fae00"/>
        <function-ref name="getControl" scoped="" ref="0x2b9efb5f9020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb5f91b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9efb5f9340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9efb5f94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb5f9660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9efb5f97f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9efb5f9980"/>
        <function-ref name="setControl" scoped="" ref="0x2b9efb5f9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b9efb5efa80" loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b9efb5efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b9efb5efe00"/>
        <function-ref name="setEvent" scoped="" ref="0x2b9efb5ee020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b9efb5ee1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b9efb5ee340"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb5ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b9efb5f1190" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b9efb5f1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efb5f1510"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b9efb5f16a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb5f1830"/>
        <function-ref name="get" scoped="" ref="0x2b9efb5f19c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb5f1b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb5f1ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b9efb5f1e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb5f0030"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb5f01c0"/>
        <function-ref name="setMode" scoped="" ref="0x2b9efb5f0350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b9efb5f04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb5f5020" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb5f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb5f2870"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb5f4840"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb5f2220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb5f4d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb5f2d30"/>
        <function-ref name="start" scoped="" ref="0x2b9efb5f5e30"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb5f4380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9efb5f6660" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b9efb5f6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9efb5f69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b9efb5f0770" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b9efb5f0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b9efb5f0af0"/>
        <function-ref name="getControl" scoped="" ref="0x2b9efb5f0c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b9efb5f0e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b9efb5ef020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b9efb5ef1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b9efb5ef340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9efb5ef4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b9efb5ef660"/>
        <function-ref name="setControl" scoped="" ref="0x2b9efb5ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9efb60c890" loc="61:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efb60c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb6080d0"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb6090d0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb609a50"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb609590"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb608590"/>
        <function-ref name="start" scoped="" ref="0x2b9efb60a6e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb60abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b9efb6040a0" loc="73:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b9efb6040a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb602b30"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb6039f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efb6024e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb602020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efb601020"/>
        <function-ref name="start" scoped="" ref="0x2b9efb603020"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb603530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9efb608c00" loc="68:/home/zdenial/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="Timer32P.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b9efb608c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9efb607a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9efb6064e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9efb606020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9efb6069a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9efaabc950" loc="74:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b9efaabc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efaabccd0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efaabce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9efaac0690" loc="49:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b9efaac0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efaabc020"/>
        <function-ref name="fired" scoped="" ref="0x2b9efaabe020"/>
        <function-ref name="startAt" scoped="" ref="0x2b9efaabe9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaabe4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9efaabc4e0"/>
        <function-ref name="start" scoped="" ref="0x2b9efaabf5b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaabfac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9efaac5180" loc="48:/home/zdenial/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="Timer32P.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9efaac5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efaac1630"/>
        <function-ref name="fired" scoped="" ref="0x2b9efaac4bf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efaac3990"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efaac3510"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efaac0020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efaac1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaac3090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efaac5d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efaac1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efaac42a0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaac4770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9efaaad490" loc="71:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9efaaad490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9efaaad810"/>
        <function-ref name="runTask" scoped="" ref="0x2b9efaaad9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9efaab20a0" loc="49:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b9efaab20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efaaae630"/>
        <function-ref name="fired" scoped="" ref="0x2b9efaab0b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efaaaf920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efaaaf4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efaaad020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efaaaeab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaaaf020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efaab2c90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efaaae020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efaab01b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaab0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9efaab9a70" loc="48:/home/zdenial/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="Timer32P.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b9efaab9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efaab3170"/>
        <function-ref name="fired" scoped="" ref="0x2b9efaab6570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efaab54c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efaab5020"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efaab3ab0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efaab3610"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efaab6a10"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efaab86b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efaab5af0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efaab8ba0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efaab60d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9efb58ad00" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.StartSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb58ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb585220"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb5887c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efb587590"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efb587110"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efb585b20"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efb5856a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb588c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efb589940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efb587ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efb589e10"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb588340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9efb5834d0" loc="3:Timer32C.nc">
      <component-ref qname="TDMALinkC.SlotSchedulerC.EndSlotTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9efb5834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efb57fa20"/>
        <function-ref name="fired" scoped="" ref="0x2b9efb581020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efb581da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efb581920"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efb57e4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efb57e020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efb5814a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efb582110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efb57f410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efb5825e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efb582ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b9efaa8e5f0" loc="46:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b9efaa8e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b9efaa8e970"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b9efaa8eb00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b9efaa8ec90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b9efaa8ee20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b9efaa8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b9efaa8e020" loc="45:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b9efaa8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b9efaa8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b9efaa8d270" loc="47:/home/zdenial/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="TDMALinkC.DataRcvC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b9efaa8d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b9efaa8d5f0"/>
        <function-ref name="source" scoped="" ref="0x2b9efaa8d780"/>
        <function-ref name="address" scoped="" ref="0x2b9efaa8d910"/>
        <function-ref name="destination" scoped="" ref="0x2b9efaa8daa0"/>
        <function-ref name="setSource" scoped="" ref="0x2b9efaa8dc30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b9efaa8ddc0"/>
        <function-ref name="type" scoped="" ref="0x2b9efab11020"/>
        <function-ref name="setType" scoped="" ref="0x2b9efab111b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b9efab11340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b9efab114d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b9efab11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer32khz" ref="0x2b9efab083f0" loc="3:Timer32C.nc">
      <component-ref qname="TestC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer32khz" scoped="" ref="0x2b9efab083f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b9ef9146c10"/>
            <typename><typedef-ref name="T32khz" ref="0x2b9ef9165a60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9efab04870"/>
        <function-ref name="fired" scoped="" ref="0x2b9efab07e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9efab06c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9efab06780"/>
        <function-ref name="getdt" scoped="" ref="0x2b9efab031e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9efab04cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9efab06300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9efab07020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9efab04260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9efab074f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9efab079c0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="AMSend" loc="58:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9ef9154dd0" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9ef9154480" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b9ef9154800" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9154b30" loc="80:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9ef914f620" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef914f020" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef914f350" loc="135:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9ef914e6d0" loc="123:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9ef91512a0" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9151020" loc="96:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9ef91507f0" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9150210" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9ef9150560" loc="110:/home/zdenial/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b9ef912d5d0" loc="60:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b9ef912bab0" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9ef912b830" loc="113:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b9ef9128020" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9ef9129d30" loc="138:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9ef912fcb0" loc="104:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef9129350" loc="130:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef9163840" loc="53:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef9163840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9ef915c7c0" loc="136:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef9160020" loc="83:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b9ef915eda0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9ef915e7d0" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9ef915eb10" loc="114:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b9ef915e020" loc="98:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b9ef915b8a0" loc="151:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b9ef915b020" loc="144:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9ef9160800" loc="92:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b9ef91623f0" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9ef9162170" loc="64:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b9ef915ddc0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9ef915d7f0" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9ef915db30" loc="129:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b9ef9161020" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9ef9162c30" loc="73:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef9161820" loc="78:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b9ef914a6e0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
              <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9127d20" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b9ef914a0d0" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef914a400" loc="78:/home/zdenial/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b9ef9139b90" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef9139910" loc="177:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b9ef9144810" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef9144590" loc="88:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b9ef912ec50" loc="68:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b9ef9145740" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef91454c0" loc="78:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b9ef9142130" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef9140b20" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b9ef9140e70" loc="121:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b9ef9141c00" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef9141620" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b9ef9141970" loc="103:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b9ef913d600" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef913d380" loc="147:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b9ef913c970" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef913c3c0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b9ef913c6e0" loc="162:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b9ef91231b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b9ef913e390" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef913e110" loc="136:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b9ef913a0c0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b9ef9138a60" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b9ef9138db0" loc="187:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b9ef9136020" loc="195:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/zdenial/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9ef9180030" loc="62:/home/zdenial/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b9ef91b7b40" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b9ef9198de0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b9ef91b7420" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b9ef9198700" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b9ef91975a0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b9ef919b900" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b9ef9198020" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b9ef9197cc0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9ef8d44b70" loc="62:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b9ef8cfcc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b9ef91ec020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b9ef91edcc0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b9ef91ef390" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9ef91af910"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b9ef91ae390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b9ef91ec890" loc="57:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b9ef920c7b0" loc="59:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b9ef91ed560" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b9ef920c020" loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b9ef91efb30" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b9ef91ee350" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b9ef91eeda0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9ef91af910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b9ef91ae390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9ef91eeb20" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9ef91af910"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b9ef91ae390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b9ef92000e0" loc="44:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b9ef91fe630" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b9ef91fe3b0" loc="79:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b9ef91fc2a0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9ef91fc020" loc="86:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9ef91ffbe0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9ef91ff3e0" loc="63:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b9ef9200a90" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b9ef9200810" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b9ef92073e0" loc="40:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b9ef9207d60" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9ef9207ae0" loc="41:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b9ef9206790" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b9ef9206510" loc="42:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b9ef92052a0" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b9ef9205020" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef9205990" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b9ef91f5810" loc="52:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b9ef91f32a0" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b9ef91f3020" loc="55:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b9ef91f4020" loc="53:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef91daab0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b9ef91f4760" loc="54:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9ef91f89b0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b9ef91f5120" loc="51:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9ef91f8270" loc="46:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9ef91f70e0" loc="48:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b9ef91f79f0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9ef91f7770" loc="50:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b9ef91f3cb0" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b9ef91f3a30" loc="56:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b9ef92219f0" loc="39:/home/zdenial/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b9ef908e2b0" loc="76:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b9ef8e82420" loc="52:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9ef8c3e020" loc="57:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b9ef8c3d020" loc="72:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b9ef8c3e790" loc="65:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b9ef8c50020" loc="67:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b9ef8c50870" loc="75:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef9375280" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef9375280"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef93754c0" loc="44:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef93754c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x2b9ef9374ac0" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10; parameter holds the time of some event as expressed in the local clock of&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10; @param addr         address to which to send the packet&#10; @param msg          the packet&#10; @param len          the length of the data in the packet payload&#10; @param event_time&#9;  the synchronization point to be transfered with the message&#10; @return             SUCCESS if the request to send succeeded and a&#10;                     sendDone will be signaled later, EBUSY if the&#10;                     abstraction cannot send now but will be able to&#10;                     later, or FAIL if the communication layer is not&#10;                     in a state that can send (e.g., off).&#10; @see sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef93754c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9ef9375d90" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b9ef9374150" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9374480" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0x2b9ef9374810" loc="64:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef93754c0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9ef936f660" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef936f060" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef936f390" loc="114:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9ef9370790" loc="103:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9ef9373c10" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9373990" loc="80:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9ef9371de0" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9371800" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9ef9371b50" loc="93:/home/zdenial/tinyos/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef936c780" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef936c780"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef936c9c0" loc="37:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef936c9c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0x2b9ef9369570" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.</short>
          <long>&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10; Under certain circumstances the received message cannot be properly&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10; on the receiver side. In this case, this command returns FALSE.&#10; This command MUST BE called only on the receiver side and only for&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10; that this command be called from the receive event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef93692f0" loc="48:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0x2b9ef93672a0" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10; This command should be called by the receiver of a message.</short>
          <long>&#10; This command should be called by the receiver of a message. The time&#10; of the synchronization event is returned as expressed in the local&#10; clock of the caller. This command MUST BE called only on the receiver&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10; It is recommended that this command be called from the receive event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef936c9c0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9367020" loc="58:/home/zdenial/tinyos/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b9ef9351650" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef93513d0" loc="65:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b9ef9355730" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9355110" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b9ef93554a0" loc="46:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b9ef9352630" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef93523b0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b9ef9354b30" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9354510" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b9ef93548a0" loc="53:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b9ef9350630" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef93503b0" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlotScheduler" loc="1:SlotScheduler.nc">
      <function command="" provided="0" name="getEpochTime" ref="0x2b9ef9386860" loc="6:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="slotStarted" ref="0x2b9ef9384970" loc="8:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b9ef93846f0" loc="8:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduledSlot" ref="0x2b9ef9384020" loc="7:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9ef9387020" loc="3:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncEpochTime" ref="0x2b9ef9386110" loc="5:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reference_time" ref="0x2b9ef9387e60" loc="5:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9ef93888a0" loc="2:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="epoch_time" ref="0x2b9ef93882a0" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
          <variable name="firstSlot" ref="0x2b9ef9388610" loc="2:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="slotEnded" ref="0x2b9ef9383350" loc="9:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="slotId" ref="0x2b9ef93830d0" loc="9:SlotScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef9387710" loc="4:SlotScheduler.nc">
        <interfacedef-ref qname="SlotScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b9ef93ff0e0" loc="95:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef93ff8f0" loc="105:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b9ef93f50b0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b9ef93fbdd0" loc="49:/home/zdenial/tinyos/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9ef93fa400" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9ef93fa180" loc="46:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b9ef93f92b0" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9ef93fac70" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b9ef93f9020" loc="56:/home/zdenial/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9ef94122b0" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9ef9415b80" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9412020" loc="48:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b9ef940d020" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9ef940fce0" loc="79:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b9ef940ddf0" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9ef940d820" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef940db60" loc="90:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b9ef940ebc0" loc="65:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b9ef940a720" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9ef940bdc0" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef940a130" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9ef940a480" loc="99:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b9ef940f510" loc="72:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9ef9411bb0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9ef9411280" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef94115c0" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9ef9411910" loc="57:/home/zdenial/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b9ef948b270" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9ef948bba0" loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b9ef9489d30" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9ef9456450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b9ef9456870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9ef94629c0" loc="120:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b9ef9463990" loc="97:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b9ef9463020" loc="88:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9ef94621f0" loc="102:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9ef9461470" loc="128:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/zdenial/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b9ef94803e0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b9ef9483b80" loc="59:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b9ef9478d70" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9478af0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b9ef9478350" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b9ef94ad390" loc="213:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b9ef94b8020" loc="143:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b9ef949ade0" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942e3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b9ef942ebf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9ef949ab60" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942e3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b9ef942ebf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b9ef948d0e0" loc="123:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b9ef94952a0" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942a360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b9ef942aba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9ef9495020" loc="70:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942a360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b9ef942aba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b9ef94b2750" loc="180:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b9ef94b0cf0" loc="197:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b9ef9496830" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942c290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b9ef942ca20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b9ef9495a90" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942a360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b9ef942aba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b9ef9491830" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b9ef94915b0" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b9ef9492e40" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b9ef94b2020" loc="179:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b9ef9496040" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942c290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b9ef942ca20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9ef9497da0" loc="60:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942c290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b9ef942ca20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b9ef9493c80" loc="85:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b9ef94b2e80" loc="181:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b9ef9492690" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b9ef9492410" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b9ef948e190" loc="113:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b9ef948e910" loc="118:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b9ef94b3070" loc="177:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b9ef94b6020" loc="163:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b9ef94ba070" loc="133:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b9ef94b37b0" loc="178:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b9ef94b8800" loc="148:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b9ef94b15c0" loc="182:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b9ef9490070" loc="103:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b9ef9413330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b9ef9431a50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b9ef94b1d60" loc="187:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b9ef94aebd0" loc="207:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b9ef94934d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b9ef9493250" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b9ef94add30" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef94adab0" loc="224:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b9ef9497600" loc="55:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9ef942e3b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b9ef942ebf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b9ef948d850" loc="128:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b9ef94b7020" loc="153:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b9ef94b5800" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9ef9456450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b9ef9456870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b9ef94b5580" loc="174:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9ef9456450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b9ef9456870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b9ef94b6af0" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b9ef943e420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b9ef943e840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b9ef94b6870" loc="168:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b9ef943e420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b9ef943e840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b9ef94ac730" loc="231:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b9ef94b0570" loc="192:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b9ef9490880" loc="108:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b9ef94ae480" loc="202:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b9ef94b7790" loc="158:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b9ef94ba850" loc="138:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef94a8ce0" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef94a8ce0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef94a4020" loc="57:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef94a4020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9ef94a4940" loc="64:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef94a4020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9ef94d1a50" loc="76:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9ef94d11f0" loc="71:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9ef94d01f0" loc="82:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b9ef94c95b0" loc="61:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b9ef94c9d60" loc="67:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b9ef94c85a0" loc="72:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b9ef94c7510" loc="83:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b9ef94c5c60" loc="100:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef94c44d0" loc="117:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b9ef94c8d30" loc="77:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef94c30b0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b9ef94c4dc0" loc="134:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b9ef94cadf0" loc="56:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b9ef94c7cf0" loc="89:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b9ef94c54b0" loc="94:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b9ef9543860" loc="95:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef95420e0" loc="105:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/zdenial/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9ef9530a50" loc="78:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9ef952f1f0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b9ef955bb10" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9ef955b890" loc="110:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9ef95312d0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9ef955d0e0" loc="87:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b9ef955a490" loc="117:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9ef952f930" loc="85:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef95302b0" loc="73:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b9ef955c7c0" loc="99:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b9ef9531a70" loc="66:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef9533420" loc="48:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b9ef955d860" loc="92:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b9ef955b020" loc="101:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b9ef955c070" loc="94:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9ef9533b50" loc="53:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9ef97f7020" loc="44:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9ef97f7750" loc="45:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9ef97f90e0" loc="42:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9ef97f65e0" loc="47:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef97f97e0" loc="43:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9ef97f7e70" loc="46:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef97fa2b0" loc="40:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9ef97fa980" loc="41:/home/zdenial/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b9ef9851460" loc="90:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b9ef9851cc0" loc="98:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b9ef987aa40" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9ef989ae00" loc="56:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b9ef9898020" loc="73:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9ef989a570" loc="46:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9ef98996d0" loc="65:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9ef9898950" loc="81:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b9ef988c020" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9ef9893090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9ef988dd20" loc="79:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9ef9893090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b9ef988e020" loc="53:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b9ef988eb20" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9ef9893090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9ef988e8a0" loc="62:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9ef9893090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b9ef988d470" loc="70:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b9ef9893090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b9ef9917770" loc="62:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b9ef993f7a0" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef993f520" loc="65:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b9ef997d840" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef997d5c0" loc="78:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9ef997ad30" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef997a730" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef997aa60" loc="126:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9ef997cda0" loc="106:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b9ef997bce0" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef997b720" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef997ba50" loc="94:/home/zdenial/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b9ef99742e0" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9974060" loc="59:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b9ef9972510" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9972290" loc="71:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b9ef9971680" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9971400" loc="85:/home/zdenial/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/zdenial/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9ef99645e0" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9964020" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9964350" loc="75:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b9ef999ebb0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef999e5b0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef999e8e0" loc="125:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b9ef9963d20" loc="112:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9ef9961900" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9961680" loc="89:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9ef9960e00" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/zdenial/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9960820" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9ef9960b70" loc="100:/home/zdenial/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b9ef99c2b00" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef99c24f0" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b9ef99c2870" loc="31:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b9ef99c6c80" loc="15:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b9ef99c3b60" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef99c3560" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b9ef99c38d0" loc="23:/home/zdenial/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b9ef99e5190" loc="54:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b9ef99e89f0" loc="49:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b9ef99ee2b0" loc="56:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b9ef99ed720" loc="72:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b9ef99ea390" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef99ea110" loc="94:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b9ef99eb020" loc="79:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b9ef99eee20" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef99eeba0" loc="65:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b9ef99eabf0" loc="100:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b9ef99eb8d0" loc="85:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b9ef99f7d70" loc="71:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b9ef99f6750" loc="81:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b9ef99f7400" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b9ef99f7180" loc="62:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b9ef99f5350" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9ef99f50d0" loc="91:/home/zdenial/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b9ef99f2020" loc="62:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b9ef99f2c40" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef99f29c0" loc="69:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b9ef99f1730" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b9ef99f14b0" loc="80:/home/zdenial/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef9b7e7a0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef9b7e7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef9b7e9e0" loc="35:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9b7e9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b9ef9b79840" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9b7e9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b795c0" loc="63:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b9ef9b779d0" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b77750" loc="70:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b9ef9b7a5f0" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b7a370" loc="49:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef9b75d00" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9b7e9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b75710" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b9ef9b75a70" loc="78:/home/zdenial/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9b7e9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b9ef9b6be30" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b6b810" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b9ef9b6bba0" loc="65:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b9ef9b68020" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b69d70" loc="71:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b9ef9b6b020" loc="57:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b9ef9b6c560" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b9ef9b6c2e0" loc="52:/home/zdenial/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b9ef9b8a430" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b8a1b0" loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b9ef9b8c720" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b8c4a0" loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b9ef9b8fdc0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b9ef9b8fb40" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b9ef9b8f2a0" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b9ef9b8f020" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b9ef9b8e880" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b9ef9b8e600" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b9ef9b8b5e0" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b8b360" loc="88:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b9ef9b85630" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b9ef9b85020" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b9ef9b853a0" loc="59:/home/zdenial/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b9ef9b990c0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9b9aaa0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b9ef9b9adf0" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b9ef9b956d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9b950d0" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b9ef9b95440" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b9ef9b99ba0" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b9ef8560110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9b99920" loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b9ef9b96600" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9b96380" loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b9ef9b9a2a0" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9b9a020" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b9ef9b97720" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9b974a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b9ef9b910b0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9b9bde0" loc="47:/home/zdenial/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9ef9ba9360" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9bb2d40" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b9ef9ba90d0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9ef9ba86a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b9ef9ba5e70" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b9ef9ba5060" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b9ef9ba58a0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9ba5bd0" loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9ef9ba6840" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b9ef9ba6260" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b9ef9ba65b0" loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b9ef9ba9df0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b9ef9ba9b70" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/zdenial/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b9ef9bea0e0" loc="52:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b9ef9baa870" loc="46:/home/zdenial/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b9ef9be52e0" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9be5020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b9ef9be6710" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b9ef90e7ea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b9ef90e4c70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9be6410" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b9ef9be3620" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b9ef90e37c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b9ef90e1660"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9ef9be3320" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b9ef9baf070" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b9ef9bac0e0" loc="97:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b9ef9bad8f0" loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b9ef9bb1730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b9ef9bb07e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b9ef9baf8e0" loc="76:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b9ef9bad120" loc="83:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b9ef9bb0020" loc="56:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/zdenial/tinyos/tos/interfaces/State.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b9ef9bded00" loc="71:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b9ef9be0350" loc="56:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b9ef9bde530" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b9ef9bde2b0" loc="66:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b9ef9be0ac0" loc="61:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="58:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b9ef9be1020" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b9ef9be8c90" loc="45:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b9ef9be1ad0" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b9ef9be1850" loc="51:/home/zdenial/tinyos/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b9ef9c18870" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b9ef9c18290" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b9ef9c185e0" loc="106:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b9ef9c191f0" loc="93:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b9ef9c1b880" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b9ef9c1b210" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b9ef9c1b5f0" loc="87:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b9ef9c21c10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b9ef9c21990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b9ef9c19a70" loc="98:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b9ef9c1d730" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b9ef9c1d4b0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b9ef9c20d30" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b9ef9c20ab0" loc="61:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b9ef9c17ae0" loc="117:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b9ef9c1c9c0" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b9ef9c1c740" loc="78:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b9ef9c172b0" loc="112:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b9ef9c1e4d0" loc="66:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b9ef9b66360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b9ef9b66ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b9ef9c1ecc0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b9ef9c211f0" loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b9ef9c20390" loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b9ef9c1c020" loc="77:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b9ef9c154b0" loc="49:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9ef9c154b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b9ef9c15d70" loc="55:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b9ef9c5dae0" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9ef9c154b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b9ef9c5d530" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b9ef9c5d850" loc="63:/home/zdenial/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9ef9c154b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9ef9c80c10" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9c80990" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9ef9c7d710" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9c7d490" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b9ef9c53c60" loc="48:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b9ef9b66360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b9ef9b66ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef9c4f020" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef9c4f020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef9c4f260" loc="56:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9ef9c4be00" loc="109:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef9c4ee40" loc="78:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b9ef9c4b460" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9ef9c4de60" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b9ef9c4b1d0" loc="103:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9ef9c4d640" loc="88:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b9ef9c4a620" loc="116:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9ef9c4fdc0" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9ef9c4fb40" loc="66:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef9c4f260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef9c4e680" loc="73:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/zdenial/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b9ef9c3c560" loc="50:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b9ef9c3b4f0" loc="60:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b9ef9c3cd40" loc="55:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b9ef9c3dcd0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b9ef9c3d6f0" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b9ef9123590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b9ef9c3da40" loc="45:/home/zdenial/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b9ef9123970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b9ef9c7ae50" loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9ef9c84e80" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b9ef9c84020" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9ef9c84890" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9c84be0" loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9ef9c82610" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b9ef9c83770" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9ef9c82020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9c82370" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b9ef9c3fc30" loc="68:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b9ef9c3f470" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b9ef9c41ce0" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b9ef9c41420" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b9ef9e3b030" loc="54:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b9ef9e3a1f0" loc="66:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b9ef9e3b9d0" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9ef9e3b750" loc="61:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b9ef9e3c7a0" loc="53:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/zdenial/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b9ef9e17020" loc="52:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef9e6aac0" loc="72:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b9ef9e197c0" loc="47:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b9ef9e6a2a0" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b9ef9e6a020" loc="67:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b9ef9e19020" loc="42:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b9ef9e17820" loc="59:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/zdenial/tinyos/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b9ef9f5c2b0" loc="24:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b9ef9f5cb00" loc="31:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b9ef9f5b390" loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b9ef9f8db60" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9f8d580" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9f8d8d0" loc="62:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b9ef9f88dd0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9f88490" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9f887e0" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9ef9f88b30" loc="91:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9ef9f896b0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9f890d0" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9f89420" loc="82:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b9ef9f8e730" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b9ef90e8090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9f8e150" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9f8e4a0" loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b9ef9f8a2c0" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef9f8c930" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b9ef9f8cc80" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9ef9f8a020" loc="71:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9ef9fc6cf0" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b9ef9fc6380" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b9ef9fc6710" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9fc6a50" loc="70:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9ef9fc33c0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b9ef9fc26a0" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b9ef9fc2a30" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9ef9fc2d70" loc="82:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9ef9fc3110" loc="83:/home/zdenial/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b9ef9f71c90" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b9ef9f71a10" loc="45:/home/zdenial/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b9efa03e120" loc="39:/home/zdenial/tinyos/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b9ef943e420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b9ef943e840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b9efa045d70" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9efa045af0" loc="62:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b9efa0412a0" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9efa041020" loc="74:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b9efa042610" loc="68:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9efa041d30" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9efa041ab0" loc="81:/home/zdenial/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b9efa0b19d0" loc="80:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b9efa0c3420" loc="31:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b9efa0b7620" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9efa0b73a0" loc="62:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b9efa0ccaf0" loc="11:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b9efa0b5c50" loc="71:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b9efa0bc5e0" loc="49:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b9efa0c4540" loc="28:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b9efa0c12d0" loc="34:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b9efa0c5500" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b9efa0c5280" loc="25:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b9efa0c8a10" loc="21:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b9efa0bf070" loc="41:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b9efa0b6550" loc="66:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b9efa0b1270" loc="78:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b9efa0b9c30" loc="61:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b9efa0ac350" loc="91:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b9efa1069d0" loc="100:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b9efa0ca980" loc="14:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b9efa0c08b0" loc="38:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b9efa0be1f0" loc="45:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b9efa0c5dc0" loc="27:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b9efa0cd8c0" loc="7:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b9efa0b9460" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9efa0b91e0" loc="58:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b9efa0cd190" loc="6:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b9efa0b54d0" loc="69:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b9efa0b0190" loc="81:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b9efa0abb00" loc="94:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b9efa106270" loc="97:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b9efa0b3b90" loc="74:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b9efa0b08c0" loc="83:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b9efa0b7db0" loc="65:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b9efa0ad390" loc="87:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b9efa0c90e0" loc="15:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b9efa0bb7e0" loc="53:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b9efa0ae7b0" loc="86:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b9efa0b2ac0" loc="77:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b9efa0bede0" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b9efa0beb60" loc="46:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b9efa1072d0" loc="95:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b9efa0baa60" loc="57:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b9efa0b3420" loc="72:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b9efa0cc390" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9ef946f240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b9ef946f660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b9efa0cc110" loc="8:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b9ef946f240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b9ef946f660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b9efa0c0190" loc="37:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b9efa0c82a0" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9efa0c8020" loc="19:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b9efa0bf9d0" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9efa0bf750" loc="42:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b9efa0adb60" loc="90:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b9efa0c7b50" loc="24:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b9efa0c9850" loc="18:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b9efa0ba2a0" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b9efa0ba020" loc="54:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b9ef8561520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b9efa0ca270" loc="12:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b9efa0ae020" loc="84:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b9efa0b2350" loc="75:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b9efa0b6cc0" loc="68:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b9efa0bb020" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b9efa0bcd30" loc="50:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b9efa0c19f0" loc="35:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b9efa0c4c80" loc="29:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b9efa107a40" loc="96:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b9efa0c73c0" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b9efa0c7140" loc="22:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b9efa0acb10" loc="92:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b9efa0c3b50" loc="32:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b9efa0ab350" loc="93:/home/zdenial/tinyos/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9efa35a620" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9efa35a3a0" loc="13:/home/zdenial/tinyos/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b9efa347bc0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b9efa347280" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b9efa3475f0" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9efa347920" loc="10:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9efa346960" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9efa3463a0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9efa3466d0" loc="11:/home/zdenial/tinyos/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9efa397730" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9efa397730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9efa397970" loc="59:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9efa397970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b9efa3944d0" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9efa397970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9efa394250" loc="66:/home/zdenial/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9efa397970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b9efa39b5e0" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b9efa3dd9e0" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b9efa3dd020" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b9efa3dd750" loc="63:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b9efa3de7f0" loc="55:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b9efa3de020" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b9efa3e1d40" loc="49:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b9efa3f22a0" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9ef8561160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9efa3f2020" loc="58:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b9efa3f32a0" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9ef8c36090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9efa3f3020" loc="50:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9efa3ef2a0" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9efa3ef020" loc="72:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9efa3f02a0" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9efa3f0020" loc="65:/home/zdenial/tinyos/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:58" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b9ef91353c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b9ef9134a00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9efa576910" loc="53:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9efa576910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9efa573270" loc="61:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b9ef8561920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/zdenial/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b9efa70b600" loc="53:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b9efa70b600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b9efa7082a0" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9ef8c45980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b9efa70b600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b9efa708020" loc="64:/home/zdenial/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b9efa70b600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
